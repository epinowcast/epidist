[{"path":"https://epidist.epinowcast.org/dev/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 epidist authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://epidist.epinowcast.org/dev/articles/approx-inference.html","id":"background","dir":"Articles","previous_headings":"","what":"Background","title":"Approximate Bayesian inference in epidist","text":"epidist package uses Bayesian inference estimate delay distributions quantities. Bayesian inference amounts approximating posterior distribution parameter statistical model1. range methods exist perform approximation. default, epidist uses -U-Turn Sampler [NUTS; Hoffman, Gelman, et al. (2014)] Hamiltonian Monte Carlo (HMC) algorithm. NUTS example broader class Markov chain Monte Carlo (MCMC) methods. methods work simulating Markov chain target posterior distribution stationary distribution. MCMC algorithms run sufficiently many iterations, reached convergence, samples can treated drawn posterior distribution. Relevant posterior quantities expectations may computed using samples. drawback MCMC methods, like NUTS, simulations can quite computational intensive, especially complex models large data. epidist package built using brms (Bürkner 2017), stands “Bayesian Regression Models using Stan”, Stan (Carpenter et al. 2017) probabilistic programming language. Although NUTS primary inference algorithm used Stan, additional options available. additional inference algorithms also available epidist due dependence brms. vignette, first briefly describe alternative algorithms available (Section 2) well directing detailed resources. (Section 3) demonstrate application fitting simulated data, extracting comparing posterior distributions. comparing resulting inferences NUTS, hope help make informed decisions algorithm use applied problem.","code":""},{"path":"https://epidist.epinowcast.org/dev/articles/approx-inference.html","id":"other","dir":"Articles","previous_headings":"","what":"Alternative approximate inference algorithms","title":"Approximate Bayesian inference in epidist","text":"describe three alternative approximate Bayesian inference algorithms available use brms, therefore also available epidist. ’s worth noting inference algorithms may become available since vignette last updated. Please check brms package updates interested!","code":""},{"path":"https://epidist.epinowcast.org/dev/articles/approx-inference.html","id":"laplace-method","dir":"Articles","previous_headings":"2 Alternative approximate inference algorithms","what":"Laplace method","title":"Approximate Bayesian inference in epidist","text":"Laplace method approximates posterior distribution Gaussian distribution centered (default) posterior mode. Stan, Gaussian approximation constructed unconstrained parameter space (domain Gaussian distribution real line). Samples Gaussian approximation may transformed constrained parameter space. access Laplace method, specify algorithm = \"laplace\" within brms::brm(). See section Laplace Sampling CmdStan User’s Guide information.","code":""},{"path":"https://epidist.epinowcast.org/dev/articles/approx-inference.html","id":"variational-inference-using-advi","dir":"Articles","previous_headings":"2 Alternative approximate inference algorithms","what":"Variational inference using ADVI","title":"Approximate Bayesian inference in epidist","text":"Automatic differentiation variational inference [ADVI; Kucukelbir et al. (2017)] type variational inference [VI; Blei, Kucukelbir, McAuliffe (2017)] algorithm. VI works restricting family distributions, selecting member family similar posterior distribution. commonly, Stan, (dis-)similarity measured using Kullback–Leibler (KL) divergence. two options family distributions, either fully factorised Gaussian algorithm = \"meanfield\" Gaussian full-rank covariance matrix algorithm = \"fullrank\". See section Variational Inference using ADVI CmdStan User’s Guide information.","code":""},{"path":"https://epidist.epinowcast.org/dev/articles/approx-inference.html","id":"pathfinder","dir":"Articles","previous_headings":"2 Alternative approximate inference algorithms","what":"Pathfinder","title":"Approximate Bayesian inference in epidist","text":"Pathfinder method closely related variational inference, recently developed Zhang et al. (2022). works generating Gaussian approximations along step iterative optimisation algorithm (L-BFGS). KL divergence approximation posterior measured, best approximation chosen. Pareto smoothed importance sampling [PSIS; Vehtari et al. (2015)] optionally used resample draws chosen Gaussian distribution. multiple paths specified (using num_paths) Pathfinder algorithm run multiple times, initialising optimisation different points. resulting approximation mixture Gaussian distributions, rather single Gaussian distribution. See section Pathfinder Method Approximate Bayesian Inference CmdStan User’s Guide information.","code":""},{"path":"https://epidist.epinowcast.org/dev/articles/approx-inference.html","id":"demo","dir":"Articles","previous_headings":"","what":"Demonstration","title":"Approximate Bayesian inference in epidist","text":"demonstration, use following packages: access approximate inference methods used vignette need use cmdstanr backend brms (generally recommend using backend fitting models). , first need install CmdStan (see README details). can check everything need follows: can simulate data use fitting models. example data simulation process follows used Getting started epidist vignette, detail exactly happening , please consult vignette interested: now prepare data fitting marginal model, perform inference HMC: Note clarity specify algorithm = \"sampling\", call epidist(data = data) result since \"sampling\" (.e. HMC) default value algorithm argument. Now, fit2 marginal model using method Section 2. match four Markov chains length 1000 HMC , draw 4000 samples approximate posterior. Pathfinder algorithm set num_paths = 1. Although testing Laplace ADVI methods ran without problem cases, found Pathfinder often produced “Error evaluating model log probability: Non-finite gradient.”. Although save_single_paths option available, may allowed recovery individual Pathfinder paths (therefore removing faulty paths), appear working currently3. now extract posterior distribution delay parameters fitted model inference method. Thankfully, algorithm implemented sample draws posterior distribution, post-processing simple.","code":"library(epidist) library(ggplot2) library(dplyr) library(purrr) library(tidyr) library(tibble) library(tidybayes) library(cmdstanr) # nolint cmdstanr::cmdstan_version() #> [1] \"2.36.0\" meanlog <- 1.8 sdlog <- 0.5 obs_time <- 25 sample_size <- 200  obs_cens_trunc_samp <- simulate_gillespie(seed = 101) |>   simulate_secondary(     meanlog = meanlog,     sdlog = sdlog   ) |>   mutate(     ptime_lwr = floor(.data$ptime),     ptime_upr = .data$ptime_lwr + 1,     stime_lwr = floor(.data$stime),     stime_upr = .data$stime_lwr + 1,     obs_time = obs_time   ) |>   filter(.data$stime_upr <= .data$obs_time) |>   slice_sample(n = sample_size, replace = FALSE) linelist_data <- as_epidist_linelist_data(   obs_cens_trunc_samp$ptime_lwr,   obs_cens_trunc_samp$ptime_upr,   obs_cens_trunc_samp$stime_lwr,   obs_cens_trunc_samp$stime_upr,   obs_time = obs_cens_trunc_samp$obs_time )  data <- as_epidist_marginal_model(linelist_data)  t <- proc.time() fit_hmc <- epidist(data = data, algorithm = \"sampling\", backend = \"cmdstanr\") time_hmc <- proc.time() - t t <- proc.time() fit_laplace <- epidist(   data = data, algorithm = \"laplace\", draws = 4000, backend = \"cmdstanr\" ) time_laplace <- proc.time() - t  t <- proc.time() fit_advi <- epidist(   data = data, algorithm = \"meanfield\", draws = 4000, backend = \"cmdstanr\" ) time_advi <- proc.time() - t t <- proc.time() fit_pathfinder <- epidist(   data = data, algorithm = \"pathfinder\", draws = 4000, num_paths = 1,   backend = \"cmdstanr\" ) #> Warning: Number of PSIS draws is larger than the total number of draws returned by the single Pathfinders. This is likely unintentional and leads to re-sampling from the same draws.  #> Path [1] :Initial log joint density = -2065.792583  #> Error evaluating model log probability: Non-finite gradient.  #> Error evaluating model log probability: Non-finite gradient.  #> Error evaluating model log probability: Non-finite gradient.  #> Path [1] : Iter      log prob        ||dx||      ||grad||     alpha      alpha0      # evals       ELBO    Best ELBO        Notes   #>              12      -3.910e+02      1.073e-04   4.453e-03    1.000e+00  1.000e+00       301 -3.950e+02 -3.950e+02                    #> Path [1] :Best Iter: [10] ELBO (-395.015688) evaluations: (301)  #> Finished in  0.2 seconds. time_pathfinder <- proc.time() - t fits <- list(   HMC = fit_hmc,   Laplace = fit_laplace,   ADVI = fit_advi,   Pathfinder = fit_pathfinder )  draws <- imap(fits, function(fit, name) {   draws <- fit |>     predict_delay_parameters() |>     as.data.frame() |>     pivot_longer(       cols = c(\"mu\", \"sigma\", \"mean\", \"sd\"),       names_to = \"parameter\",       values_to = \"value\"     ) |>     filter(parameter %in% c(\"mu\", \"sigma\")) |>     mutate(method = as.factor(name))   return(draws) })  draws <- bind_rows(draws)"},{"path":"https://epidist.epinowcast.org/dev/articles/approx-inference.html","id":"comparison-of-parameter-posterior-distributions","dir":"Articles","previous_headings":"3 Demonstration","what":"Comparison of parameter posterior distributions","title":"Approximate Bayesian inference in epidist","text":"mean estimated value parameter, method follows. comprehensively, estimated posterior distributions shown Figure 3.1. Figure 3.1: Estimated posterior distributions mu sigma parameters using inference method, shown using tidybayes::stat_slabinterval().","code":"pars <- draws |>   group_by(method, parameter) |>   summarise(value = mean(value)) |>   pivot_wider(names_from = parameter, values_from = value) |>   ungroup()  pars #> # A tibble: 4 × 3 #>   method        mu sigma #>   <fct>      <dbl> <dbl> #> 1 HMC         1.75 0.461 #> 2 Laplace     1.74 0.455 #> 3 ADVI        1.77 0.513 #> 4 Pathfinder  1.74 0.456 p_posterior <- draws |>   ggplot(aes(x = value, col = method)) +   stat_slabinterval(density = \"histogram\", breaks = 30, alpha = 0.8) +   scale_colour_manual(values = c(\"#56B4E9\", \"#009E73\", \"#E69F00\", \"#CC79A7\")) +   facet_grid(method ~ parameter, scales = \"free_x\") +   theme_minimal() +   guides(fill = \"none\") +   labs(x = \"\", y = \"\", col = \"Method\") +   theme(legend.position = \"bottom\") p_posterior"},{"path":"https://epidist.epinowcast.org/dev/articles/approx-inference.html","id":"comparison-of-resulting-delay-distributions","dir":"Articles","previous_headings":"3 Demonstration","what":"Comparison of resulting delay distributions","title":"Approximate Bayesian inference in epidist","text":"Figure 3.2 shows different mu sigma posterior mean estimates inference method alter estimated delay distribution. Figure 3.2: Delay probability density functions obtained based posterior mean estimated mu sigma parameters.","code":"p_delay_pdf <- pmap_df(   filter(pars), ~ tibble(     x = seq(0, 25, by = 0.1),     method = ..1, density = dlnorm(x, ..2, ..3)   ) ) |>   ggplot(aes(x = x, y = density, col = method)) +   geom_line(linewidth = 1) +   scale_color_manual(values = c(\"#56B4E9\", \"#009E73\", \"#E69F00\", \"#CC79A7\")) +   theme_minimal() +   labs(x = \"\", y = \"\", col = \"Method\") +   theme(legend.position = \"bottom\") p_delay_pdf"},{"path":"https://epidist.epinowcast.org/dev/articles/approx-inference.html","id":"comparison-of-time-taken","dir":"Articles","previous_headings":"3 Demonstration","what":"Comparison of time taken","title":"Approximate Bayesian inference in epidist","text":"example, HMC took longer time run methods Pathfinder fastest running method. said, even HMC computation time case unlikely prohibitive.","code":"times <- list(   HMC = time_hmc,   Laplace = time_laplace,   ADVI = time_advi,   Pathfinder = time_pathfinder )  times #> $HMC #>    user  system elapsed  #>  23.964   0.882  24.665  #>  #> $Laplace #>    user  system elapsed  #>   1.060   0.299   1.525  #>  #> $ADVI #>    user  system elapsed  #>   1.163   0.114   1.282  #>  #> $Pathfinder #>    user  system elapsed  #>   0.474   0.108   0.666"},{"path":"https://epidist.epinowcast.org/dev/articles/approx-inference.html","id":"conclusion","dir":"Articles","previous_headings":"","what":"Conclusion","title":"Approximate Bayesian inference in epidist","text":"range alternative approximation algorithms available, ease use, attractive feature brms. found algorithms produce reasonable approximations far less time HMC. course, vignette includes one example, thorough investigation required make specific recommendations. said, currently recommend use Pathfinder algorithm due unstable performance testing, early stage software implementation.","code":""},{"path":[]},{"path":"https://epidist.epinowcast.org/dev/articles/ebola.html","id":"using-the-cmdstanr-backend","dir":"Articles","previous_headings":"","what":"Using the cmdstanr backend","title":"Using epidist to estimate delay between symptom onset and positive test for an Ebola outbreak in Sierra Leone","text":"models explored vignette relatively complex, recommend using cmdstanr backend fitting models typically performant default rstan backend. use cmdstanr backend, first need install CmdStan (see README details). can check everything need follows:","code":"cmdstanr::cmdstan_version() #> [1] \"2.36.0\""},{"path":"https://epidist.epinowcast.org/dev/articles/ebola.html","id":"data-preparation","dir":"Articles","previous_headings":"","what":"Data preparation","title":"Using epidist to estimate delay between symptom onset and positive test for an Ebola outbreak in Sierra Leone","text":"begin loading Ebola line list data: data 8358 rows, corresponding unique case report ID (id). columns data , age, sex, dates Ebola symptom onset positive sample, district chiefdom. Figure 2.1 shows dates symptom onset sample testing cases across district. (figure, filter every 5th case order avoid overplotting.) can see start time course epidemic varies across districts. Figure 2.1: Primary secondary event times every 5th case, 14 districts Sierra Leone.","code":"data(\"sierra_leone_ebola_data\") head(sierra_leone_ebola_data) #> # A tibble: 6 × 7 #>      id   age sex    date_of_symptom_onset date_of_sample_tested district #>   <int> <dbl> <chr>  <date>                <date>                <chr>    #> 1     1    20 Female 2014-05-18            2014-05-23            Kailahun #> 2     2    42 Female 2014-05-20            2014-05-25            Kailahun #> 3     3    45 Female 2014-05-20            2014-05-25            Kailahun #> 4     4    15 Female 2014-05-21            2014-05-26            Kailahun #> 5     5    19 Female 2014-05-21            2014-05-26            Kailahun #> 6     6    55 Female 2014-05-21            2014-05-26            Kailahun #> # ℹ 1 more variable: chiefdom <chr>  fraction <- 5 ndistrict <- length(unique(sierra_leone_ebola_data$district)) p_outbreak <- sierra_leone_ebola_data |>   filter(id %% fraction == 0) |>   ggplot() +   geom_segment(     aes(       x = date_of_symptom_onset, xend = date_of_sample_tested,       y = id, yend = id     ),     col = \"grey\"   ) +   geom_point(aes(x = date_of_symptom_onset, y = id), col = \"#56B4E9\") +   geom_point(aes(x = date_of_sample_tested, y = id), col = \"#009E73\") +   facet_wrap(district ~ ., ncol = 2) +   labs(x = \"\", y = \"Case ID\") +   theme_minimal() p_outbreak"},{"path":"https://epidist.epinowcast.org/dev/articles/ebola.html","id":"fitting-sex-district-stratified-delay-distributions","dir":"Articles","previous_headings":"","what":"Fitting sex-district stratified delay distributions","title":"Using epidist to estimate delay between symptom onset and positive test for an Ebola outbreak in Sierra Leone","text":"understand delay time symptom onset time sample testing, fit range statistical models using epidist package. models, vary parameters delay distribution sex district. lognormal delay distribution parameters mean standard deviation underlying normal distribution. , \\(\\mu\\) \\(\\sigma\\) \\(x \\sim \\mathcal{N}(\\mu, \\sigma)\\) \\(\\exp(x)\\) lognormal distribution.","code":""},{"path":"https://epidist.epinowcast.org/dev/articles/ebola.html","id":"data-preparation-1","dir":"Articles","previous_headings":"3 Fitting sex-district stratified delay distributions","what":"Data preparation","title":"Using epidist to estimate delay between symptom onset and positive test for an Ebola outbreak in Sierra Leone","text":"prepare data, begin selecting relevant columns: time , filter data complete cases (.e. rows data missing values1). simulate middle outbreak filter data include cases 31st January 2015. marginal model used adjusting truncation. check working try filtering instead date_of_symptom_onset rerunning. prepare data use epidist package converting data epidist_linelist_data object: call as_epidist_linelist_data() made assumptions data. First, supply upper bounds primary secondary events (pdate_upr sdate_upr), assumed upper bounds one day lower bounds. Second, also supply observation time column (obs_date), assumed observation time maximum secondary event upper bounds.","code":"obs_cens <- select(   sierra_leone_ebola_data,   id, date_of_symptom_onset, date_of_sample_tested, age, sex, district )  head(obs_cens) #> # A tibble: 6 × 6 #>      id date_of_symptom_onset date_of_sample_tested   age sex    district #>   <int> <date>                <date>                <dbl> <chr>  <chr>    #> 1     1 2014-05-18            2014-05-23               20 Female Kailahun #> 2     2 2014-05-20            2014-05-25               42 Female Kailahun #> 3     3 2014-05-20            2014-05-25               45 Female Kailahun #> 4     4 2014-05-21            2014-05-26               15 Female Kailahun #> 5     5 2014-05-21            2014-05-26               19 Female Kailahun #> 6     6 2014-05-21            2014-05-26               55 Female Kailahun n <- nrow(obs_cens) obs_cens <- obs_cens[complete.cases(obs_cens), ] n_complete <- nrow(obs_cens) obs_cens_trunc <- filter(   obs_cens,   date_of_sample_tested <= as.Date(\"2015-01-31\") ) linelist_data <- as_epidist_linelist_data(   obs_cens_trunc,   pdate_lwr = \"date_of_symptom_onset\",   sdate_lwr = \"date_of_sample_tested\" )"},{"path":"https://epidist.epinowcast.org/dev/articles/ebola.html","id":"model-fitting","dir":"Articles","previous_headings":"3 Fitting sex-district stratified delay distributions","what":"Model fitting","title":"Using epidist to estimate delay between symptom onset and positive test for an Ebola outbreak in Sierra Leone","text":"prepare data use marginal model, define data epidist_marginal_model model object: Now ready fit marginal model. Note set obs_time_threshold 1 rather default 2 confident data contains maximum observable delay. default higher values sensible. Try models using as_epidist_latent_model() latent model (another approach adjusting truncation censoring) as_epidist_naive_model() naive model doesn’t account truncation censoring.","code":"obs_prep <- as_epidist_marginal_model(linelist_data, obs_time_threshold = 1) head(obs_prep) #> # A tibble: 6 × 21 #>   ptime_lwr ptime_upr stime_lwr stime_upr obs_time    id pdate_lwr  sdate_lwr  #>       <dbl>     <dbl>     <dbl>     <dbl>    <dbl> <int> <date>     <date>     #> 1         0         1         5         6      259     1 2014-05-18 2014-05-23 #> 2         2         3         7         8      259     2 2014-05-20 2014-05-25 #> 3         2         3         7         8      259     3 2014-05-20 2014-05-25 #> 4         3         4         8         9      259     4 2014-05-21 2014-05-26 #> 5         3         4         8         9      259     5 2014-05-21 2014-05-26 #> 6         3         4         8         9      259     6 2014-05-21 2014-05-26 #> # ℹ 13 more variables: age <dbl>, sex <chr>, district <chr>, pdate_upr <date>, #> #   sdate_upr <date>, obs_date <date>, pwindow <dbl>, swindow <dbl>, #> #   relative_obs_time <dbl>, orig_relative_obs_time <dbl>, delay_lwr <dbl>, #> #   delay_upr <dbl>, n <dbl>"},{"path":"https://epidist.epinowcast.org/dev/articles/ebola.html","id":"intercept-only-model","dir":"Articles","previous_headings":"3 Fitting sex-district stratified delay distributions > 3.2 Model fitting","what":"Intercept-only model","title":"Using epidist to estimate delay between symptom onset and positive test for an Ebola outbreak in Sierra Leone","text":"start fitting single lognormal distribution data. model assumes single distribution describes delays data, regardless case’s location, sex, covariates. , set formula = mu ~ 1 place model intercept parameter (.e. ~ 1 R formula syntax) mu parameter lognormal distribution specified using family = lognormal(). (Note lognormal distribution two distributional parameters mu sigma. model explicitly placed sigma, constant model sigma ~ 1 assumed.) fit object brmsfit object, associated range methods. See methods(class = \"brmsfit\") details. example, may use summary() view information fitted model, including posterior estimates regression coefficients:","code":"fit <- epidist(   data = obs_prep,   formula = mu ~ 1,   family = lognormal(),   algorithm = \"sampling\",   chains = 2,   cores = 2,   refresh = ifelse(interactive(), 250, 0),   seed = 1,   backend = \"cmdstanr\" ) #> Running MCMC with 2 parallel chains... #> Chain 2 finished in 6.3 seconds. #> Chain 1 finished in 7.1 seconds. #>  #> Both chains finished successfully. #> Mean chain execution time: 6.7 seconds. #> Total execution time: 7.3 seconds. summary(fit) #>  Family: marginal_lognormal  #>   Links: mu = identity; sigma = log  #> Formula: delay_lwr | weights(n) + vreal(relative_obs_time, pwindow, swindow, delay_upr) ~ 1  #>          sigma ~ 1 #>    Data: transformed_data (Number of observations: 380)  #>   Draws: 2 chains, each with iter = 2000; warmup = 1000; thin = 1; #>          total post-warmup draws = 2000 #>  #> Regression Coefficients: #>                 Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS #> Intercept           1.65      0.01     1.64     1.67 1.00     1946     1261 #> sigma_Intercept    -0.56      0.01    -0.58    -0.54 1.00     1751     1160 #>  #> Draws were sampled using sample(hmc). For each parameter, Bulk_ESS #> and Tail_ESS are effective sample size measures, and Rhat is the potential #> scale reduction factor on split chains (at convergence, Rhat = 1)."},{"path":"https://epidist.epinowcast.org/dev/articles/ebola.html","id":"sex-stratified-model","dir":"Articles","previous_headings":"3 Fitting sex-district stratified delay distributions > 3.2 Model fitting","what":"Sex-stratified model","title":"Using epidist to estimate delay between symptom onset and positive test for an Ebola outbreak in Sierra Leone","text":"fit model varies parameters fitted lognormal distribution, mu sigma, sex alter formula specification include fixed effects sex ~ 1 + sex follows: summary model shows males tend longer delays (posterior mean sexMale 0.04) greater delay variation (posterior mean sigma_sexMale 0.02). sexMale effect, 95% credible interval greater zero, whereas sigma_sexMale effect 95% credible interval includes zero. important note estimates represent average observed data, individual delays men women vary significantly.","code":"fit_sex <- epidist(   data = obs_prep,   formula = bf(mu ~ 1 + sex, sigma ~ 1 + sex),   family = lognormal(),   algorithm = \"sampling\",   chains = 2,   cores = 2,   refresh = ifelse(interactive(), 250, 0),   seed = 1,   backend = \"cmdstanr\" ) #> Running MCMC with 2 parallel chains... #> Chain 2 finished in 14.3 seconds. #> Chain 1 finished in 14.7 seconds. #>  #> Both chains finished successfully. #> Mean chain execution time: 14.5 seconds. #> Total execution time: 14.8 seconds. summary(fit_sex) #>  Family: marginal_lognormal  #>   Links: mu = identity; sigma = log  #> Formula: delay_lwr | weights(n) + vreal(relative_obs_time, pwindow, swindow, delay_upr) ~ sex  #>          sigma ~ 1 + sex #>    Data: transformed_data (Number of observations: 584)  #>   Draws: 2 chains, each with iter = 2000; warmup = 1000; thin = 1; #>          total post-warmup draws = 2000 #>  #> Regression Coefficients: #>                 Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS #> Intercept           1.63      0.01     1.61     1.65 1.00     2033     1531 #> sigma_Intercept    -0.58      0.01    -0.60    -0.55 1.00     2072     1530 #> sexMale             0.04      0.01     0.01     0.07 1.00     2283     1568 #> sigma_sexMale       0.02      0.02    -0.02     0.06 1.00     2001     1546 #>  #> Draws were sampled using sample(hmc). For each parameter, Bulk_ESS #> and Tail_ESS are effective sample size measures, and Rhat is the potential #> scale reduction factor on split chains (at convergence, Rhat = 1)."},{"path":"https://epidist.epinowcast.org/dev/articles/ebola.html","id":"sex-district-stratified-model","dir":"Articles","previous_headings":"3 Fitting sex-district stratified delay distributions > 3.2 Model fitting","what":"Sex-district stratified model","title":"Using epidist to estimate delay between symptom onset and positive test for an Ebola outbreak in Sierra Leone","text":"Finally, fit model also varies district. , use district level random effects, assumed drawn shared normal distribution, within model mu sigma parameters. random effects specified including (1 | district) formulas: longer running model (~ 2 minutes) reduced number iterations real world use cases may sufficient. model, along looking summary(), may also use brms::ranef() function look estimates random effects:","code":"fit_sex_district <- epidist(   data = obs_prep,   formula = bf(     mu ~ 1 + sex + (1 | district),     sigma ~ 1 + sex + (1 | district)   ),   family = lognormal(),   algorithm = \"sampling\",   chains = 2,   cores = 2,   iter = 1000,   refresh = ifelse(interactive(), 250, 0),   seed = 1,   backend = \"cmdstanr\" ) #> Running MCMC with 2 parallel chains... #> Chain 2 finished in 205.0 seconds. #> Chain 1 finished in 221.7 seconds. #>  #> Both chains finished successfully. #> Mean chain execution time: 213.4 seconds. #> Total execution time: 221.9 seconds. summary(fit_sex_district) #>  Family: marginal_lognormal  #>   Links: mu = identity; sigma = log  #> Formula: delay_lwr | weights(n) + vreal(relative_obs_time, pwindow, swindow, delay_upr) ~ sex + (1 | district)  #>          sigma ~ 1 + sex + (1 | district) #>    Data: transformed_data (Number of observations: 1296)  #>   Draws: 2 chains, each with iter = 1000; warmup = 500; thin = 1; #>          total post-warmup draws = 1000 #>  #> Multilevel Hyperparameters: #> ~district (Number of levels: 14)  #>                     Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS #> sd(Intercept)           0.16      0.04     0.10     0.24 1.00      258      373 #> sd(sigma_Intercept)     0.20      0.05     0.13     0.33 1.04      165      332 #>  #> Regression Coefficients: #>                 Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS #> Intercept           1.63      0.04     1.54     1.71 1.01      257      466 #> sigma_Intercept    -0.66      0.06    -0.79    -0.55 1.00      264      411 #> sexMale             0.04      0.01     0.01     0.07 1.00     1312      691 #> sigma_sexMale       0.02      0.02    -0.02     0.06 1.00     1616      761 #>  #> Draws were sampled using sample(hmc). For each parameter, Bulk_ESS #> and Tail_ESS are effective sample size measures, and Rhat is the potential #> scale reduction factor on split chains (at convergence, Rhat = 1). ranef(fit_sex_district) #> $district #> , , Intercept #>  #>                    Estimate  Est.Error         Q2.5       Q97.5 #> Bo            -3.838507e-03 0.05347376 -0.110682275  0.10185087 #> Bombali        2.581286e-01 0.04472119  0.174180825  0.34849830 #> Bonthe        -1.862213e-02 0.13306808 -0.299108475  0.24800622 #> Kailahun      -9.955586e-05 0.04513036 -0.091952980  0.08956600 #> Kambia        -5.973642e-02 0.05880347 -0.176033550  0.05695112 #> Kenema        -2.480167e-01 0.05043556 -0.348884675 -0.15341470 #> Koinadugu      1.856984e-01 0.07527595  0.044445255  0.33407015 #> Kono          -7.707571e-02 0.05419185 -0.179583950  0.03888698 #> Moyamba       -7.067646e-03 0.06004876 -0.125565400  0.11777542 #> Port Loko      1.454416e-01 0.04598757  0.055714808  0.23771160 #> Pujehun       -5.130905e-02 0.09275505 -0.230238975  0.13392550 #> Tonkolili      8.347059e-02 0.04697200 -0.008465083  0.17489370 #> Western Rural -2.038493e-02 0.04587658 -0.110987350  0.07276795 #> Western Urban -1.505765e-01 0.04555376 -0.242774150 -0.06006802 #>  #> , , sigma_Intercept #>  #>                  Estimate  Est.Error        Q2.5      Q97.5 #> Bo             0.18896215 0.07296301  0.05330906  0.3352376 #> Bombali       -0.22756598 0.06220791 -0.34967355 -0.0960459 #> Bonthe        -0.13516201 0.20615938 -0.57906983  0.2538547 #> Kailahun      -0.33400693 0.06548897 -0.45963662 -0.1942981 #> Kambia         0.05900935 0.08002008 -0.09201563  0.2221611 #> Kenema         0.11135971 0.06839117 -0.01683754  0.2521803 #> Koinadugu      0.07387654 0.09657278 -0.11703302  0.2542935 #> Kono           0.03210721 0.07086334 -0.09476273  0.1735740 #> Moyamba        0.09484336 0.07423207 -0.04620333  0.2429108 #> Port Loko     -0.02356363 0.06397508 -0.14071705  0.1052845 #> Pujehun       -0.09048644 0.15079205 -0.37209650  0.2205086 #> Tonkolili     -0.15436247 0.06547716 -0.27559662 -0.0215666 #> Western Rural  0.07162684 0.06427340 -0.04773832  0.2033333 #> Western Urban  0.26897389 0.06036981  0.15346425  0.3954492"},{"path":"https://epidist.epinowcast.org/dev/articles/ebola.html","id":"posterior-expectation","dir":"Articles","previous_headings":"3 Fitting sex-district stratified delay distributions","what":"Posterior expectations","title":"Using epidist to estimate delay between symptom onset and positive test for an Ebola outbreak in Sierra Leone","text":"go summaries fitted model, recommend using tidybayes package. example, obtain posterior expectation delay distribution, censoring truncation, may use modelr::data_grid() function combination tidybayes::add_epred_draws() function. tidybayes::add_epred_draws() function uses epidist_gen_posterior_predict() function generate posterior prediction function lognormal() distribution. Figure 3.1 show posterior expectation delay distribution three fitted models. Figure 3.1B illustrates higher mean men compared women. Figure 3.1: fitted posterior expectations delay distribution model.","code":"add_marginal_dummy_vars <- function(data) {   return(     mutate(       data,       relative_obs_time = NA,       pwindow = NA,       delay_upr = NA,       swindow = NA     )   ) }  expectation_draws <- obs_prep |>   data_grid(NA) |>   add_marginal_dummy_vars() |>   add_epred_draws(fit, dpar = TRUE)  epred_base_figure <- expectation_draws |>   ggplot(aes(x = .epred)) +   stat_halfeye() +   labs(x = \"\", y = \"\", title = \"Intercept-only\", tag = \"A\") +   theme_minimal()  expectation_draws_sex <- obs_prep |>   data_grid(sex) |>   add_marginal_dummy_vars() |>   add_epred_draws(fit_sex, dpar = TRUE)  epred_sex_figure <- expectation_draws_sex |>   ggplot(aes(x = .epred, y = sex)) +   stat_halfeye() +   labs(x = \"\", y = \"\", title = \"Sex-stratified\", tag = \"B\") +   theme_minimal()  expectation_draws_sex_district <- obs_prep |>   data_grid(sex, district) |>   add_marginal_dummy_vars() |>   add_epred_draws(fit_sex_district, dpar = TRUE)  epred_sex_district_figure <- expectation_draws_sex_district |>   ggplot(aes(x = .epred, y = district)) +   stat_pointinterval() +   facet_grid(. ~ sex) +   labs(     x = \"Posterior expectation of the delay\", y = \"\",     title = \"Sex-district-stratified\", tag = \"C\"   ) +   scale_y_discrete(limits = rev) +   theme_minimal() epred_base_figure / epred_sex_figure / epred_sex_district_figure +   plot_layout(heights = c(1, 1.5, 2.5))"},{"path":"https://epidist.epinowcast.org/dev/articles/ebola.html","id":"linear-predictor-posteriors","dir":"Articles","previous_headings":"3 Fitting sex-district stratified delay distributions","what":"Linear predictor posteriors","title":"Using epidist to estimate delay between symptom onset and positive test for an Ebola outbreak in Sierra Leone","text":"tidybayes package also allows users generate draws linear predictors distributional parameters using tidybayes::add_linpred_draws(). example, mu parameter sex-district stratified model (Figure 3.2): Figure 3.2: posterior distribution linear predictor mu parameter within sex-district stratified model. posterior expectations Section 3.3 function mu linear predictor posterior distribution sigma linear predictor posterior distribution.","code":"linpred_draws_sex_district <- obs_prep |>   as.data.frame() |>   data_grid(sex, district) |>   add_marginal_dummy_vars() |>   add_linpred_draws(fit_sex_district, dpar = TRUE)  p_linpred_sex_district <- linpred_draws_sex_district |>   ggplot(aes(x = mu, y = district)) +   stat_pointinterval() +   facet_grid(. ~ sex) +   labs(x = \"Posterior of the mu linear predictor\", y = \"\") +   scale_y_discrete(limits = rev) +   theme_minimal() p_linpred_sex_district"},{"path":"https://epidist.epinowcast.org/dev/articles/ebola.html","id":"delay-posterior-distributions","dir":"Articles","previous_headings":"3 Fitting sex-district stratified delay distributions","what":"Delay posterior distributions","title":"Using epidist to estimate delay between symptom onset and positive test for an Ebola outbreak in Sierra Leone","text":"Posterior predictions delay distribution important output analysis epidist package. section, demonstrate produce either discrete probability mass function representation, continuous probability density function representation delay distribution.","code":""},{"path":"https://epidist.epinowcast.org/dev/articles/ebola.html","id":"discrete-probability-mass-function","dir":"Articles","previous_headings":"3 Fitting sex-district stratified delay distributions > 3.5 Delay posterior distributions","what":"Discrete probability mass function","title":"Using epidist to estimate delay between symptom onset and positive test for an Ebola outbreak in Sierra Leone","text":"generate discrete probability mass function (PMF) predict delay distribution observed daily censoring right truncation. , set pwindow swindow 1 daily censoring, relative_obs_time Inf right truncation. Figure 3.3 shows result, delays greater 30 omitted figure. Figure 3.3: Posterior predictions discrete probability mass function fitted models.","code":"add_marginal_pmf_vars <- function(data) {   return(     mutate(       data,       relative_obs_time = Inf,       pwindow = 1,       swindow = 1,       delay_upr = NA     )   ) }  draws_pmf <- obs_prep |>   add_marginal_pmf_vars() |>   add_predicted_draws(fit, ndraws = 1000)  pmf_base_figure <- ggplot(draws_pmf, aes(x = .prediction)) +   geom_bar(aes(y = after_stat(count / sum(count)))) +   labs(x = \"\", y = \"\", title = \"Intercept-only\", tag = \"A\") +   scale_x_continuous(limits = c(0, 30)) +   theme_minimal()  draws_sex_pmf <- obs_prep |>   data_grid(sex) |>   add_marginal_pmf_vars() |>   add_predicted_draws(fit_sex, ndraws = 1000)  pmf_sex_figure <- draws_sex_pmf |>   ggplot(aes(x = .prediction)) +   geom_bar(aes(y = after_stat(     count / ave(count, PANEL, FUN = sum)   ))) +   labs(x = \"\", y = \"\", title = \"Sex-stratified\", tag = \"B\") +   facet_grid(. ~ sex) +   scale_x_continuous(limits = c(0, 30)) +   theme_minimal()  draws_sex_district_pmf <- obs_prep |>   data_grid(sex, district) |>   add_marginal_pmf_vars() |>   add_predicted_draws(fit_sex_district, ndraws = 1000)  pmf_sex_district_figure <- draws_sex_district_pmf |>   mutate(     district = case_when(       district == \"Port Loko\" ~ \"Port\\nLoko\",       district == \"Western Rural\" ~ \"Western\\nRural\",       district == \"Western Urban\" ~ \"Western\\nUrban\",       .default = district     )   ) |>   ggplot(aes(x = .prediction)) +   geom_bar(aes(y = after_stat(count / ave(count, PANEL, FUN = sum)))) +   labs(     x = \"PMF with daily censoring and no truncation\", y = \"\",     title = \"Sex-district-stratified\", tag = \"C\"   ) +   facet_grid(district ~ sex) +   scale_x_continuous(limits = c(0, 30)) +   theme_minimal() pmf_base_figure / pmf_sex_figure / pmf_sex_district_figure +   plot_layout(heights = c(1, 1.5, 5.5))"},{"path":"https://epidist.epinowcast.org/dev/articles/ebola.html","id":"continuous-probability-density-function","dir":"Articles","previous_headings":"3 Fitting sex-district stratified delay distributions > 3.5 Delay posterior distributions","what":"Continuous probability density function","title":"Using epidist to estimate delay between symptom onset and positive test for an Ebola outbreak in Sierra Leone","text":"posterior predictive distribution truncation censoring. produce continuous delay times (Figure 3.4): Figure 3.4: Posterior predictions continuous probability density function fitted models.","code":"add_marginal_pdf_vars <- function(data) {   return(     mutate(       data,       relative_obs_time = Inf,       pwindow = 0,       swindow = 0,       delay_upr = NA     )   ) }  draws_pdf <- obs_prep |>   add_marginal_pdf_vars() |>   add_predicted_draws(fit, ndraws = 1000)  pdf_base_figure <- ggplot(draws_pdf, aes(x = .prediction)) +   geom_density() +   labs(x = \"\", y = \"\", title = \"Intercept-only\", tag = \"A\") +   scale_x_continuous(limits = c(0, 30)) +   theme_minimal()  draws_sex_pdf <- obs_prep |>   data_grid(sex) |>   add_marginal_pdf_vars() |>   add_predicted_draws(fit_sex, ndraws = 1000)  pdf_sex_figure <- draws_sex_pdf |>   ggplot(aes(x = .prediction)) +   geom_density() +   labs(x = \"\", y = \"\", title = \"Sex-stratified\", tag = \"B\") +   facet_grid(. ~ sex) +   scale_x_continuous(limits = c(0, 30)) +   theme_minimal()  draws_sex_district_pdf <- obs_prep |>   data_grid(sex, district) |>   add_marginal_pdf_vars() |>   add_predicted_draws(fit_sex_district, ndraws = 1000)  pdf_sex_district_figure <- draws_sex_district_pdf |>   mutate(     district = case_when(       district == \"Port Loko\" ~ \"Port\\nLoko\",       district == \"Western Rural\" ~ \"Western\\nRural\",       district == \"Western Urban\" ~ \"Western\\nUrban\",       .default = district     )   ) |>   ggplot(aes(x = .prediction)) +   geom_density() +   labs(     x = \"PDF with no censoring and no truncation\", y = \"\",     title = \"Sex-district-stratified\", tag = \"C\"   ) +   facet_grid(district ~ sex) +   scale_x_continuous(limits = c(0, 30)) +   theme_minimal() pdf_base_figure / pdf_sex_figure / pdf_sex_district_figure +   plot_layout(heights = c(1, 1.5, 5.5))"},{"path":"https://epidist.epinowcast.org/dev/articles/ebola.html","id":"conclusion","dir":"Articles","previous_headings":"","what":"Conclusion","title":"Using epidist to estimate delay between symptom onset and positive test for an Ebola outbreak in Sierra Leone","text":"vignette, demonstrate epidist package can used fit delay distribution models. models can stratified covariates sex district using fixed random effects. Post-processing prediction fitted models possible using tidybayes package. illustrate generating posterior expectations, posteriors linear predictors, well discrete continuous representations delay distribution.","code":""},{"path":[]},{"path":"https://epidist.epinowcast.org/dev/articles/epidist.html","id":"key-concepts-in-delay-distribution-estimation","dir":"Articles","previous_headings":"","what":"Key concepts in delay distribution estimation","title":"Getting started with epidist","text":"epidemiology, often need understand time key events - call “delays”. Think things like: incubation period (long getting infected showing symptoms), serial interval (time one person shows symptoms someone infected shows symptoms), generation interval (time one person gets infected infect someone else). can think time “primary event” “secondary event”. tricky bit? Getting accurate estimates delays real-world data challenge. two main challenges typically face : interval censoring (often know events happened within time window, exact time), right truncation (might miss observing later events observation period ends). Don’t worry terms sound bit technical! Section 3, ’ll walk issues look like simulating kind data might see outbreak. Section 5, ’ll show epidist helps estimate delay distributions accurately accounting issues. interested technical details, epidist implements models following best practices field. Check Park et al. (2024) methodological overview Charniga et al. (2024) practical checklist designed applied users. also recommend nowcasting forecasting infectious disease dynamics course hands learning.","code":""},{"path":"https://epidist.epinowcast.org/dev/articles/epidist.html","id":"setup","dir":"Articles","previous_headings":"","what":"Setup","title":"Getting started with epidist","text":"run vignette , well epidist package, need following packages:","code":"library(epidist) library(ggplot2) library(dplyr) #>  #> Attaching package: 'dplyr' #> The following objects are masked from 'package:stats': #>  #>     filter, lag #> The following objects are masked from 'package:base': #>  #>     intersect, setdiff, setequal, union library(tidyr) library(purrr) # nolint library(tibble)"},{"path":"https://epidist.epinowcast.org/dev/articles/epidist.html","id":"data","dir":"Articles","previous_headings":"","what":"Simulating data","title":"Getting started with epidist","text":"simulate data outbreak setting primary event symptom onset secondary event case notification. assume events dates know precise event times. typically common setting delay distribution estimation. simplified version complete setting epidist supports events can different censoring intervals. also assume observing sample cases outbreak. means data interval censored event truncated secondary event. first assume reporting delay lognormal mean log 1.6 log standard deviation 0.5. use add_mean_sd() function add mean sd data.frame. simulate stochastic outbreak continuous time, sample reporting delay event finally observe events (.e restrict dates). assume outbreak growth rate 0.2 observe outbreak 25 days. First, use Gillepsie algorithm generate infectious disease outbreak data (Figure 3.1) stochastic compartmental model. Figure 3.1: Early epidemic, high rate growth new cases. people infected, rate growth slows. (every 50th case shown avoid -plotting.) outbreak data.frame two columns: case ptime. ptime numeric column giving time infection. reality, common receive primary event times date rather numeric. generate secondary events, use lognormal distribution (Figure 3.2) delay primary secondary events: Figure 3.2: lognormal distribution skewed right. Long delay times still probability. Figure 3.3: Secondary events (green) occur delay drawn lognormal distribution (Figure 3.2).Figure 3.1, make figure easier read, every 50th case shown. obs now data.frame columns delay stime. secondary event time simply primary event time plus delay: receive complete data obs simple accurately estimate delay distribution. However, reality, outbreak almost never receive data . First, times primary secondary events usually censored. means rather exact event times, observe event times within interval. suppose interval daily, meaning date primary secondary event, exact event time, reported (Figure 3.4): Figure 3.4: Interval censoring primary secondary event times obscures delay times. common example events reported daily aggregates. daily censoring common, epidist supports primary secondary events delay intervals. outbreak usually estimating delays real time. result cases secondary event occurring time observed. called (right) truncation, biases observation process towards shorter delays. Figure 3.5 see simulation process restricted data include cases secondary event occurred day 10. Figure 3.5: figure duplicates Figure 3.4 adds truncation 10 days due stopping observation period point. Event pairs using dashed lines now observed. can simulate effect right truncation restricting data include cases secondary event occurred observation time. Finally, reality, ’s possible observe every case. suppose sample individuals size sample_size observed: sample size corresponds 7.7% data. Figure 3.6: histogram delays fully observed double interval censored data obs_cens slightly biased relative true distribution (black line). bias absolute (Park et al. 2024) problematic shorter delays. data observed real-time, obs_cens_trunc_samp, biased still due right truncation. bias relative problematic longer delays data truncated. always recommend [Charniga et al. (2024); Table 2] adjusting censoring present considering data also meaningfully right truncated. Another issue, epidist currently account , sometimes secondary event might observed, primary event. example, symptom onset may reported, start infection unknown. Discarding events type leads called ascertainment biases. Whereas case equally likely appear sample , ascertainment bias cases likely appear data others. data now nearly observe practice final step transform use meaningful dates. introduce outbreak_start_date date first infection. resulting simulated data obs_data 4 columns: id, symptom_onset, case_notification, obs_time. symptom_onset case_notification dates obs_date date last observation based case notification.","code":"secondary_dist <- data.frame(mu = 1.6, sigma = 0.5) class(secondary_dist) <- c(\"lognormal_samples\", class(secondary_dist)) secondary_dist <- add_mean_sd(secondary_dist)  secondary_dist #>    mu sigma     mean       sd #> 1 1.6   0.5 5.612521 2.991139 growth_rate <- 0.2 obs_time <- 25 outbreak <- simulate_gillespie(r = growth_rate, seed = 101) outbreak |>   filter(case %% 50 == 0) |>   ggplot(aes(x = ptime, y = case)) +   geom_point(col = \"#56B4E9\") +   labs(x = \"Primary event time (day)\", y = \"Case number\") +   theme_minimal() head(outbreak) #>   case      ptime #> 1    1 0.04884052 #> 2    2 0.06583120 #> 3    3 0.21857827 #> 4    4 0.24963421 #> 5    5 0.30133392 #> 6    6 0.31425010 obs <- simulate_secondary(   outbreak,   dist = rlnorm,   meanlog = secondary_dist[[\"mu\"]],   sdlog = secondary_dist[[\"sigma\"]] ) ggplot(data.frame(x = c(0, 30)), aes(x = x)) +   geom_function(     fun = dlnorm,     args = list(       meanlog = secondary_dist[[\"mu\"]],       sdlog = secondary_dist[[\"sigma\"]]     )   ) +   theme_minimal() +   labs(     x = \"Delay between primary and secondary event (days)\",     y = \"Probability density\"   ) obs |>   filter(case %% 50 == 0) |>   ggplot(aes(y = case)) +   geom_segment(     aes(x = ptime, xend = stime, y = case, yend = case),     col = \"grey\"   ) +   geom_point(aes(x = ptime), col = \"#56B4E9\") +   geom_point(aes(x = stime), col = \"#009E73\") +   labs(x = \"Event time (day)\", y = \"Case number\") +   theme_minimal() all(obs$ptime + obs$delay == obs$stime) #> [1] TRUE obs_cens <- mutate(   obs,   ptime_lwr = floor(.data$ptime),   ptime_upr = .data$ptime_lwr + 1,   stime_lwr = floor(.data$stime),   stime_upr = .data$stime_lwr + 1,   delay_daily = stime_lwr - ptime_lwr ) p_cens <- obs_cens |>   filter(case %% 50 == 0, case <= 500) |>   ggplot(aes(y = case)) +   geom_segment(     aes(x = ptime, xend = stime, y = case, yend = case),     col = \"grey\"   ) +   # The primary event censoring intervals   geom_errorbarh(     aes(xmin = ptime_lwr, xmax = ptime_upr, y = case),     col = \"#56B4E9\", height = 5   ) +   # The secondary event censoring intervals   geom_errorbarh(     aes(xmin = stime_lwr, xmax = stime_upr, y = case),     col = \"#009E73\", height = 5   ) +   geom_point(aes(x = ptime), fill = \"white\", col = \"#56B4E9\", shape = 21) +   geom_point(aes(x = stime), fill = \"white\", col = \"#009E73\", shape = 21) +   labs(x = \"Event time (day)\", y = \"Case number\") +   theme_minimal() p_cens p_trunc <- obs_cens |>   filter(case %% 50 == 0, case <= 500) |>   mutate(     observed = ifelse(stime_upr <= 10, \"observed\", \"not observed\"),     observed = factor(observed, levels = c(\"observed\", \"not observed\"))   ) |>   ggplot(aes(y = case)) +   geom_segment(     aes(x = ptime, xend = stime, y = case, yend = case, linetype = observed),     col = \"grey\"   ) +   # The primary event censoring intervals   geom_errorbarh(     aes(xmin = ptime_lwr, xmax = ptime_upr, y = case),     col = \"#56B4E9\", height = 5   ) +   # The secondary event censoring intervals   geom_errorbarh(     aes(xmin = stime_lwr, xmax = stime_upr, y = case),     col = \"#009E73\", height = 5   ) +   geom_point(aes(x = ptime), fill = \"white\", col = \"#56B4E9\", shape = 21) +   geom_point(aes(x = stime), fill = \"white\", col = \"#009E73\", shape = 21) +   geom_vline(xintercept = 10, col = \"black\", linetype = \"dashed\") +   labs(x = \"Event time (day)\", y = \"Case number\") +   theme_minimal() +   theme(legend.position = \"none\") p_trunc obs_cens_trunc <- obs_cens |>   mutate(obs_time = obs_time) |>   filter(.data$stime_upr <= .data$obs_time) sample_size <- 200 obs_cens_trunc_samp <- slice_sample(   obs_cens_trunc,   n = sample_size, replace = FALSE ) #Prepare the complete, retrospective data complete_data <- obs_cens |>   mutate(type = \"Censored retrospective data\") |>   select(delay = delay_daily, type)  # Prepare the censored, truncated, sampled data censored_data <- obs_cens_trunc_samp |>   mutate(type = \"Censored, truncated,\\nsampled data\") |>   select(delay = delay_daily, type)  # Combine the datasets combined_data <- bind_rows(complete_data, censored_data)  # Calculate proportions plot_data <- combined_data |>   group_by(type, delay, .drop = FALSE) |>   summarise(n = n()) |>   mutate(p = n / sum(n)) #> `summarise()` has grouped output by 'type'. You can override using the #> `.groups` argument.  # Create the plot delay_histogram <- ggplot(plot_data) +   geom_col(     aes(x = delay, y = p, fill = type, group = type),     position = position_dodge2(preserve = \"single\")   ) +   scale_fill_brewer(palette = \"Set2\") +   geom_function(     data = data.frame(x = c(0, 30)), aes(x = x),     fun = dlnorm,     args = list(       meanlog = secondary_dist[[\"mu\"]],       sdlog = secondary_dist[[\"sigma\"]]     ),     linewidth = 1.5   ) +   labs(     x = \"Delay between primary and secondary event (days)\",     y = \"Probability density\",     fill = \"\"   ) +   theme_minimal() +   theme(legend.position = \"bottom\") delay_histogram outbreak_start_date <- as.Date(\"2024-02-01\")  obs_data <- obs_cens_trunc_samp |>   select(case, ptime_lwr, ptime_upr, stime_lwr, stime_upr, obs_time) |>   transmute(     id = case,     symptom_onset = outbreak_start_date + ptime_lwr,     case_notification = outbreak_start_date + stime_lwr,     obs_date = outbreak_start_date + obs_time   ) head(obs_data) #>     id symptom_onset case_notification   obs_date #> 1 1280    2024-02-16        2024-02-24 2024-02-26 #> 2 2167    2024-02-19        2024-02-25 2024-02-26 #> 3  743    2024-02-12        2024-02-14 2024-02-26 #> 4 2257    2024-02-19        2024-02-22 2024-02-26 #> 5 1820    2024-02-18        2024-02-20 2024-02-26 #> 6 1107    2024-02-15        2024-02-19 2024-02-26"},{"path":"https://epidist.epinowcast.org/dev/articles/epidist.html","id":"preprocessing","dir":"Articles","previous_headings":"","what":"Preprocessing the data","title":"Getting started with epidist","text":"first step using epidist convert data format epidist understands. common format linelist, table one row per case columns primary secondary event dates. as_epidist_linelist_data() function converts data linelist format. different entry points depending format data common use data.frame containing dates. dispatches as_epidist_linelist_data.data.frame() takes column names primary secondary event dates observation date. can see epidist assumed events daily censored upper bounds provided. data daily censored, can provide upper bounds (pdate_upr sdate_upr) as_epidist_linelist_data() use correct model. Internally function converts data relative (first event date) time format creates variable (delay) contains observed delay. variables epidist use fit model. formats supported, example aggregate data (e.g. daily case counts), functionality map formats. See ?as_epidist_aggregate_data() details.","code":"linelist_data <- as_epidist_linelist_data(   obs_data,   pdate_lwr = \"symptom_onset\",   sdate_lwr = \"case_notification\",   obs_date = \"obs_date\" ) #> ℹ No primary event upper bound provided, using the primary event lower bound + 1 day as the assumed upper bound. #> ℹ No secondary event upper bound provided, using the secondary event lower bound + 1 day as the assumed upper bound.  head(linelist_data) #> # A tibble: 6 × 11 #>   ptime_lwr ptime_upr stime_lwr stime_upr obs_time    id pdate_lwr  sdate_lwr  #>       <dbl>     <dbl>     <dbl>     <dbl>    <dbl> <int> <date>     <date>     #> 1        15        16        23        24       25  1280 2024-02-16 2024-02-24 #> 2        18        19        24        25       25  2167 2024-02-19 2024-02-25 #> 3        11        12        13        14       25   743 2024-02-12 2024-02-14 #> 4        18        19        21        22       25  2257 2024-02-19 2024-02-22 #> 5        17        18        19        20       25  1820 2024-02-18 2024-02-20 #> 6        14        15        18        19       25  1107 2024-02-15 2024-02-19 #> # ℹ 3 more variables: obs_date <date>, pdate_upr <date>, sdate_upr <date>"},{"path":"https://epidist.epinowcast.org/dev/articles/epidist.html","id":"fit","dir":"Articles","previous_headings":"","what":"Fitting models","title":"Getting started with epidist","text":"Now ready fit epidist models. epidist provides range models different settings. epidist models as_epidist_<model>_model() function can used convert data format model can use.","code":""},{"path":"https://epidist.epinowcast.org/dev/articles/epidist.html","id":"naive","dir":"Articles","previous_headings":"5 Fitting models","what":"Fit a model that doesn’t account for censoring and truncation","title":"Getting started with epidist","text":"start simplest model, account censoring truncation. Behind scenes model essentially just wrapper around brms package. use model need use as_epidist_naive_model() function. now fit model using -U-Turn Sampler (NUTS) Markov chain Monte Carlo (MCMC) algorithm via brms R package (Bürkner 2017). Note use default rstan backend generally recommend using cmdstanr backend faster sampling additional features. can set using backend = \"cmdstanr\" following installing CmdStan instructions README. One progress messages output “Reduced 200 91 rows”. indicating non-unique rows (based user formula) aggregated. done several epidist models efficiency impact accuracy. want explore see documentation epidist_transform_data_model(). naive_fit object brmsfit object containing MCMC samples parameters model, shown table . Users familiar Stan brms, can work fit directly. tool supports brms fitted model objects compatible fit. example, can use built summary() function summarise posterior distribution parameters. see information model including links used parameter, formula used (contains formula specified well additions add model), summaries data, posterior samples, regression coefficients, fitting diagnostics. used simple model intercept (see vignettes(\"ebola\") complex options) Intercept term corresponds mean log lognormal sigma_Intercept term corresponds log (due log link) log standard deviation lognormal. Remember simulated data meanlog 1.6 log standard deviation 0.5. see recovered neither parameters well (applying log log standard deviation means target value ~-0.69) means resulting distribution estimated reflect data well. going use estimate additional analyses lead biases flawed decisions.","code":"naive_data <- as_epidist_naive_model(linelist_data) naive_data #> # A tibble: 200 × 13 #>    ptime_lwr ptime_upr stime_lwr stime_upr obs_time    id pdate_lwr  sdate_lwr  #>        <dbl>     <dbl>     <dbl>     <dbl>    <dbl> <int> <date>     <date>     #>  1        15        16        23        24       25  1280 2024-02-16 2024-02-24 #>  2        18        19        24        25       25  2167 2024-02-19 2024-02-25 #>  3        11        12        13        14       25   743 2024-02-12 2024-02-14 #>  4        18        19        21        22       25  2257 2024-02-19 2024-02-22 #>  5        17        18        19        20       25  1820 2024-02-18 2024-02-20 #>  6        14        15        18        19       25  1107 2024-02-15 2024-02-19 #>  7        10        11        16        17       25   535 2024-02-11 2024-02-17 #>  8        10        11        11        12       25   583 2024-02-11 2024-02-12 #>  9         7         8        12        13       25   286 2024-02-08 2024-02-13 #> 10        16        17        22        23       25  1616 2024-02-17 2024-02-23 #> # ℹ 190 more rows #> # ℹ 5 more variables: obs_date <date>, pdate_upr <date>, sdate_upr <date>, #> #   delay <dbl>, n <dbl> naive_fit <- epidist(   naive_data,   chains = 4, cores = 2, refresh = ifelse(interactive(), 250, 0) ) #> ℹ Data summarised by unique combinations of: #> * Model variables: delay bounds, observation time, and primary censoring window #> ! Reduced from 200 to 12 rows. #> ℹ This should improve model efficiency with no loss of information. #> Compiling Stan program... #>  #> Trying to compile a simple C file #> Running /opt/R/4.5.1/lib/R/bin/R CMD SHLIB foo.c #> using C compiler: ‘gcc (Ubuntu 13.3.0-6ubuntu2~24.04) 13.3.0’ #> gcc -std=gnu2x -I\"/opt/R/4.5.1/lib/R/include\" -DNDEBUG   -I\"/home/runner/work/_temp/Library/Rcpp/include/\"  -I\"/home/runner/work/_temp/Library/RcppEigen/include/\"  -I\"/home/runner/work/_temp/Library/RcppEigen/include/unsupported\"  -I\"/home/runner/work/_temp/Library/BH/include\" -I\"/home/runner/work/_temp/Library/StanHeaders/include/src/\"  -I\"/home/runner/work/_temp/Library/StanHeaders/include/\"  -I\"/home/runner/work/_temp/Library/RcppParallel/include/\"  -I\"/home/runner/work/_temp/Library/rstan/include\" -DEIGEN_NO_DEBUG  -DBOOST_DISABLE_ASSERTS  -DBOOST_PENDING_INTEGER_LOG2_HPP  -DSTAN_THREADS  -DUSE_STANC3 -DSTRICT_R_HEADERS  -DBOOST_PHOENIX_NO_VARIADIC_EXPRESSION  -D_HAS_AUTO_PTR_ETC=0  -include '/home/runner/work/_temp/Library/StanHeaders/include/stan/math/prim/fun/Eigen.hpp'  -D_REENTRANT -DRCPP_PARALLEL_USE_TBB=1   -I/usr/local/include    -fpic  -g -O2  -c foo.c -o foo.o #> In file included from /home/runner/work/_temp/Library/RcppEigen/include/Eigen/Core:19, #>                  from /home/runner/work/_temp/Library/RcppEigen/include/Eigen/Dense:1, #>                  from /home/runner/work/_temp/Library/StanHeaders/include/stan/math/prim/fun/Eigen.hpp:22, #>                  from <command-line>: #> /home/runner/work/_temp/Library/RcppEigen/include/Eigen/src/Core/util/Macros.h:679:10: fatal error: cmath: No such file or directory #>   679 | #include <cmath> #>       |          ^~~~~~~ #> compilation terminated. #> make: *** [/opt/R/4.5.1/lib/R/etc/Makeconf:202: foo.o] Error 1 #> Start sampling summary(naive_fit) #>  Family: lognormal  #>   Links: mu = identity; sigma = log  #> Formula: delay | weights(n) ~ 1  #>          sigma ~ 1 #>    Data: transformed_data (Number of observations: 12)  #>   Draws: 4 chains, each with iter = 2000; warmup = 1000; thin = 1; #>          total post-warmup draws = 4000 #>  #> Regression Coefficients: #>                 Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS #> Intercept           1.42      0.03     1.35     1.48 1.00     2899     2734 #> sigma_Intercept    -0.76      0.05    -0.85    -0.66 1.00     3444     2414 #>  #> Draws were sampled using sampling(NUTS). For each parameter, Bulk_ESS #> and Tail_ESS are effective sample size measures, and Rhat is the potential #> scale reduction factor on split chains (at convergence, Rhat = 1)."},{"path":"https://epidist.epinowcast.org/dev/articles/epidist.html","id":"marginal","dir":"Articles","previous_headings":"5 Fitting models","what":"Fit a model that accounts for biases and truncation","title":"Getting started with epidist","text":"epidist provides range models can account biases observed data. cases, recommend using marginal model. model accounts interval censoring primary secondary events right truncation secondary event. Behind scenes uses likelihood primarycensored R package. package contains exact numerical analytical solutions numerous double censored truncated distributions Stan R. documentation primarycensored good place learning . data object now class epidist_marginal_model. Using data, now call epidist() fit model. Note different as_epidist_<model>_model() function used marginal rather naive model fit. summarise posterior using summary(), Compared naive fit see good recovery true distribution parameters (remember 1.6 logmean 0.5 (~-0.69 log scale)) log sd.","code":"marginal_data <- as_epidist_marginal_model(linelist_data) marginal_data #> # A tibble: 200 × 18 #>    ptime_lwr ptime_upr stime_lwr stime_upr obs_time    id pdate_lwr  sdate_lwr  #>        <dbl>     <dbl>     <dbl>     <dbl>    <dbl> <int> <date>     <date>     #>  1        15        16        23        24       25  1280 2024-02-16 2024-02-24 #>  2        18        19        24        25       25  2167 2024-02-19 2024-02-25 #>  3        11        12        13        14       25   743 2024-02-12 2024-02-14 #>  4        18        19        21        22       25  2257 2024-02-19 2024-02-22 #>  5        17        18        19        20       25  1820 2024-02-18 2024-02-20 #>  6        14        15        18        19       25  1107 2024-02-15 2024-02-19 #>  7        10        11        16        17       25   535 2024-02-11 2024-02-17 #>  8        10        11        11        12       25   583 2024-02-11 2024-02-12 #>  9         7         8        12        13       25   286 2024-02-08 2024-02-13 #> 10        16        17        22        23       25  1616 2024-02-17 2024-02-23 #> # ℹ 190 more rows #> # ℹ 10 more variables: obs_date <date>, pdate_upr <date>, sdate_upr <date>, #> #   pwindow <dbl>, swindow <dbl>, relative_obs_time <dbl>, #> #   orig_relative_obs_time <dbl>, delay_lwr <dbl>, delay_upr <dbl>, n <dbl> marginal_fit <- epidist(   data = marginal_data, chains = 4, cores = 2,   refresh = ifelse(interactive(), 250, 0) ) #> ℹ Data summarised by unique combinations of: #> * Model variables: delay bounds, observation time, and primary censoring window #> ! Reduced from 200 to 92 rows. #> ℹ This should improve model efficiency with no loss of information. #> Compiling Stan program... #>  #> Trying to compile a simple C file #> Running /opt/R/4.5.1/lib/R/bin/R CMD SHLIB foo.c #> using C compiler: ‘gcc (Ubuntu 13.3.0-6ubuntu2~24.04) 13.3.0’ #> gcc -std=gnu2x -I\"/opt/R/4.5.1/lib/R/include\" -DNDEBUG   -I\"/home/runner/work/_temp/Library/Rcpp/include/\"  -I\"/home/runner/work/_temp/Library/RcppEigen/include/\"  -I\"/home/runner/work/_temp/Library/RcppEigen/include/unsupported\"  -I\"/home/runner/work/_temp/Library/BH/include\" -I\"/home/runner/work/_temp/Library/StanHeaders/include/src/\"  -I\"/home/runner/work/_temp/Library/StanHeaders/include/\"  -I\"/home/runner/work/_temp/Library/RcppParallel/include/\"  -I\"/home/runner/work/_temp/Library/rstan/include\" -DEIGEN_NO_DEBUG  -DBOOST_DISABLE_ASSERTS  -DBOOST_PENDING_INTEGER_LOG2_HPP  -DSTAN_THREADS  -DUSE_STANC3 -DSTRICT_R_HEADERS  -DBOOST_PHOENIX_NO_VARIADIC_EXPRESSION  -D_HAS_AUTO_PTR_ETC=0  -include '/home/runner/work/_temp/Library/StanHeaders/include/stan/math/prim/fun/Eigen.hpp'  -D_REENTRANT -DRCPP_PARALLEL_USE_TBB=1   -I/usr/local/include    -fpic  -g -O2  -c foo.c -o foo.o #> In file included from /home/runner/work/_temp/Library/RcppEigen/include/Eigen/Core:19, #>                  from /home/runner/work/_temp/Library/RcppEigen/include/Eigen/Dense:1, #>                  from /home/runner/work/_temp/Library/StanHeaders/include/stan/math/prim/fun/Eigen.hpp:22, #>                  from <command-line>: #> /home/runner/work/_temp/Library/RcppEigen/include/Eigen/src/Core/util/Macros.h:679:10: fatal error: cmath: No such file or directory #>   679 | #include <cmath> #>       |          ^~~~~~~ #> compilation terminated. #> make: *** [/opt/R/4.5.1/lib/R/etc/Makeconf:202: foo.o] Error 1 #> Start sampling summary(marginal_fit) #>  Family: marginal_lognormal  #>   Links: mu = identity; sigma = log  #> Formula: delay_lwr | weights(n) + vreal(relative_obs_time, pwindow, swindow, delay_upr) ~ 1  #>          sigma ~ 1 #>    Data: transformed_data (Number of observations: 92)  #>   Draws: 4 chains, each with iter = 2000; warmup = 1000; thin = 1; #>          total post-warmup draws = 4000 #>  #> Regression Coefficients: #>                 Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS #> Intercept           1.55      0.05     1.46     1.65 1.00     1837     1804 #> sigma_Intercept    -0.69      0.07    -0.82    -0.55 1.00     1683     1802 #>  #> Draws were sampled using sampling(NUTS). For each parameter, Bulk_ESS #> and Tail_ESS are effective sample size measures, and Rhat is the potential #> scale reduction factor on split chains (at convergence, Rhat = 1)."},{"path":"https://epidist.epinowcast.org/dev/articles/epidist.html","id":"compare","dir":"Articles","previous_headings":"","what":"Compare the two models estimated delay parameters","title":"Getting started with epidist","text":"can compare two models plotting estimated parameters naive marginal models. One way use predict_delay_parameters() function extract posterior samples plot . Internally function uses can also add mean standard deviation parameters output easier understand distribution. Note default predict_delay_parameters() gives predictions every row transformed data. want posterior draws summary parameters filter first row first data point. prevents repeating prediction row. Another approach prodividing newdata predict_delay_parameters() representing data want make predictions . can now plot posterior draws summary parameters two models. Figure 6.1: density posterior draws marginal naive models compared true underlying delay distribution (vertical dashed black line). expected see naive model done poor job recovering true parameters marginal model done much better job. However, important note marginal model doesn’t perfectly recover true parameters either due information loss censoring truncation due inherent uncertainty posterior distribution.","code":"predicted_parameters <- list(marginal = marginal_fit, naive = naive_fit) |>   lapply(predict_delay_parameters) |>   bind_rows(.id = \"model\") |>   mutate(model = factor(model, levels = c(\"naive\", \"marginal\"))) |>   filter(index == 1)  head(predicted_parameters) #>      model draw index       mu     sigma     mean       sd #> 1 marginal    1     1 1.635389 0.4800371 5.758093 2.931250 #> 2 marginal    2     1 1.611057 0.4755633 5.607681 2.824941 #> 3 marginal    3     1 1.542482 0.4337188 5.137351 2.337176 #> 4 marginal    4     1 1.571077 0.4851472 5.412770 2.788359 #> 5 marginal    5     1 1.586064 0.4905983 5.509136 2.873860 #> 6 marginal    6     1 1.558777 0.5309434 5.472454 3.122884 # Create a data frame with true parameter values true_params <- secondary_dist |>   mutate(model = \"true\") |>   pivot_longer(     cols = c(\"mu\", \"sigma\", \"mean\", \"sd\"),     names_to = \"parameter\",     values_to = \"value\"   )  # Plot with true values as vertical lines p_pp_params <- predicted_parameters |>   tidyr::pivot_longer(     cols = c(\"mu\", \"sigma\", \"mean\", \"sd\"),     names_to = \"parameter\",     values_to = \"value\"   ) |>   ggplot() +   geom_density(     aes(x = value, fill = model, group = model),     alpha = 0.5   ) +   geom_vline(     data = true_params,     aes(xintercept = value),     linetype = \"dashed\",     linewidth = 1, col = \"black\"   ) +   facet_wrap(~parameter, scales = \"free\") +   theme_minimal() +   labs(title = \"Parameter estimates compared to true values\") +   scale_fill_brewer(palette = \"Set2\") +   theme(legend.position = \"bottom\") p_pp_params"},{"path":"https://epidist.epinowcast.org/dev/articles/epidist.html","id":"postprocessing","dir":"Articles","previous_headings":"","what":"Visualise posterior predictions of the true delay distribution","title":"Getting started with epidist","text":"final step can visualise posterior predictions delay distribution. tells us good fit estimated delay distribution true delay distribution. Figure 7.1: posterior draws marginal naive models (coloured lines, 100 draws posterior) compared true underlying delay distribution (black line). coloured line represents one possible delay distribution based estimated model parameters. naive model shows substantial bias whilst marginal model better recovers true distribution. expected based recovery parameters, marginal model better recovers true distribution naive model substantially shorter mean different shape.","code":"set.seed(123)  predicted_pmfs <- predicted_parameters |>   group_by(model) |>   slice_sample(n = 100) |>   bind_rows(mutate(secondary_dist, model = \"true\")) |>   group_by(model) |>   mutate(     draw_id = row_number(),     predictions = purrr::map2(       mu, sigma,       ~ tibble(         x = seq(0, 15, by = 0.1),         y = dlnorm(x, meanlog = .x, sdlog = .y)       )     )   ) |>   unnest(predictions) |>   ungroup() |>   mutate(model = factor(model, levels = c(\"naive\", \"marginal\", \"true\")))  p_fitted_lognormal <- predicted_pmfs |>   filter(model != \"true\") |>   ggplot() +   geom_line(     aes(x = x, y = y, col = model, group = draw),     alpha = 0.05, linewidth = 1   ) +   geom_line(     data = select(filter(predicted_pmfs, model == \"true\"), -model),     aes(x = x, y = y),     linewidth = 1.5,     col = \"black\"   ) +   labs(     x = \"Delay between primary and secondary event (days)\",     y = \"Probability density\"   ) +   theme_minimal() +   facet_wrap(~model, scales = \"free\", nrow = 2) +   scale_color_brewer(palette = \"Set2\") +   theme(legend.position = \"none\") p_fitted_lognormal"},{"path":"https://epidist.epinowcast.org/dev/articles/epidist.html","id":"learning-more","dir":"Articles","previous_headings":"","what":"Learning more","title":"Getting started with epidist","text":"epidist package provides several additional vignettes help learn package capabilities: details different models available epidist, see vignette(\"model\"). real-world example using epidist Ebola data demonstrations complex modelling approaches, see vignette(\"ebola\"). ’re interested approximate inference methods faster computation large datasets, see vignette(\"approx-inference\"). answers common questions tips integrating epidist packages workflow, see FAQ vignette(\"faq\").","code":""},{"path":[]},{"path":"https://epidist.epinowcast.org/dev/articles/faq.html","id":"working-with-posterior-samples","dir":"Articles","previous_headings":"","what":"Working with posterior samples","title":"Frequently asked questions and tips","text":"output call epidist compatible typical Stan workflows. recommend use posterior package working samples.","code":""},{"path":"https://epidist.epinowcast.org/dev/articles/faq.html","id":"getting-a-data-frame-of-posterior-samples","dir":"Articles","previous_headings":"Working with posterior samples","what":"Getting a data.frame of posterior samples","title":"Frequently asked questions and tips","text":"function posterior::as_draws_df() may used obtain dataframe MCMC draws specified parameters.","code":"library(posterior) draws <- as_draws_df(fit, variable = c(\"Intercept\", \"Intercept_sigma\")) head(draws) ## # A draws_df: 6 iterations, 1 chains, and 2 variables ##   Intercept Intercept_sigma ## 1       1.8           -0.59 ## 2       1.8           -0.56 ## 3       1.8           -0.49 ## 4       1.8           -0.61 ## 5       1.9           -0.53 ## 6       1.9           -0.52 ## # ... hidden reserved variables {'.chain', '.iteration', '.draw'}"},{"path":"https://epidist.epinowcast.org/dev/articles/faq.html","id":"using-random-variables-rvars-for-uncertainty-propagation","dir":"Articles","previous_headings":"Working with posterior samples","what":"Using random variables (rvars) for uncertainty propagation","title":"Frequently asked questions and tips","text":"posterior package also provides rvar class working posterior samples random variables. approach allows perform mathematical operations directly posterior distributions propagating uncertainty. details, see posterior package documentation.","code":"library(posterior) # Convert model parameters to rvars rv <- as_draws_rvars(fit_location)  # Look at the intercept in rvar form rv$b_Intercept ## rvar<500,2>[1] mean ± sd: ## [1] 1.6 ± 0.063 # Calculate the mean delay (on natural scale) for each location mean_delay_loc0 <- exp(rv$b_Intercept + 0.5 * exp(rv$b_sigma_Intercept)^2) mean_delay_loc1 <- exp(rv$b_Intercept +   rv$b_location + 0.5 * (exp(rv$b_sigma_Intercept + rv$b_sigma_location))^2)  # Summarize the distributions summary(mean_delay_loc0) ## # A tibble: 1 × 10 ##   variable         mean median    sd   mad    q5   q95  rhat ess_bulk ess_tail ##   <chr>           <dbl>  <dbl> <dbl> <dbl> <dbl> <dbl> <dbl>    <dbl>    <dbl> ## 1 mean_delay_loc0  5.54   5.48 0.449 0.389  4.95  6.32  1.00     661.     685. summary(mean_delay_loc1) ## # A tibble: 1 × 10 ##   variable         mean median    sd   mad    q5   q95  rhat ess_bulk ess_tail ##   <chr>           <dbl>  <dbl> <dbl> <dbl> <dbl> <dbl> <dbl>    <dbl>    <dbl> ## 1 mean_delay_loc1  12.8   11.4  5.45  2.82  8.24  21.4  1.01     208.     197. # Calculate the difference between locations delay_diff <- mean_delay_loc1 - mean_delay_loc0 delay_diff ## rvar<500,2>[1] mean ± sd: ## [1] 7.3 ± 5.5"},{"path":"https://epidist.epinowcast.org/dev/articles/faq.html","id":"how-can-i-assess-whether-sampling-has-converged","dir":"Articles","previous_headings":"","what":"How can I assess whether sampling has converged?","title":"Frequently asked questions and tips","text":"output call epidist compatible typical Stan workflows. recommend use bayesplot package sampling diagnostic plots. example, function bayesplot::mcmc_trace() can used produce traceplots specified parameters.  also provide function epidist_diagnostics() can used obtain common diagnostics used assess quality fitted model.","code":"library(bayesplot) mcmc_trace(fit, pars = c(\"Intercept\", \"Intercept_sigma\")) epidist_diagnostics(fit) ## # A tibble: 1 × 8 ##    time samples max_rhat divergent_transitions per_divergent_transitions ##   <dbl>   <dbl>    <dbl>                 <dbl>                     <dbl> ## 1  2.48    1000     1.00                     0                         0 ## # ℹ 3 more variables: max_treedepth <dbl>, no_at_max_treedepth <int>, ## #   per_at_max_treedepth <dbl>"},{"path":"https://epidist.epinowcast.org/dev/articles/faq.html","id":"id-like-to-run-a-simulation-study","dir":"Articles","previous_headings":"","what":"I’d like to run a simulation study","title":"Frequently asked questions and tips","text":"recommend use purrr package running many epidist models, example part simulation study. particularly highlight two functions might useful: purrr::map() (similar functions) iterating list inputs. purrr::safely() ensures function called “always succeeds”. words, error captured output, rather ending computation (potentially disrupting call purrr::map()). example use functions, look epidist-paper repository containing code Park et al. (2024). (Note codebase, use map part targets pipeline.)","code":""},{"path":"https://epidist.epinowcast.org/dev/articles/faq.html","id":"how-are-the-default-priors-for-epidist-chosen","dir":"Articles","previous_headings":"","what":"How are the default priors for epidist chosen?","title":"Frequently asked questions and tips","text":"brms provides default priors parameters. However, priors make sense context application. Instead, used prior predictive checking set epidist-specific default priors produce epidemiological delay distribution mean standard deviation parameters reasonable range. example, brms::lognormal() latent individual model, suggest following prior distributions brms mu sigma intercept parameters: (Note functions epidist_family() epidist_prior() mostly internal use!) distributions delay distribution mean standard deviation parameters prior distributions imply:","code":"# Note that we export lognormal() as part of epidist hence no need for brms:: family <- lognormal()  epidist_family <- epidist_family(data, family) epidist_formula <- epidist_formula(   data,   family = epidist_family,   formula = mu ~ 1 )  # NULL here means no replacing priors from the user! epidist_prior <- epidist_prior(   data = data,   family = family,   formula = epidist_formula,   prior = NULL )  epidist_prior ##                 prior     class coef group resp  dpar nlpar lb ub  source ##    student_t(3, 5, 3) Intercept                                   default ##  student_t(3, 0, 2.5) Intercept                 sigma             default set.seed(1) fit_ppc <- epidist(   data = data,   formula = mu ~ 1,   family = lognormal(),   sample_prior = \"only\",   seed = 1,   backend = \"cmdstanr\" ) pred <- predict_delay_parameters(fit_ppc)  pred |>   as.data.frame() |>   pivot_longer(     cols = c(\"mu\", \"sigma\", \"mean\", \"sd\"),     names_to = \"parameter\",     values_to = \"value\"   ) |>   filter(parameter %in% c(\"mean\", \"sd\")) |>   ggplot(aes(x = value, y = after_stat(density))) +   geom_histogram() +   facet_wrap(. ~ parameter, scales = \"free\") +   labs(x = \"\", y = \"Density\") +   theme_minimal() +   scale_x_log10(labels = comma) ## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. quantile(pred$mean, c(0.01, 0.1, 0.25, 0.5, 0.75, 0.9, 0.99)) ##         1%        10%        25%        50%        75%        90%        99%  ##  0.3172760  0.8667007  1.6163280  3.2461963  6.6291796 12.0852881 34.0415909 quantile(pred$sd, c(0.01, 0.1, 0.25, 0.5, 0.75, 0.9, 0.99)) ##         1%        10%        25%        50%        75%        90%        99%  ##  0.1335505  0.3950603  0.7687356  1.7107449  3.9206478  8.1671089 33.4421590"},{"path":"https://epidist.epinowcast.org/dev/articles/faq.html","id":"how-can-i-assess-how-sensitive-the-fitted-posterior-distribution-is-to-the-prior-distribution-used","dir":"Articles","previous_headings":"","what":"How can I assess how sensitive the fitted posterior distribution is to the prior distribution used?","title":"Frequently asked questions and tips","text":"recommend use priorsense package (Kallioinen et al. 2024) check sensitive posterior distribution perturbations prior distribution likelihood using power-scaling analysis:","code":"library(priorsense) powerscale_plot_dens(fit, variable = c(\"Intercept\", \"Intercept_sigma\")) +   theme_minimal()"},{"path":"https://epidist.epinowcast.org/dev/articles/faq.html","id":"what-do-the-parameters-in-my-model-output-correspond-to","dir":"Articles","previous_headings":"","what":"What do the parameters in my model output correspond to?","title":"Frequently asked questions and tips","text":"epidist package uses brms fit models. means model output include brms-style names parameters. , provide table giving correspondence distributional parameter names used brms used standard R functions common likelihood families. Note families brms parameterised measure centrality mu first parameter. parameter necessarily correspond mean: hence provision function add_mean_sd() within epidist add columns containing natural scale mean standard deviation data.frame draws.","code":""},{"path":"https://epidist.epinowcast.org/dev/articles/faq.html","id":"how-can-i-generate-predictions-with-my-fitted-epidist-model","dir":"Articles","previous_headings":"","what":"How can I generate predictions with my fitted epidist model?","title":"Frequently asked questions and tips","text":"possible generate predictions manually working samples model output. However tricky , possible recommend using tidybayes package. particular, following functions may useful: tidybayes::add_epred_draws() predictions expected value delay. tidybayes::add_linpred_draws() predictions delay distributional parameter linear predictors. tidybayes::add_predicted_draws() predictions observed delay. see functions demonstrated vignette, see “Advanced features Ebola data”. short example, generate 4000 predictions (equal number draws) delay observed double censored observation process (primary secondary censoring windows one) :  Importantly, functionality available epidist models using brms families log_lik_censor method implemented internally brms. using another family, consider submitting pull request implement methods!","code":"library(tidybayes) ##  ## Attaching package: 'tidybayes' ## The following objects are masked from 'package:brms': ##  ##     dstudent_t, pstudent_t, qstudent_t, rstudent_t draws_pmf <- tibble::tibble(   relative_obs_time = Inf, pwindow = 1, swindow = 1, delay_upr = NA ) |>   add_predicted_draws(fit)  ggplot(draws_pmf, aes(x = .prediction)) +   geom_bar(aes(y = after_stat(count / sum(count)))) +   labs(x = \"Delay\", y = \"PMF\") +   scale_x_continuous(limits = c(0, 30)) +   theme_minimal() ## Warning: Removed 6 rows containing non-finite outside the scale range ## (`stat_count()`). ## Warning: Removed 1 row containing missing values or values outside the scale range ## (`geom_bar()`)."},{"path":"https://epidist.epinowcast.org/dev/articles/faq.html","id":"how-can-i-use-the-marginaleffects-package-with-my-fitted-epidist-model","dir":"Articles","previous_headings":"How can I generate predictions with my fitted epidist model?","what":"How can I use the marginaleffects package with my fitted epidist model?","title":"Frequently asked questions and tips","text":"marginaleffects package provides tools computing visualising marginal effects, contrasts, predictions regression models. works epidist models built top brms. epidist models covariates, can use marginaleffects : - Compute average marginal effects - Make comparisons different covariate values - Visualise model predictions across range covariates ’s simple example using model includes location covariate: details available functions use, see marginaleffects documentation.","code":"library(marginaleffects)  # Compare outcomes between location categories (0 and 1) avg_comparisons(   fit_location,   variables = list(location = c(0, 1)) ) ##  ##  Estimate 2.5 % 97.5 % ##      5.86  2.21   20.2 ##  ## Term: location ## Type: response ## Comparison: 1 - 0"},{"path":"https://epidist.epinowcast.org/dev/articles/faq.html","id":"how-can-i-use-the-cmdstanr-backend","dir":"Articles","previous_headings":"How can I generate predictions with my fitted epidist model?","what":"How can I use the cmdstanr backend?","title":"Frequently asked questions and tips","text":"cmdstanr backend typically performant default rstan backend. use cmdstanr backend, first need install CmdStan (see README details). can check everything need follows:","code":"cmdstanr::cmdstan_version() ## [1] \"2.36.0\""},{"path":[]},{"path":"https://epidist.epinowcast.org/dev/articles/model.html","id":"maths","dir":"Articles","previous_headings":"","what":"Background","title":"Guide to the statistical models implemented in epidist","text":"Estimating delay distribution may appear simple: one imagine fitting probability distribution set observed delays. However, observed delays often biased ongoing outbreak. begin presenting formalism characterizing delay distributions well two main biases (truncation censoring) affecting . present statistical models correcting biases. epidemiological delay requires primary (starting) secondary (ending) event. example, incubation period measures time infection (primary event) symptom onset (secondary event). , use \\(p\\) denote time primary event, \\(s\\) denote time secondary event.","code":""},{"path":"https://epidist.epinowcast.org/dev/articles/model.html","id":"forwards-and-backwards-distributions","dir":"Articles","previous_headings":"1 Background","what":"Forwards and backwards distributions","title":"Guide to the statistical models implemented in epidist","text":"can measure delay distribution two different ways. First, can measure forward distribution \\(f_p(\\tau)\\), starting cohort individuals experienced primary event time \\(p\\) looking experienced secondary event. Second, can measure backward distribution \\(b_s(\\tau)\\), starting cohort individuals experienced secondary event time \\(s\\) looking experienced primary event. length individual delay \\(\\tau = p-s\\) remains constant whether look forward backwards, shape distribution affected differences perspectives due differences cohort composition. illustrate differences, let’s assume primary secondary events occur rates, equivalently incidences, \\(\\mathcal{P}(p)\\) \\(\\mathcal{S}(s)\\), respectively. , total density \\(\\mathcal{T}(p, s)\\) individuals primary event time \\(p\\) secondary event time \\(s\\) can expressed equivalently terms forward backward distributions: \\[ \\mathcal{T}(p, s) = \\mathcal{P}(p) f_p(s - p)  = \\mathcal{S}(s) b_s(s - p).  \\tag{1.1} \\] Rearranging Equation (1.1) gives \\[ b_s(\\tau) = \\frac{\\mathcal{P}(s - \\tau) f_{s - \\tau}(\\tau)}{\\mathcal{S}(s)}. \\tag{1.2} \\] denominator Equation (1.2), corresponds incidence secondary events, may expressed integral possible delays \\[ \\mathcal{S}(s) = \\int_{-\\infty}^\\infty \\mathcal{P}(s - \\tau) f_{s - \\tau}(\\tau) \\text{d} \\tau, \\] \\[ b_s(\\tau) = \\frac{\\mathcal{P}(s - \\tau) f_{s - \\tau}(\\tau)}{\\int_{-\\infty}^\\infty \\mathcal{P}(s - \\tau) f_{s - \\tau}(\\tau) \\text{d} \\tau}. \\] , see \\(b_s(\\tau)\\) depends \\(f_{s - \\tau}(\\tau)\\) also \\(\\mathcal{P}(s - \\tau)\\), meaning past changes incidence pattern affect shape distribution. Particularly, epidemic growing, likely observe shorter delays, causing underestimation mean delay. Therefore, always want characterize epidemiological delays forward perspective estimate forward distribution. reason, current methodology focuses biases affect estimation forward distribution.","code":""},{"path":"https://epidist.epinowcast.org/dev/articles/model.html","id":"right-truncation","dir":"Articles","previous_headings":"1 Background","what":"Right truncation","title":"Guide to the statistical models implemented in epidist","text":"One key bias affects forward distribution right truncation. Right truncation refers bias arising inability observe future events ocurs observe data based secondary events. example, assume data right truncated don’t observe secondary events past time \\(T\\). , observe delays whose secondary events occurred time \\(T\\), causing us underestimate mean distribution delays average shorter. Bias right truncation greater events likely recent. common example severely right truncated data data collected outbreaks growth incidence exponential (much likely recent event). hand, data collection continued end outbreak many fewer events likely recent little right truncation general. Mathematically right truncation can described follows. Let \\(P\\) \\(S\\) random variables. Let \\(F_p\\) forward cumulative distribution. , probability observing delay length \\(\\tau\\) given primary event occurred time \\(p\\) truncation time \\(T\\) can written : \\[ \\begin{aligned} \\mathbb{P}(S = P + \\tau \\, | \\, P = p, S < T) &= \\frac{\\mathbb{P}(S = P + \\tau, P = p, S < T)}{\\mathbb{P}(P = p, S < T)} \\\\ &= \\frac{\\mathbb{P}(S = P + \\tau < T \\, | \\, P = p)\\mathbb{P}(P = p)}{\\mathbb{P}(S < T \\, | \\, P = p)\\mathbb{P}(P = p)} \\\\ &= \\frac{\\mathbb{P}(S = P + \\tau < T \\, | \\, P = p)}{\\mathbb{P}(S < T \\, | \\, P = p)} \\\\ &= \\frac{f_p(\\tau)}{\\int_0^{T - p} f_p(x) \\text{d}x} = \\frac{f_p(\\tau)}{F_p(T - p)}, \\quad p + \\tau < T. \\end{aligned} \\] Examining equation illustrates (right) truncation renormalises density values possible. example, distribution \\(x \\sim \\text{Unif}(0, 1)\\) right truncated \\(T = 0.5\\) \\(x \\sim \\text{Unif}(0, 0.5)\\).","code":""},{"path":"https://epidist.epinowcast.org/dev/articles/model.html","id":"interval-censoring","dir":"Articles","previous_headings":"1 Background","what":"Interval censoring","title":"Guide to the statistical models implemented in epidist","text":"exact timing epidemiological events often unknown. Instead, may know event happened within certain interval. refer interval censoring. common example interval censoring epidemiology date censoring, know, using, data day event rather precise time. forms interval censoring, like weekly monthly interval censoring, also common. primary secondary events interval censored, referred double censoring. Mathematically single interval censoring defined follows. Assume secondary event \\(S\\) censored don’t know event exactly happened. Instead, know secondary event happened \\(S_L\\) \\(S_R\\). , \\[ \\begin{aligned} \\mathbb{P}(S_L < S < S_R \\, | \\, P = p) &= \\int_{S_L}^{S_R} f_p(y-p) dy\\\\ &= F_p(S_R-p) - F_p(S_L-p) \\end{aligned} \\] Similarly, double interval censoring defined follows. Now, assume primary \\(P\\) secondary \\(S\\) events truncated. know primary event happened \\(P_L\\) \\(P_R\\) secondary event happened \\(S_L\\) \\(S_R\\). now write \\(g_P\\) denote unconditional distribution primary events. , \\[ \\begin{aligned} \\mathbb{P}(S_L < S < S_R \\, | \\, P_L < P < P_R) &= \\mathbb{P}(P_L < P < P_R, S_L < S < S_R \\, | \\, P_L < P < P_R)\\\\ &= \\frac{\\mathbb{P}(P_L < P < P_R, S_L < S < S_R)}{\\mathbb{P}(P_L < P < P_R)}\\\\ &= \\frac{\\int_{P_L}^{P_R} \\int_{S_L}^{S_R} g_P(x) f_x(y-x) \\,dy\\, dx}{\\int_{P_L}^{P_R} g_P(z)\\, dz  }\\\\ &= \\int_{P_L}^{P_R} \\int_{S_L}^{S_R} g_P(x\\,|\\,P_L,P_R) f_x(y-x) \\,dy\\, dx \\end{aligned} \\] \\(g_P(x\\,|\\,P_L,P_R)\\) represents conditional distribution primary event given lower \\(P_L\\) upper \\(P_R\\) bounds.","code":""},{"path":"https://epidist.epinowcast.org/dev/articles/model.html","id":"the-naive-model","dir":"Articles","previous_headings":"","what":"The naive model","title":"Guide to the statistical models implemented in epidist","text":"simplest approach modelling epidemiological delay distributions ignoring truncation censoring biases simply treating delays continuous fully observed data. , likelihood observing delay \\(\\mathbf{Y}_i\\) given parameter \\(\\mathbf{\\theta}\\) straightforward: \\[ \\mathcal{L}(\\mathbf{Y}_i \\, | \\, \\mathbf{\\theta}) = f(y_i - x_i). \\] \\(y_i\\) \\(x_i\\) observed primary secondary event times. shown (Park et al. 2024) data double censored modelling approach biases mean approximately day well standard deviation. right truncation also present biases can severe plausible simulated scenarios leading biased means >30% shorter true distributions.","code":""},{"path":"https://epidist.epinowcast.org/dev/articles/model.html","id":"the-latent-model","dir":"Articles","previous_headings":"","what":"The latent model","title":"Guide to the statistical models implemented in epidist","text":"approach aims account right truncation double censoring using generative modelling approach. event, latent variable used represent exact time event. allows modelling continuous distribution, adjusted right truncation. Whilst approximation (Park et al. 2024) showed good recovery simulated distributions range settings. However, use two latent variables per observed delay means approach may scale poorly larger datasets. said approach used successfully multiple real-world outbreak settings ((Ward et al. 2022)). Mathematically model described follows. look conditional probability secondary event \\(S\\) falls \\(S_L\\) \\(S_R\\), given primary event \\(P\\) falls \\(P_L\\) \\(P_R\\) secondary event \\(S\\) occurs truncation time \\(T\\): \\[ \\begin{aligned} &\\mathbb{P}(S_L < S < S_R \\, | \\, P_L < P < P_R, S<T)\\\\ &= \\mathbb{P}(P_L < P < P_R, S_L < S < S_R, S<T \\, | \\, P_L < P < P_R, S<T)\\\\ &= \\frac{\\mathbb{P}(P_L < P < P_R, S_L < S < S_R, S<T)}{\\mathbb{P}(P_L < P < P_R, S<T)}\\\\ &= \\frac{\\int_{P_L}^{P_R} \\int_{S_L}^{S_R} g_P(x) f_x(y-x) \\,dy\\, dx}{\\int_{P_L}^{P_R} \\int_{z}^T g_P(z) f_z(w-z) \\, dz \\,dw  }\\\\ &= \\frac{\\int_{P_L}^{P_R} \\int_{S_L}^{S_R} g_P(x) f_x(y-x) \\,dy\\, dx}{\\int_{P_L}^{P_R} g_P(z) F_z(T-z) \\,dw  }\\\\ &= \\frac{\\int_{P_L}^{P_R} \\int_{S_L}^{S_R} g_P(x|P_L, P_R) f_x(y-x) \\,dy\\, dx}{\\int_{P_L}^{P_R} g_P(z|P_L, P_R) F_z(T-z) \\,dw  }\\\\ \\end{aligned} \\] Using latent variables, can now rewrite observation likelihood : \\[ \\begin{aligned} x_i &\\sim g_P(x_i \\, | \\, p_{L, }, p_{R, }) \\\\ y_i &\\sim \\text{Unif}(s_{L, }, s_{R, }) \\\\ \\mathcal{L}(\\mathbf{Y} \\, | \\, \\mathbf{\\theta}) &= \\prod_i \\left[ \\frac{f_{x_i}(y_i - x_i)}{\\int_{P_{L, }}^{P_{R, }} g_P(z \\, | \\, p_{L, }, p_{R, }) F_z(T - z) \\text{d}z} \\right]. \\end{aligned} \\] , \\(g_P(z \\, | \\, p_{L, }, p_{R, })\\) represents conditional distribution primary event given lower \\(P_L\\) upper \\(P_R\\) bounds; equivalent modelling incidence primary events.","code":""},{"path":[]},{"path":"https://epidist.epinowcast.org/dev/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Adam Howes. Author. Sang Woo Park. Author. Sam Abbott. Author, maintainer. Sebastian Funk. Contributor.","code":""},{"path":"https://epidist.epinowcast.org/dev/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Adam Howes, Park S, Sam Abbott (NULL). epidist: Estimate Epidemiological Delay Distributions brms. doi:10.5281/zenodo.14213017.","code":"@Manual{,   title = {epidist: Estimate Epidemiological Delay Distributions With brms},   author = {{Adam Howes} and Sang Woo Park and {Sam Abbott}},   year = {NULL},   doi = {10.5281/zenodo.14213017}, }"},{"path":[]},{"path":"https://epidist.epinowcast.org/dev/index.html","id":"summary","dir":"","previous_headings":"","what":"Summary","title":"Estimate Epidemiological Delay Distributions With brms","text":"Understanding accurately estimating epidemiological delay distributions important public health policy. estimates influence epidemic situational awareness, control strategies, resource allocation. package provides methods address key challenges estimating distributions, including truncation, interval censoring, dynamical biases. issues frequently overlooked, resulting biased conclusions. Built top ‘brms’, allows flexible modelling including time-varying spatial components partially pooled estimates demographic characteristics.","code":""},{"path":"https://epidist.epinowcast.org/dev/index.html","id":"quickstart","dir":"","previous_headings":"","what":"Quickstart","title":"Estimate Epidemiological Delay Distributions With brms","text":"learn epidist recommend reading vignettes order: Getting started epidist Using epidist estimate delay symptom onset positive test Ebola outbreak Sierra Leone Approximate Bayesian inference epidist","code":""},{"path":"https://epidist.epinowcast.org/dev/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Estimate Epidemiological Delay Distributions With brms","text":"can install latest released version using normal R function, though need point r-universe instead CRAN: Alternatively, can use remotes package install development version Github (warning! version may contain breaking changes /bugs): Similarly, can install historical versions specifying release tag (e.g. installs 0.1.0): Note: can also use last approach install specific commit needed, e.g. want try specific unreleased feature, absolute latest developmental version. default epidist uses rstan package fitting models. wish use cmdstanr package instead, need install CmdStan, also entails suitable C++ toolchain setup. recommend using cmdstanr package manage CmdStan. Stan team provides instructions Getting started cmdstanr vignette, details support package site, brief version : Note: can speed CmdStan installation using cores argument. installing particular version epidist, may also need install past version CmdStan, can version argument.","code":"install.packages(   \"epidist\",   repos = \"https://epinowcast.r-universe.dev\" ) remotes::install_github(   file.path(\"epinowcast\", \"epidist\"),   dependencies = TRUE ) remotes::install_github(   file.path(\"epinowcast\", \"epidist\"),   dependencies = TRUE, ref = \"v0.1.0\" ) # if you have not yet installed `epidist`, or you installed it without # `Suggests` dependencies install.packages(   \"cmdstanr\",   repos = c(\"https://stan-dev.r-universe.dev\", getOption(\"repos\")) )  # once `cmdstanr` is installed cmdstanr::install_cmdstan()"},{"path":"https://epidist.epinowcast.org/dev/index.html","id":"resources","dir":"","previous_headings":"","what":"Resources","title":"Estimate Epidemiological Delay Distributions With brms","text":"organisation website includes links resources, guest posts, seminar schedule upcoming past recordings. community forum areas question answer considering new methods tools, among others. generally interested real-time analysis infectious disease, may find useful even use epidist.","code":""},{"path":"https://epidist.epinowcast.org/dev/index.html","id":"contributing","dir":"","previous_headings":"","what":"Contributing","title":"Estimate Epidemiological Delay Distributions With brms","text":"welcome contributions new contributors! particularly appreciate help identifying identified issues. Please check add issues, /add pull request see contributing guide information.","code":""},{"path":"https://epidist.epinowcast.org/dev/index.html","id":"how-to-make-a-bug-report-or-feature-request","dir":"","previous_headings":"Contributing","what":"How to make a bug report or feature request","title":"Estimate Epidemiological Delay Distributions With brms","text":"Please briefly describe problem output expect issue. question, please don’t open issue. Instead, ask forum. See contributing guide information.","code":""},{"path":"https://epidist.epinowcast.org/dev/index.html","id":"code-of-conduct","dir":"","previous_headings":"Contributing","what":"Code of Conduct","title":"Estimate Epidemiological Delay Distributions With brms","text":"Please note epidist project released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"https://epidist.epinowcast.org/dev/index.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Estimate Epidemiological Delay Distributions With brms","text":"use epidist work, please consider citing using citation(\"epidist\"). using methodology, methodology based, please cite relevant papers. may include: Estimating epidemiological delay distributions infectious diseases Park et al. (2024) Best practices estimating reporting epidemiological delay distributions infectious diseases using public health surveillance healthcare data Charniga et al. (2024)","code":"citation(\"epidist\") To cite package 'epidist' in publications use:    Adam Howes, Park S, Sam Abbott (NULL). _epidist: Estimate   Epidemiological Delay Distributions With brms_.   doi:10.5281/zenodo.14213017   <https://doi.org/10.5281/zenodo.14213017>.  A BibTeX entry for LaTeX users is    @Manual{,     title = {epidist: Estimate Epidemiological Delay Distributions With brms},     author = {{Adam Howes} and Sang Woo Park and {Sam Abbott}},     year = {NULL},     doi = {10.5281/zenodo.14213017},   }"},{"path":"https://epidist.epinowcast.org/dev/index.html","id":"contributors","dir":"","previous_headings":"","what":"Contributors","title":"Estimate Epidemiological Delay Distributions With brms","text":"contributions project gratefully acknowledged using allcontributors package following -contributors specification. Contributions kind welcome!","code":""},{"path":"https://epidist.epinowcast.org/dev/index.html","id":"code","dir":"","previous_headings":"Contributors","what":"Code","title":"Estimate Epidemiological Delay Distributions With brms","text":"seabbs, athowes, parksw3, sbfnk, cherz4, damonbayer, medewitt","code":""},{"path":"https://epidist.epinowcast.org/dev/index.html","id":"issue-authors","dir":"","previous_headings":"Contributors","what":"Issue Authors","title":"Estimate Epidemiological Delay Distributions With brms","text":"kgostic, TimTaylor, jamesmbaazam, jonathonmellor","code":""},{"path":"https://epidist.epinowcast.org/dev/index.html","id":"issue-contributors","dir":"","previous_headings":"Contributors","what":"Issue Contributors","title":"Estimate Epidemiological Delay Distributions With brms","text":"pearsonca, SamuelBrand1, zsusswein, kcharniga","code":""},{"path":"https://epidist.epinowcast.org/dev/reference/add_mean_sd.default.html","id":null,"dir":"Reference","previous_headings":"","what":"Default method for add natural scale parameters — add_mean_sd.default","title":"Default method for add natural scale parameters — add_mean_sd.default","text":"Default method add natural scale parameters","code":""},{"path":"https://epidist.epinowcast.org/dev/reference/add_mean_sd.default.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Default method for add natural scale parameters — add_mean_sd.default","text":"","code":"# Default S3 method add_mean_sd(data, ...)"},{"path":"https://epidist.epinowcast.org/dev/reference/add_mean_sd.default.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Default method for add natural scale parameters — add_mean_sd.default","text":"data dataframe distributional parameters. ... Additional arguments method.","code":""},{"path":[]},{"path":"https://epidist.epinowcast.org/dev/reference/add_mean_sd.gamma_samples.html","id":null,"dir":"Reference","previous_headings":"","what":"Add natural scale mean and standard deviation parameters for a Gamma model — add_mean_sd.gamma_samples","title":"Add natural scale mean and standard deviation parameters for a Gamma model — add_mean_sd.gamma_samples","text":", mu shape distributional parameters brms.","code":""},{"path":"https://epidist.epinowcast.org/dev/reference/add_mean_sd.gamma_samples.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add natural scale mean and standard deviation parameters for a Gamma model — add_mean_sd.gamma_samples","text":"","code":"# S3 method for class 'gamma_samples' add_mean_sd(data, ...)"},{"path":"https://epidist.epinowcast.org/dev/reference/add_mean_sd.gamma_samples.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add natural scale mean and standard deviation parameters for a Gamma model — add_mean_sd.gamma_samples","text":"data dataframe distributional parameters. ... Additional arguments method.","code":""},{"path":[]},{"path":"https://epidist.epinowcast.org/dev/reference/add_mean_sd.html","id":null,"dir":"Reference","previous_headings":"","what":"Add natural scale mean and standard deviation parameters — add_mean_sd","title":"Add natural scale mean and standard deviation parameters — add_mean_sd","text":"Add natural scale mean standard deviation parameters","code":""},{"path":"https://epidist.epinowcast.org/dev/reference/add_mean_sd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add natural scale mean and standard deviation parameters — add_mean_sd","text":"","code":"add_mean_sd(data, ...)"},{"path":"https://epidist.epinowcast.org/dev/reference/add_mean_sd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add natural scale mean and standard deviation parameters — add_mean_sd","text":"data dataframe distributional parameters. ... Additional arguments method.","code":""},{"path":[]},{"path":"https://epidist.epinowcast.org/dev/reference/add_mean_sd.lognormal_samples.html","id":null,"dir":"Reference","previous_headings":"","what":"Add natural scale mean and standard deviation parameters for a lognormal model — add_mean_sd.lognormal_samples","title":"Add natural scale mean and standard deviation parameters for a lognormal model — add_mean_sd.lognormal_samples","text":"Note input parameters mu sigma, corresponding distributional parameters used brms lognormal family.","code":""},{"path":"https://epidist.epinowcast.org/dev/reference/add_mean_sd.lognormal_samples.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add natural scale mean and standard deviation parameters for a lognormal model — add_mean_sd.lognormal_samples","text":"","code":"# S3 method for class 'lognormal_samples' add_mean_sd(data, ...)"},{"path":"https://epidist.epinowcast.org/dev/reference/add_mean_sd.lognormal_samples.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add natural scale mean and standard deviation parameters for a lognormal model — add_mean_sd.lognormal_samples","text":"data dataframe distributional parameters. ... Additional arguments method.","code":""},{"path":[]},{"path":"https://epidist.epinowcast.org/dev/reference/add_mean_sd.weibull_samples.html","id":null,"dir":"Reference","previous_headings":"","what":"Add natural scale mean and standard deviation parameters for a Weibull model — add_mean_sd.weibull_samples","title":"Add natural scale mean and standard deviation parameters for a Weibull model — add_mean_sd.weibull_samples","text":"Note input parameters mu shape, corresponding distributional parameters used brms weibull family.","code":""},{"path":"https://epidist.epinowcast.org/dev/reference/add_mean_sd.weibull_samples.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add natural scale mean and standard deviation parameters for a Weibull model — add_mean_sd.weibull_samples","text":"","code":"# S3 method for class 'weibull_samples' add_mean_sd(data, ...)"},{"path":"https://epidist.epinowcast.org/dev/reference/add_mean_sd.weibull_samples.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add natural scale mean and standard deviation parameters for a Weibull model — add_mean_sd.weibull_samples","text":"data dataframe distributional parameters. ... Additional arguments method.","code":""},{"path":[]},{"path":"https://epidist.epinowcast.org/dev/reference/as_epidist_aggregate_data.data.frame.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an epidist_aggregate_data object from a data.frame — as_epidist_aggregate_data.data.frame","title":"Create an epidist_aggregate_data object from a data.frame — as_epidist_aggregate_data.data.frame","text":"method takes data.frame containing event dates (primary/secondary event dates observation date) along counts creates epidist_aggregate_data object. format useful working pre-aggregated data row represents multiple identical observations count stored specified column. Internally makes use as_epidist_linelist_data.data.frame() convert data linelist format adding count column. See methods data input options.","code":""},{"path":"https://epidist.epinowcast.org/dev/reference/as_epidist_aggregate_data.data.frame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an epidist_aggregate_data object from a data.frame — as_epidist_aggregate_data.data.frame","text":"","code":"# S3 method for class 'data.frame' as_epidist_aggregate_data(   data,   n = NULL,   pdate_lwr = NULL,   sdate_lwr = NULL,   pdate_upr = NULL,   sdate_upr = NULL,   obs_date = NULL,   ... )"},{"path":"https://epidist.epinowcast.org/dev/reference/as_epidist_aggregate_data.data.frame.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an epidist_aggregate_data object from a data.frame — as_epidist_aggregate_data.data.frame","text":"data data.frame containing line list data n character string giving name column containing counts row. NULL column n must present data. pdate_lwr string giving column data containing primary event lower bound datetime. Defaults NULL assumes variable pdate_lwr present. sdate_lwr string giving column data containing secondary event lower bound datetime. Defaults NULL assumes variable sdate_lwr present. pdate_upr string giving column data containing primary event upper bound datetime. column exists data used, otherwise supplied value pdate_lwr + 1 day used. sdate_upr string giving column data containing secondary event upper bound datetime. column exists data used, otherwise supplied value sdate_lwr + 1 day used. obs_date string giving column data containing observation time datetime. Optional, supplied maximum sdate_upr used. ... Additional arguments passed methods","code":""},{"path":[]},{"path":"https://epidist.epinowcast.org/dev/reference/as_epidist_aggregate_data.data.frame.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create an epidist_aggregate_data object from a data.frame — as_epidist_aggregate_data.data.frame","text":"","code":"sierra_leone_ebola_data |>   dplyr::count(date_of_symptom_onset, date_of_sample_tested) |>   as_epidist_aggregate_data(     pdate_lwr = \"date_of_symptom_onset\",     sdate_lwr = \"date_of_sample_tested\",     n = \"n\"   ) #> ℹ No primary event upper bound provided, using the primary event lower bound + 1 day as the assumed upper bound. #> ℹ No secondary event upper bound provided, using the secondary event lower bound + 1 day as the assumed upper bound. #> ℹ No observation time column provided, using 2015-09-14 as the observation date (the maximum of the secondary event upper bound). #> # A tibble: 2,453 × 11 #>    ptime_lwr ptime_upr stime_lwr stime_upr obs_time pdate_lwr  sdate_lwr      n #>        <dbl>     <dbl>     <dbl>     <dbl>    <dbl> <date>     <date>     <int> #>  1         0         1         5         6      484 2014-05-18 2014-05-23     1 #>  2         2         3         7         8      484 2014-05-20 2014-05-25     2 #>  3         3         4         8         9      484 2014-05-21 2014-05-26     4 #>  4         4         5         9        10      484 2014-05-22 2014-05-27     6 #>  5         8         9        13        14      484 2014-05-26 2014-05-31     1 #>  6         9        10        14        15      484 2014-05-27 2014-06-01     3 #>  7        11        12        16        17      484 2014-05-29 2014-06-03     7 #>  8        12        13        17        18      484 2014-05-30 2014-06-04     7 #>  9        13        14        18        19      484 2014-05-31 2014-06-05     1 #> 10        13        14        20        21      484 2014-05-31 2014-06-07     1 #> # ℹ 2,443 more rows #> # ℹ 3 more variables: pdate_upr <date>, sdate_upr <date>, obs_date <date>"},{"path":"https://epidist.epinowcast.org/dev/reference/as_epidist_aggregate_data.default.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an epidist_aggregate_data object from vectors of event times — as_epidist_aggregate_data.default","title":"Create an epidist_aggregate_data object from vectors of event times — as_epidist_aggregate_data.default","text":"method takes vectors event times (primary/secondary event times observation time) along counts creates epidist_aggregate_data object. format useful working pre-aggregated data row represents multiple identical observations count stored n column. Internally makes use as_epidist_linelist_data.default() convert data linelist format adding count column. See methods data input options.","code":""},{"path":"https://epidist.epinowcast.org/dev/reference/as_epidist_aggregate_data.default.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an epidist_aggregate_data object from vectors of event times — as_epidist_aggregate_data.default","text":"","code":"# Default S3 method as_epidist_aggregate_data(   data,   n = NULL,   ptime_upr = NULL,   stime_lwr = NULL,   stime_upr = NULL,   obs_time = NULL,   ... )"},{"path":"https://epidist.epinowcast.org/dev/reference/as_epidist_aggregate_data.default.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an epidist_aggregate_data object from vectors of event times — as_epidist_aggregate_data.default","text":"data Numeric vector giving lower bounds primary times. n integerish vector containing counts row. Must length input data vector. ptime_upr Numeric vector giving upper bounds primary times. stime_lwr, stime_upr Numeric vectors giving lower upper bounds secondary times. obs_time Numeric vector giving observation times. ... Additional columns add epidist_linelist_data object.","code":""},{"path":[]},{"path":"https://epidist.epinowcast.org/dev/reference/as_epidist_aggregate_data.default.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create an epidist_aggregate_data object from vectors of event times — as_epidist_aggregate_data.default","text":"","code":"as_epidist_aggregate_data(   data = c(1, 2, 3),   ptime_upr = c(2, 3, 4),   stime_lwr = c(3, 4, 5),   stime_upr = c(4, 5, 6),   obs_time = c(5, 6, 7),   n = c(1, 2, 3) ) #> # A tibble: 3 × 6 #>   ptime_lwr ptime_upr stime_lwr stime_upr obs_time     n #>       <dbl>     <dbl>     <dbl>     <dbl>    <dbl> <dbl> #> 1         1         2         3         4        5     1 #> 2         2         3         4         5        6     2 #> 3         3         4         5         6        7     3"},{"path":"https://epidist.epinowcast.org/dev/reference/as_epidist_aggregate_data.epidist_linelist_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert linelist data to aggregate format — as_epidist_aggregate_data.epidist_linelist_data","title":"Convert linelist data to aggregate format — as_epidist_aggregate_data.epidist_linelist_data","text":"method takes epidist_linelist_data object (see as_epidist_linelist_data()) aggregates counting unique combinations required time variables (primary/secondary event times observation time) additional variables specified . result compact representation data row represents multiple identical observations count stored n column.","code":""},{"path":"https://epidist.epinowcast.org/dev/reference/as_epidist_aggregate_data.epidist_linelist_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert linelist data to aggregate format — as_epidist_aggregate_data.epidist_linelist_data","text":"","code":"# S3 method for class 'epidist_linelist_data' as_epidist_aggregate_data(data, by = NULL, ...)"},{"path":"https://epidist.epinowcast.org/dev/reference/as_epidist_aggregate_data.epidist_linelist_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert linelist data to aggregate format — as_epidist_aggregate_data.epidist_linelist_data","text":"data data convert Character vector additional variables stratify , beyond required time variables. ... Additional arguments passed methods","code":""},{"path":[]},{"path":"https://epidist.epinowcast.org/dev/reference/as_epidist_aggregate_data.epidist_linelist_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert linelist data to aggregate format — as_epidist_aggregate_data.epidist_linelist_data","text":"","code":"# Default stratification by required time variables only sierra_leone_ebola_data |>   as_epidist_linelist_data(     pdate_lwr = \"date_of_symptom_onset\",     sdate_lwr = \"date_of_sample_tested\"   ) |>   as_epidist_aggregate_data() #> ℹ No primary event upper bound provided, using the primary event lower bound + 1 day as the assumed upper bound. #> ℹ No secondary event upper bound provided, using the secondary event lower bound + 1 day as the assumed upper bound. #> ℹ No observation time column provided, using 2015-09-14 as the observation date (the maximum of the secondary event upper bound). #> # A tibble: 2,453 × 6 #>    ptime_lwr ptime_upr stime_lwr stime_upr obs_time     n #>        <dbl>     <dbl>     <dbl>     <dbl>    <dbl> <int> #>  1         0         1         5         6      484     1 #>  2         2         3         7         8      484     2 #>  3         3         4         8         9      484     4 #>  4         4         5         9        10      484     6 #>  5         8         9        13        14      484     1 #>  6         9        10        14        15      484     3 #>  7        11        12        16        17      484     7 #>  8        12        13        17        18      484     7 #>  9        13        14        18        19      484     1 #> 10        13        14        20        21      484     1 #> # ℹ 2,443 more rows  # Additional stratification by other variables sierra_leone_ebola_data |>   as_epidist_linelist_data(     pdate_lwr = \"date_of_symptom_onset\",     sdate_lwr = \"date_of_sample_tested\"   ) |>   as_epidist_aggregate_data(by = \"age\") #> ℹ No primary event upper bound provided, using the primary event lower bound + 1 day as the assumed upper bound. #> ℹ No secondary event upper bound provided, using the secondary event lower bound + 1 day as the assumed upper bound. #> ℹ No observation time column provided, using 2015-09-14 as the observation date (the maximum of the secondary event upper bound). #> # A tibble: 7,667 × 7 #>    ptime_lwr ptime_upr stime_lwr stime_upr obs_time     n   age #>        <dbl>     <dbl>     <dbl>     <dbl>    <dbl> <int> <dbl> #>  1         0         1         5         6      484     1    20 #>  2         2         3         7         8      484     1    42 #>  3         2         3         7         8      484     1    45 #>  4         3         4         8         9      484     1    15 #>  5         3         4         8         9      484     1    19 #>  6         3         4         8         9      484     1    50 #>  7         3         4         8         9      484     1    55 #>  8         4         5         9        10      484     1     8 #>  9         4         5         9        10      484     1    27 #> 10         4         5         9        10      484     1    38 #> # ℹ 7,657 more rows"},{"path":"https://epidist.epinowcast.org/dev/reference/as_epidist_aggregate_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an epidist_aggregate_data object — as_epidist_aggregate_data","title":"Create an epidist_aggregate_data object — as_epidist_aggregate_data","text":"Creates epidist_aggregate_data object various input formats. useful working pre-aggregated data row represents multiple identical observations. See specific methods details supported input formats usage examples.","code":""},{"path":"https://epidist.epinowcast.org/dev/reference/as_epidist_aggregate_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an epidist_aggregate_data object — as_epidist_aggregate_data","text":"","code":"as_epidist_aggregate_data(data, ...)"},{"path":"https://epidist.epinowcast.org/dev/reference/as_epidist_aggregate_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an epidist_aggregate_data object — as_epidist_aggregate_data","text":"data data convert ... Additional arguments passed methods","code":""},{"path":[]},{"path":"https://epidist.epinowcast.org/dev/reference/as_epidist_latent_model.epidist_aggregate_data.html","id":null,"dir":"Reference","previous_headings":"","what":"The latent model method for epidist_aggregate_data objects — as_epidist_latent_model.epidist_aggregate_data","title":"The latent model method for epidist_aggregate_data objects — as_epidist_latent_model.epidist_aggregate_data","text":"method converts aggregate data latent model format first converting linelist format using as_epidist_linelist_data.epidist_aggregate_data() passing as_epidist_latent_model.epidist_linelist_data(). ensures counts aggregate data properly expanded individual observations fitting latent model.","code":""},{"path":"https://epidist.epinowcast.org/dev/reference/as_epidist_latent_model.epidist_aggregate_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The latent model method for epidist_aggregate_data objects — as_epidist_latent_model.epidist_aggregate_data","text":"","code":"# S3 method for class 'epidist_aggregate_data' as_epidist_latent_model(data, ...)"},{"path":"https://epidist.epinowcast.org/dev/reference/as_epidist_latent_model.epidist_aggregate_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The latent model method for epidist_aggregate_data objects — as_epidist_latent_model.epidist_aggregate_data","text":"data epidist_aggregate_data object ... used method.","code":""},{"path":[]},{"path":"https://epidist.epinowcast.org/dev/reference/as_epidist_latent_model.epidist_aggregate_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"The latent model method for epidist_aggregate_data objects — as_epidist_latent_model.epidist_aggregate_data","text":"","code":"sierra_leone_ebola_data |>   dplyr::count(date_of_symptom_onset, date_of_sample_tested) |>   as_epidist_aggregate_data(     pdate_lwr = \"date_of_symptom_onset\",     sdate_lwr = \"date_of_sample_tested\",     n = \"n\"   ) |>   as_epidist_latent_model() #> ℹ No primary event upper bound provided, using the primary event lower bound + 1 day as the assumed upper bound. #> ℹ No secondary event upper bound provided, using the secondary event lower bound + 1 day as the assumed upper bound. #> ℹ No observation time column provided, using 2015-09-14 as the observation date (the maximum of the secondary event upper bound). #> # A tibble: 8,358 × 16 #>    ptime_lwr ptime_upr stime_lwr stime_upr obs_time pdate_lwr  sdate_lwr  #>        <dbl>     <dbl>     <dbl>     <dbl>    <dbl> <date>     <date>     #>  1         0         1         5         6      484 2014-05-18 2014-05-23 #>  2         2         3         7         8      484 2014-05-20 2014-05-25 #>  3         2         3         7         8      484 2014-05-20 2014-05-25 #>  4         3         4         8         9      484 2014-05-21 2014-05-26 #>  5         3         4         8         9      484 2014-05-21 2014-05-26 #>  6         3         4         8         9      484 2014-05-21 2014-05-26 #>  7         3         4         8         9      484 2014-05-21 2014-05-26 #>  8         4         5         9        10      484 2014-05-22 2014-05-27 #>  9         4         5         9        10      484 2014-05-22 2014-05-27 #> 10         4         5         9        10      484 2014-05-22 2014-05-27 #> # ℹ 8,348 more rows #> # ℹ 9 more variables: pdate_upr <date>, sdate_upr <date>, obs_date <date>, #> #   relative_obs_time <dbl>, pwindow <dbl>, woverlap <dbl>, swindow <dbl>, #> #   delay <dbl>, .row_id <int>"},{"path":"https://epidist.epinowcast.org/dev/reference/as_epidist_latent_model.epidist_linelist_data.html","id":null,"dir":"Reference","previous_headings":"","what":"The latent model method for epidist_linelist_data objects — as_epidist_latent_model.epidist_linelist_data","title":"The latent model method for epidist_linelist_data objects — as_epidist_latent_model.epidist_linelist_data","text":"method takes epidist_linelist_data object converts format suitable fitting latent variable models. calculates key variables needed latent variable method described Park et al. (2024) Charniga et al. (2024). approach adjusts double interval censoring right truncation data.","code":""},{"path":"https://epidist.epinowcast.org/dev/reference/as_epidist_latent_model.epidist_linelist_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The latent model method for epidist_linelist_data objects — as_epidist_latent_model.epidist_linelist_data","text":"","code":"# S3 method for class 'epidist_linelist_data' as_epidist_latent_model(data, ...)"},{"path":"https://epidist.epinowcast.org/dev/reference/as_epidist_latent_model.epidist_linelist_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The latent model method for epidist_linelist_data objects — as_epidist_latent_model.epidist_linelist_data","text":"data epidist_linelist_data object containing individual-level observations primary secondary event times. See as_epidist_linelist_data() details creating object. ... used method.","code":""},{"path":"https://epidist.epinowcast.org/dev/reference/as_epidist_latent_model.epidist_linelist_data.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"The latent model method for epidist_linelist_data objects — as_epidist_latent_model.epidist_linelist_data","text":"Park et al. (2024) Charniga et al. (2024)","code":""},{"path":[]},{"path":"https://epidist.epinowcast.org/dev/reference/as_epidist_latent_model.epidist_linelist_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"The latent model method for epidist_linelist_data objects — as_epidist_latent_model.epidist_linelist_data","text":"","code":"sierra_leone_ebola_data |>   as_epidist_linelist_data(     pdate_lwr = \"date_of_symptom_onset\",     sdate_lwr = \"date_of_sample_tested\"   ) |>   as_epidist_latent_model() #> ℹ No primary event upper bound provided, using the primary event lower bound + 1 day as the assumed upper bound. #> ℹ No secondary event upper bound provided, using the secondary event lower bound + 1 day as the assumed upper bound. #> ℹ No observation time column provided, using 2015-09-14 as the observation date (the maximum of the secondary event upper bound). #> # A tibble: 8,358 × 21 #>    ptime_lwr ptime_upr stime_lwr stime_upr obs_time    id   age sex   pdate_lwr  #>        <dbl>     <dbl>     <dbl>     <dbl>    <dbl> <int> <dbl> <chr> <date>     #>  1         0         1         5         6      484     1    20 Fema… 2014-05-18 #>  2         2         3         7         8      484     2    42 Fema… 2014-05-20 #>  3         2         3         7         8      484     3    45 Fema… 2014-05-20 #>  4         3         4         8         9      484     4    15 Fema… 2014-05-21 #>  5         3         4         8         9      484     5    19 Fema… 2014-05-21 #>  6         3         4         8         9      484     6    55 Fema… 2014-05-21 #>  7         3         4         8         9      484     7    50 Fema… 2014-05-21 #>  8         4         5         9        10      484     8     8 Fema… 2014-05-22 #>  9         4         5         9        10      484     9    54 Fema… 2014-05-22 #> 10         4         5         9        10      484    10    57 Fema… 2014-05-22 #> # ℹ 8,348 more rows #> # ℹ 12 more variables: sdate_lwr <date>, district <chr>, chiefdom <chr>, #> #   pdate_upr <date>, sdate_upr <date>, obs_date <date>, #> #   relative_obs_time <dbl>, pwindow <dbl>, woverlap <dbl>, swindow <dbl>, #> #   delay <dbl>, .row_id <int>"},{"path":"https://epidist.epinowcast.org/dev/reference/as_epidist_latent_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert an object to an epidist_latent_model object — as_epidist_latent_model","title":"Convert an object to an epidist_latent_model object — as_epidist_latent_model","text":"Creates epidist_latent_model object various input formats. enables fitting latent variable models epidemiological delays using epidist(), described Park et al. (2024) Charniga et al. (2024) latent model approach accounts double interval censoring right truncation delay data.","code":""},{"path":"https://epidist.epinowcast.org/dev/reference/as_epidist_latent_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert an object to an epidist_latent_model object — as_epidist_latent_model","text":"","code":"as_epidist_latent_model(data, ...)"},{"path":"https://epidist.epinowcast.org/dev/reference/as_epidist_latent_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert an object to an epidist_latent_model object — as_epidist_latent_model","text":"data object converted  class epidist_latent_model ... Additional arguments passed methods.","code":""},{"path":"https://epidist.epinowcast.org/dev/reference/as_epidist_latent_model.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Convert an object to an epidist_latent_model object — as_epidist_latent_model","text":"Park et al. (2024) Charniga et al. (2024)","code":""},{"path":[]},{"path":"https://epidist.epinowcast.org/dev/reference/as_epidist_linelist_data.data.frame.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an epidist_linelist_data object from a data frame with event dates — as_epidist_linelist_data.data.frame","title":"Create an epidist_linelist_data object from a data frame with event dates — as_epidist_linelist_data.data.frame","text":"method takes data.frame containing event dates (primary/secondary event dates observation date) creates epidist_linelist_data object. format useful working individual-level data row represents single observation. Internally converts dates numeric times relative earliest primary event date uses as_epidist_linelist_data.default() create final object. See methods data input options.","code":""},{"path":"https://epidist.epinowcast.org/dev/reference/as_epidist_linelist_data.data.frame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an epidist_linelist_data object from a data frame with event dates — as_epidist_linelist_data.data.frame","text":"","code":"# S3 method for class 'data.frame' as_epidist_linelist_data(   data,   pdate_lwr = NULL,   sdate_lwr = NULL,   pdate_upr = NULL,   sdate_upr = NULL,   obs_date = NULL,   ... )"},{"path":"https://epidist.epinowcast.org/dev/reference/as_epidist_linelist_data.data.frame.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an epidist_linelist_data object from a data frame with event dates — as_epidist_linelist_data.data.frame","text":"data data.frame containing line list data pdate_lwr string giving column data containing primary event lower bound datetime. Defaults NULL assumes variable pdate_lwr present. sdate_lwr string giving column data containing secondary event lower bound datetime. Defaults NULL assumes variable sdate_lwr present. pdate_upr string giving column data containing primary event upper bound datetime. column exists data used, otherwise supplied value pdate_lwr + 1 day used. sdate_upr string giving column data containing secondary event upper bound datetime. column exists data used, otherwise supplied value sdate_lwr + 1 day used. obs_date string giving column data containing observation time datetime. Optional, supplied maximum sdate_upr used. ... Additional arguments passed methods","code":""},{"path":[]},{"path":"https://epidist.epinowcast.org/dev/reference/as_epidist_linelist_data.data.frame.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create an epidist_linelist_data object from a data frame with event dates — as_epidist_linelist_data.data.frame","text":"","code":"sierra_leone_ebola_data |>   as_epidist_linelist_data(     pdate_lwr = \"date_of_symptom_onset\",     sdate_lwr = \"date_of_sample_tested\"   ) #> ℹ No primary event upper bound provided, using the primary event lower bound + 1 day as the assumed upper bound. #> ℹ No secondary event upper bound provided, using the secondary event lower bound + 1 day as the assumed upper bound. #> ℹ No observation time column provided, using 2015-09-14 as the observation date (the maximum of the secondary event upper bound). #> # A tibble: 8,358 × 15 #>    ptime_lwr ptime_upr stime_lwr stime_upr obs_time    id   age sex   pdate_lwr  #>        <dbl>     <dbl>     <dbl>     <dbl>    <dbl> <int> <dbl> <chr> <date>     #>  1         0         1         5         6      484     1    20 Fema… 2014-05-18 #>  2         2         3         7         8      484     2    42 Fema… 2014-05-20 #>  3         2         3         7         8      484     3    45 Fema… 2014-05-20 #>  4         3         4         8         9      484     4    15 Fema… 2014-05-21 #>  5         3         4         8         9      484     5    19 Fema… 2014-05-21 #>  6         3         4         8         9      484     6    55 Fema… 2014-05-21 #>  7         3         4         8         9      484     7    50 Fema… 2014-05-21 #>  8         4         5         9        10      484     8     8 Fema… 2014-05-22 #>  9         4         5         9        10      484     9    54 Fema… 2014-05-22 #> 10         4         5         9        10      484    10    57 Fema… 2014-05-22 #> # ℹ 8,348 more rows #> # ℹ 6 more variables: sdate_lwr <date>, district <chr>, chiefdom <chr>, #> #   pdate_upr <date>, sdate_upr <date>, obs_date <date>"},{"path":"https://epidist.epinowcast.org/dev/reference/as_epidist_linelist_data.default.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an epidist_linelist_data object from vectors of event times — as_epidist_linelist_data.default","title":"Create an epidist_linelist_data object from vectors of event times — as_epidist_linelist_data.default","text":"method takes vectors event times (primary/secondary event times observation time) creates epidist_linelist_data object. format useful working individual-level data row represents single observation. See methods data input options.","code":""},{"path":"https://epidist.epinowcast.org/dev/reference/as_epidist_linelist_data.default.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an epidist_linelist_data object from vectors of event times — as_epidist_linelist_data.default","text":"","code":"# Default S3 method as_epidist_linelist_data(   data,   ptime_upr = NULL,   stime_lwr = NULL,   stime_upr = NULL,   obs_time = NULL,   ... )"},{"path":"https://epidist.epinowcast.org/dev/reference/as_epidist_linelist_data.default.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an epidist_linelist_data object from vectors of event times — as_epidist_linelist_data.default","text":"data Numeric vector giving lower bounds primary times. ptime_upr Numeric vector giving upper bounds primary times. stime_lwr, stime_upr Numeric vectors giving lower upper bounds secondary times. obs_time Numeric vector giving observation times. ... Additional columns add epidist_linelist_data object.","code":""},{"path":[]},{"path":"https://epidist.epinowcast.org/dev/reference/as_epidist_linelist_data.default.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create an epidist_linelist_data object from vectors of event times — as_epidist_linelist_data.default","text":"","code":"as_epidist_linelist_data(   data = c(1, 2, 3),   ptime_upr = c(2, 3, 4),   stime_lwr = c(3, 4, 5),   stime_upr = c(4, 5, 6),   obs_time = c(5, 6, 7) ) #> # A tibble: 3 × 5 #>   ptime_lwr ptime_upr stime_lwr stime_upr obs_time #>       <dbl>     <dbl>     <dbl>     <dbl>    <dbl> #> 1         1         2         3         4        5 #> 2         2         3         4         5        6 #> 3         3         4         5         6        7"},{"path":"https://epidist.epinowcast.org/dev/reference/as_epidist_linelist_data.epidist_aggregate_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert aggregate data to linelist format — as_epidist_linelist_data.epidist_aggregate_data","title":"Convert aggregate data to linelist format — as_epidist_linelist_data.epidist_aggregate_data","text":"method expands epidist_aggregate_data object individual observations uncounting n column, converts linelist format using as_epidist_linelist_data.data.frame().","code":""},{"path":"https://epidist.epinowcast.org/dev/reference/as_epidist_linelist_data.epidist_aggregate_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert aggregate data to linelist format — as_epidist_linelist_data.epidist_aggregate_data","text":"","code":"# S3 method for class 'epidist_aggregate_data' as_epidist_linelist_data(data, ...)"},{"path":"https://epidist.epinowcast.org/dev/reference/as_epidist_linelist_data.epidist_aggregate_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert aggregate data to linelist format — as_epidist_linelist_data.epidist_aggregate_data","text":"data data convert ... Additional arguments passed methods","code":""},{"path":[]},{"path":"https://epidist.epinowcast.org/dev/reference/as_epidist_linelist_data.epidist_aggregate_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert aggregate data to linelist format — as_epidist_linelist_data.epidist_aggregate_data","text":"","code":"sierra_leone_ebola_data |>   dplyr::count(date_of_symptom_onset, date_of_sample_tested) |>   as_epidist_aggregate_data(     pdate_lwr = \"date_of_symptom_onset\",     sdate_lwr = \"date_of_sample_tested\",     n = \"n\"   ) |>   as_epidist_linelist_data() #> ℹ No primary event upper bound provided, using the primary event lower bound + 1 day as the assumed upper bound. #> ℹ No secondary event upper bound provided, using the secondary event lower bound + 1 day as the assumed upper bound. #> ℹ No observation time column provided, using 2015-09-14 as the observation date (the maximum of the secondary event upper bound). #> # A tibble: 8,358 × 10 #>    ptime_lwr ptime_upr stime_lwr stime_upr obs_time pdate_lwr  sdate_lwr  #>        <dbl>     <dbl>     <dbl>     <dbl>    <dbl> <date>     <date>     #>  1         0         1         5         6      484 2014-05-18 2014-05-23 #>  2         2         3         7         8      484 2014-05-20 2014-05-25 #>  3         2         3         7         8      484 2014-05-20 2014-05-25 #>  4         3         4         8         9      484 2014-05-21 2014-05-26 #>  5         3         4         8         9      484 2014-05-21 2014-05-26 #>  6         3         4         8         9      484 2014-05-21 2014-05-26 #>  7         3         4         8         9      484 2014-05-21 2014-05-26 #>  8         4         5         9        10      484 2014-05-22 2014-05-27 #>  9         4         5         9        10      484 2014-05-22 2014-05-27 #> 10         4         5         9        10      484 2014-05-22 2014-05-27 #> # ℹ 8,348 more rows #> # ℹ 3 more variables: pdate_upr <date>, sdate_upr <date>, obs_date <date>"},{"path":"https://epidist.epinowcast.org/dev/reference/as_epidist_linelist_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an epidist_linelist_data object — as_epidist_linelist_data","title":"Create an epidist_linelist_data object — as_epidist_linelist_data","text":"Creates epidist_linelist_data object various input formats. useful working individual-level data row represents single observation primary secondary event times. See specific methods details supported input formats usage examples.","code":""},{"path":"https://epidist.epinowcast.org/dev/reference/as_epidist_linelist_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an epidist_linelist_data object — as_epidist_linelist_data","text":"","code":"as_epidist_linelist_data(data, ...)"},{"path":"https://epidist.epinowcast.org/dev/reference/as_epidist_linelist_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an epidist_linelist_data object — as_epidist_linelist_data","text":"data data convert ... Additional arguments passed methods","code":""},{"path":[]},{"path":"https://epidist.epinowcast.org/dev/reference/as_epidist_marginal_model.epidist_aggregate_data.html","id":null,"dir":"Reference","previous_headings":"","what":"The marginal model method for epidist_aggregate_data objects — as_epidist_marginal_model.epidist_aggregate_data","title":"The marginal model method for epidist_aggregate_data objects — as_epidist_marginal_model.epidist_aggregate_data","text":"method converts aggregate data marginal model format passing as_epidist_marginal_model.epidist_linelist_data() n column used weights. ensures likelihood weighted counts aggregate data.","code":""},{"path":"https://epidist.epinowcast.org/dev/reference/as_epidist_marginal_model.epidist_aggregate_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The marginal model method for epidist_aggregate_data objects — as_epidist_marginal_model.epidist_aggregate_data","text":"","code":"# S3 method for class 'epidist_aggregate_data' as_epidist_marginal_model(data, obs_time_threshold = 2, ...)"},{"path":"https://epidist.epinowcast.org/dev/reference/as_epidist_marginal_model.epidist_aggregate_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The marginal model method for epidist_aggregate_data objects — as_epidist_marginal_model.epidist_aggregate_data","text":"data epidist_aggregate_data object obs_time_threshold Ratio used determine threshold setting relative observation times Inf. Observation times greater obs_time_threshold times maximum delay set Inf improve model efficiency reducing number unique observation times. Default 2. ... used method.","code":""},{"path":[]},{"path":"https://epidist.epinowcast.org/dev/reference/as_epidist_marginal_model.epidist_aggregate_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"The marginal model method for epidist_aggregate_data objects — as_epidist_marginal_model.epidist_aggregate_data","text":"","code":"sierra_leone_ebola_data |>   dplyr::count(date_of_symptom_onset, date_of_sample_tested) |>   as_epidist_aggregate_data(     pdate_lwr = \"date_of_symptom_onset\",     sdate_lwr = \"date_of_sample_tested\",     n = \"n\"   ) |>   as_epidist_marginal_model() #> ℹ No primary event upper bound provided, using the primary event lower bound + 1 day as the assumed upper bound. #> ℹ No secondary event upper bound provided, using the secondary event lower bound + 1 day as the assumed upper bound. #> ℹ No observation time column provided, using 2015-09-14 as the observation date (the maximum of the secondary event upper bound). #> ! Setting 2394 observation times beyond 98 (=2x max delay) to Inf. This #>   improves model efficiency by reducing unique observation times while #>   maintaining model accuracy as these times should have negligible impact. #> # A tibble: 2,453 × 17 #>    ptime_lwr ptime_upr stime_lwr stime_upr obs_time pdate_lwr  sdate_lwr      n #>        <dbl>     <dbl>     <dbl>     <dbl>    <dbl> <date>     <date>     <int> #>  1         0         1         5         6      484 2014-05-18 2014-05-23     1 #>  2         2         3         7         8      484 2014-05-20 2014-05-25     2 #>  3         3         4         8         9      484 2014-05-21 2014-05-26     4 #>  4         4         5         9        10      484 2014-05-22 2014-05-27     6 #>  5         8         9        13        14      484 2014-05-26 2014-05-31     1 #>  6         9        10        14        15      484 2014-05-27 2014-06-01     3 #>  7        11        12        16        17      484 2014-05-29 2014-06-03     7 #>  8        12        13        17        18      484 2014-05-30 2014-06-04     7 #>  9        13        14        18        19      484 2014-05-31 2014-06-05     1 #> 10        13        14        20        21      484 2014-05-31 2014-06-07     1 #> # ℹ 2,443 more rows #> # ℹ 9 more variables: pdate_upr <date>, sdate_upr <date>, obs_date <date>, #> #   pwindow <dbl>, swindow <dbl>, relative_obs_time <dbl>, #> #   orig_relative_obs_time <dbl>, delay_lwr <dbl>, delay_upr <dbl>"},{"path":"https://epidist.epinowcast.org/dev/reference/as_epidist_marginal_model.epidist_linelist_data.html","id":null,"dir":"Reference","previous_headings":"","what":"The marginal model method for epidist_linelist_data objects — as_epidist_marginal_model.epidist_linelist_data","title":"The marginal model method for epidist_linelist_data objects — as_epidist_marginal_model.epidist_linelist_data","text":"method converts linelist data marginal model format calculating delays primary secondary events, along observation times censoring windows. likelihood used imported primarycensored package handles censoring primary secondary events well truncation due observation times. principle, method accurate computationally efficient latent model (as_epidist_latent_model()) approach settings except number unique strata approaches number observations.","code":""},{"path":"https://epidist.epinowcast.org/dev/reference/as_epidist_marginal_model.epidist_linelist_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The marginal model method for epidist_linelist_data objects — as_epidist_marginal_model.epidist_linelist_data","text":"","code":"# S3 method for class 'epidist_linelist_data' as_epidist_marginal_model(data, obs_time_threshold = 2, weight = NULL, ...)"},{"path":"https://epidist.epinowcast.org/dev/reference/as_epidist_marginal_model.epidist_linelist_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The marginal model method for epidist_linelist_data objects — as_epidist_marginal_model.epidist_linelist_data","text":"data epidist_linelist_data object obs_time_threshold Ratio used determine threshold setting relative observation times Inf. Observation times greater obs_time_threshold times maximum delay set Inf improve model efficiency reducing number unique observation times. Default 2. weight column name use weighting data likelihood. Default NULL. Internally used define 'n' column returned object. ... used method.","code":""},{"path":"https://epidist.epinowcast.org/dev/reference/as_epidist_marginal_model.epidist_linelist_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"The marginal model method for epidist_linelist_data objects — as_epidist_marginal_model.epidist_linelist_data","text":"formula specified epidist(), data transformed using epidist_transform_data_model.epidist_marginal_model() prepare model fitting. transformation summarises data counting unique combinations delays, observation times, censoring windows variables model formula.","code":""},{"path":[]},{"path":"https://epidist.epinowcast.org/dev/reference/as_epidist_marginal_model.epidist_linelist_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"The marginal model method for epidist_linelist_data objects — as_epidist_marginal_model.epidist_linelist_data","text":"","code":"sierra_leone_ebola_data |>   as_epidist_linelist_data(     pdate_lwr = \"date_of_symptom_onset\",     sdate_lwr = \"date_of_sample_tested\"   ) |>   as_epidist_marginal_model() #> ℹ No primary event upper bound provided, using the primary event lower bound + 1 day as the assumed upper bound. #> ℹ No secondary event upper bound provided, using the secondary event lower bound + 1 day as the assumed upper bound. #> ℹ No observation time column provided, using 2015-09-14 as the observation date (the maximum of the secondary event upper bound). #> ! Setting 8294 observation times beyond 98 (=2x max delay) to Inf. This #>   improves model efficiency by reducing unique observation times while #>   maintaining model accuracy as these times should have negligible impact. #> # A tibble: 8,358 × 22 #>    ptime_lwr ptime_upr stime_lwr stime_upr obs_time    id   age sex   pdate_lwr  #>        <dbl>     <dbl>     <dbl>     <dbl>    <dbl> <int> <dbl> <chr> <date>     #>  1         0         1         5         6      484     1    20 Fema… 2014-05-18 #>  2         2         3         7         8      484     2    42 Fema… 2014-05-20 #>  3         2         3         7         8      484     3    45 Fema… 2014-05-20 #>  4         3         4         8         9      484     4    15 Fema… 2014-05-21 #>  5         3         4         8         9      484     5    19 Fema… 2014-05-21 #>  6         3         4         8         9      484     6    55 Fema… 2014-05-21 #>  7         3         4         8         9      484     7    50 Fema… 2014-05-21 #>  8         4         5         9        10      484     8     8 Fema… 2014-05-22 #>  9         4         5         9        10      484     9    54 Fema… 2014-05-22 #> 10         4         5         9        10      484    10    57 Fema… 2014-05-22 #> # ℹ 8,348 more rows #> # ℹ 13 more variables: sdate_lwr <date>, district <chr>, chiefdom <chr>, #> #   pdate_upr <date>, sdate_upr <date>, obs_date <date>, pwindow <dbl>, #> #   swindow <dbl>, relative_obs_time <dbl>, orig_relative_obs_time <dbl>, #> #   delay_lwr <dbl>, delay_upr <dbl>, n <dbl>"},{"path":"https://epidist.epinowcast.org/dev/reference/as_epidist_marginal_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert an object to an epidist_marginal_model object — as_epidist_marginal_model","title":"Convert an object to an epidist_marginal_model object — as_epidist_marginal_model","text":"Creates epidist_marginal_model object various input formats. enables fitting marginal models epidemiological delays using epidist(). marginal model approach uses likelihood primarycensored package efficiently handle censoring primary secondary events well truncation due observation times. See specific methods as_epidist_marginal_model.epidist_linelist_data() as_epidist_marginal_model.epidist_aggregate_data() details supported input formats usage examples.","code":""},{"path":"https://epidist.epinowcast.org/dev/reference/as_epidist_marginal_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert an object to an epidist_marginal_model object — as_epidist_marginal_model","text":"","code":"as_epidist_marginal_model(data, ...)"},{"path":"https://epidist.epinowcast.org/dev/reference/as_epidist_marginal_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert an object to an epidist_marginal_model object — as_epidist_marginal_model","text":"data object converted class epidist_marginal_model ... Additional arguments passed methods.","code":""},{"path":[]},{"path":"https://epidist.epinowcast.org/dev/reference/as_epidist_naive_model.epidist_aggregate_data.html","id":null,"dir":"Reference","previous_headings":"","what":"The naive model method for epidist_aggregate_data objects — as_epidist_naive_model.epidist_aggregate_data","title":"The naive model method for epidist_aggregate_data objects — as_epidist_naive_model.epidist_aggregate_data","text":"method converts aggregate data naive model format passing as_epidist_naive_model.epidist_linelist_data() n column used weights. ensures likelihood weighted counts aggregate data.","code":""},{"path":"https://epidist.epinowcast.org/dev/reference/as_epidist_naive_model.epidist_aggregate_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The naive model method for epidist_aggregate_data objects — as_epidist_naive_model.epidist_aggregate_data","text":"","code":"# S3 method for class 'epidist_aggregate_data' as_epidist_naive_model(data, ...)"},{"path":"https://epidist.epinowcast.org/dev/reference/as_epidist_naive_model.epidist_aggregate_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The naive model method for epidist_aggregate_data objects — as_epidist_naive_model.epidist_aggregate_data","text":"data epidist_aggregate_data object. ... Additional arguments passed methods.","code":""},{"path":[]},{"path":"https://epidist.epinowcast.org/dev/reference/as_epidist_naive_model.epidist_aggregate_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"The naive model method for epidist_aggregate_data objects — as_epidist_naive_model.epidist_aggregate_data","text":"","code":"sierra_leone_ebola_data |>   dplyr::count(date_of_symptom_onset, date_of_sample_tested) |>   as_epidist_aggregate_data(     pdate_lwr = \"date_of_symptom_onset\",     sdate_lwr = \"date_of_sample_tested\",     n = \"n\"   ) |>   as_epidist_naive_model() #> ℹ No primary event upper bound provided, using the primary event lower bound + 1 day as the assumed upper bound. #> ℹ No secondary event upper bound provided, using the secondary event lower bound + 1 day as the assumed upper bound. #> ℹ No observation time column provided, using 2015-09-14 as the observation date (the maximum of the secondary event upper bound). #> # A tibble: 2,453 × 12 #>    ptime_lwr ptime_upr stime_lwr stime_upr obs_time pdate_lwr  sdate_lwr      n #>        <dbl>     <dbl>     <dbl>     <dbl>    <dbl> <date>     <date>     <int> #>  1         0         1         5         6      484 2014-05-18 2014-05-23     1 #>  2         2         3         7         8      484 2014-05-20 2014-05-25     2 #>  3         3         4         8         9      484 2014-05-21 2014-05-26     4 #>  4         4         5         9        10      484 2014-05-22 2014-05-27     6 #>  5         8         9        13        14      484 2014-05-26 2014-05-31     1 #>  6         9        10        14        15      484 2014-05-27 2014-06-01     3 #>  7        11        12        16        17      484 2014-05-29 2014-06-03     7 #>  8        12        13        17        18      484 2014-05-30 2014-06-04     7 #>  9        13        14        18        19      484 2014-05-31 2014-06-05     1 #> 10        13        14        20        21      484 2014-05-31 2014-06-07     1 #> # ℹ 2,443 more rows #> # ℹ 4 more variables: pdate_upr <date>, sdate_upr <date>, obs_date <date>, #> #   delay <dbl>"},{"path":"https://epidist.epinowcast.org/dev/reference/as_epidist_naive_model.epidist_linelist_data.html","id":null,"dir":"Reference","previous_headings":"","what":"The naive model method for epidist_linelist_data objects — as_epidist_naive_model.epidist_linelist_data","title":"The naive model method for epidist_linelist_data objects — as_epidist_naive_model.epidist_linelist_data","text":"method converts linelist data naive model format calculating delays primary secondary events enable model fitting epidist(). input data contains n column (e.g. aggregated data), likelihood weighted counts.","code":""},{"path":"https://epidist.epinowcast.org/dev/reference/as_epidist_naive_model.epidist_linelist_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The naive model method for epidist_linelist_data objects — as_epidist_naive_model.epidist_linelist_data","text":"","code":"# S3 method for class 'epidist_linelist_data' as_epidist_naive_model(data, weight = NULL, ...)"},{"path":"https://epidist.epinowcast.org/dev/reference/as_epidist_naive_model.epidist_linelist_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The naive model method for epidist_linelist_data objects — as_epidist_naive_model.epidist_linelist_data","text":"data epidist_linelist_data object. weight column name use weighting data likelihood. Default NULL. Internally used define 'n' column returned object. ... Additional arguments passed methods.","code":""},{"path":"https://epidist.epinowcast.org/dev/reference/as_epidist_naive_model.epidist_linelist_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"The naive model method for epidist_linelist_data objects — as_epidist_naive_model.epidist_linelist_data","text":"formula specified epidist(), data transformed using epidist_transform_data_model.epidist_naive_model() prepare model fitting. transformation summarises data counting unique combinations delays variables model formula. naive model simplest approach ignores censoring truncation data using lower bounds point estimates. data substantial censoring truncation, consider using as_epidist_latent_model() as_epidist_marginal_model() properly account features.","code":""},{"path":[]},{"path":"https://epidist.epinowcast.org/dev/reference/as_epidist_naive_model.epidist_linelist_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"The naive model method for epidist_linelist_data objects — as_epidist_naive_model.epidist_linelist_data","text":"","code":"sierra_leone_ebola_data |>   as_epidist_linelist_data(     pdate_lwr = \"date_of_symptom_onset\",     sdate_lwr = \"date_of_sample_tested\"   ) |>   as_epidist_naive_model() #> ℹ No primary event upper bound provided, using the primary event lower bound + 1 day as the assumed upper bound. #> ℹ No secondary event upper bound provided, using the secondary event lower bound + 1 day as the assumed upper bound. #> ℹ No observation time column provided, using 2015-09-14 as the observation date (the maximum of the secondary event upper bound). #> # A tibble: 8,358 × 17 #>    ptime_lwr ptime_upr stime_lwr stime_upr obs_time    id   age sex   pdate_lwr  #>        <dbl>     <dbl>     <dbl>     <dbl>    <dbl> <int> <dbl> <chr> <date>     #>  1         0         1         5         6      484     1    20 Fema… 2014-05-18 #>  2         2         3         7         8      484     2    42 Fema… 2014-05-20 #>  3         2         3         7         8      484     3    45 Fema… 2014-05-20 #>  4         3         4         8         9      484     4    15 Fema… 2014-05-21 #>  5         3         4         8         9      484     5    19 Fema… 2014-05-21 #>  6         3         4         8         9      484     6    55 Fema… 2014-05-21 #>  7         3         4         8         9      484     7    50 Fema… 2014-05-21 #>  8         4         5         9        10      484     8     8 Fema… 2014-05-22 #>  9         4         5         9        10      484     9    54 Fema… 2014-05-22 #> 10         4         5         9        10      484    10    57 Fema… 2014-05-22 #> # ℹ 8,348 more rows #> # ℹ 8 more variables: sdate_lwr <date>, district <chr>, chiefdom <chr>, #> #   pdate_upr <date>, sdate_upr <date>, obs_date <date>, delay <dbl>, n <dbl>"},{"path":"https://epidist.epinowcast.org/dev/reference/as_epidist_naive_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert an object to an epidist_naive_model object — as_epidist_naive_model","title":"Convert an object to an epidist_naive_model object — as_epidist_naive_model","text":"Creates epidist_naive_model object various input formats. enables fitting naive models epidemiological delays using epidist(). naive model approach ignores censoring truncation data, using lower bounds intervals point estimates. simplest approach may lead biased estimates substantial censoring truncation data.","code":""},{"path":"https://epidist.epinowcast.org/dev/reference/as_epidist_naive_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert an object to an epidist_naive_model object — as_epidist_naive_model","text":"","code":"as_epidist_naive_model(data, ...)"},{"path":"https://epidist.epinowcast.org/dev/reference/as_epidist_naive_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert an object to an epidist_naive_model object — as_epidist_naive_model","text":"data object converted class epidist_naive_model ... Additional arguments passed methods.","code":""},{"path":[]},{"path":"https://epidist.epinowcast.org/dev/reference/assert_epidist.epidist_aggregate_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Assert validity of epidist_aggregate_data objects — assert_epidist.epidist_aggregate_data","title":"Assert validity of epidist_aggregate_data objects — assert_epidist.epidist_aggregate_data","text":"Assert validity epidist_aggregate_data objects","code":""},{"path":"https://epidist.epinowcast.org/dev/reference/assert_epidist.epidist_aggregate_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assert validity of epidist_aggregate_data objects — assert_epidist.epidist_aggregate_data","text":"","code":"# S3 method for class 'epidist_aggregate_data' assert_epidist(data, ...)"},{"path":"https://epidist.epinowcast.org/dev/reference/assert_epidist.epidist_aggregate_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assert validity of epidist_aggregate_data objects — assert_epidist.epidist_aggregate_data","text":"data object check ... Additional arguments","code":""},{"path":[]},{"path":"https://epidist.epinowcast.org/dev/reference/assert_epidist.epidist_aggregate_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Assert validity of epidist_aggregate_data objects — assert_epidist.epidist_aggregate_data","text":"","code":"sierra_leone_ebola_data |>   as_epidist_linelist_data(     pdate_lwr = \"date_of_symptom_onset\",     sdate_lwr = \"date_of_sample_tested\"   ) |>   as_epidist_aggregate_data() |>   assert_epidist() #> ℹ No primary event upper bound provided, using the primary event lower bound + 1 day as the assumed upper bound. #> ℹ No secondary event upper bound provided, using the secondary event lower bound + 1 day as the assumed upper bound. #> ℹ No observation time column provided, using 2015-09-14 as the observation date (the maximum of the secondary event upper bound)."},{"path":"https://epidist.epinowcast.org/dev/reference/assert_epidist.epidist_linelist_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Assert validity of epidist_linelist_data objects — assert_epidist.epidist_linelist_data","title":"Assert validity of epidist_linelist_data objects — assert_epidist.epidist_linelist_data","text":"Assert validity epidist_linelist_data objects","code":""},{"path":"https://epidist.epinowcast.org/dev/reference/assert_epidist.epidist_linelist_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assert validity of epidist_linelist_data objects — assert_epidist.epidist_linelist_data","text":"","code":"# S3 method for class 'epidist_linelist_data' assert_epidist(data, ...)"},{"path":"https://epidist.epinowcast.org/dev/reference/assert_epidist.epidist_linelist_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assert validity of epidist_linelist_data objects — assert_epidist.epidist_linelist_data","text":"data object check validity. ... Additional arguments","code":""},{"path":[]},{"path":"https://epidist.epinowcast.org/dev/reference/assert_epidist.html","id":null,"dir":"Reference","previous_headings":"","what":"Validation for epidist objects — assert_epidist","title":"Validation for epidist objects — assert_epidist","text":"Validation epidist objects","code":""},{"path":"https://epidist.epinowcast.org/dev/reference/assert_epidist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validation for epidist objects — assert_epidist","text":"","code":"assert_epidist(data, ...)"},{"path":"https://epidist.epinowcast.org/dev/reference/assert_epidist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validation for epidist objects — assert_epidist","text":"data Object validate ... Additional arguments","code":""},{"path":"https://epidist.epinowcast.org/dev/reference/assert_epidist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validation for epidist objects — assert_epidist","text":"NULL invisibly","code":""},{"path":"https://epidist.epinowcast.org/dev/reference/dot-add_dpar_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Additional distributional parameter information for brms families — .add_dpar_info","title":"Additional distributional parameter information for brms families — .add_dpar_info","text":"Includes additional information (link functions parameter bound) distributional parameters brms family conditional mean mu.","code":""},{"path":"https://epidist.epinowcast.org/dev/reference/dot-add_dpar_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Additional distributional parameter information for brms families — .add_dpar_info","text":"","code":".add_dpar_info(family)"},{"path":"https://epidist.epinowcast.org/dev/reference/dot-add_dpar_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Additional distributional parameter information for brms families — .add_dpar_info","text":"family description response distribution link function used model. Every family function link argument allowing users specify link function applied response variable. specified, default links used. details supported families see brmsfamily(). Commonly used, lognormal(), also reexported part epidist.","code":""},{"path":"https://epidist.epinowcast.org/dev/reference/dot-add_weights.html","id":null,"dir":"Reference","previous_headings":"","what":"Add weights to a data frame — .add_weights","title":"Add weights to a data frame — .add_weights","text":"Helper function add weights data frame, either existing column defaulting 1.","code":""},{"path":"https://epidist.epinowcast.org/dev/reference/dot-add_weights.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add weights to a data frame — .add_weights","text":"","code":".add_weights(data, weight = NULL)"},{"path":"https://epidist.epinowcast.org/dev/reference/dot-add_weights.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add weights to a data frame — .add_weights","text":"data data frame add weights weight column name use weighting data likelihood. Default NULL. Internally used define 'n' column returned object.","code":""},{"path":"https://epidist.epinowcast.org/dev/reference/dot-add_weights.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add weights to a data frame — .add_weights","text":"data frame added 'n' column containing weights","code":""},{"path":"https://epidist.epinowcast.org/dev/reference/dot-extract_dpar_terms.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract distributional parameter terms from a brms formula — .extract_dpar_terms","title":"Extract distributional parameter terms from a brms formula — .extract_dpar_terms","text":"function extracts unique terms right-hand side distributional parameters brms formula.","code":""},{"path":"https://epidist.epinowcast.org/dev/reference/dot-extract_dpar_terms.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract distributional parameter terms from a brms formula — .extract_dpar_terms","text":"","code":".extract_dpar_terms(formula)"},{"path":"https://epidist.epinowcast.org/dev/reference/dot-extract_dpar_terms.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract distributional parameter terms from a brms formula — .extract_dpar_terms","text":"formula brms formula object.","code":""},{"path":"https://epidist.epinowcast.org/dev/reference/dot-extract_dpar_terms.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract distributional parameter terms from a brms formula — .extract_dpar_terms","text":"character vector unique terms.","code":""},{"path":"https://epidist.epinowcast.org/dev/reference/dot-floor_mult.html","id":null,"dir":"Reference","previous_headings":"","what":"Round to the nearest multiple — .floor_mult","title":"Round to the nearest multiple — .floor_mult","text":"function rounds input x nearest multiple number f. example, f = 0.2 x = 1.5 output 1.4. f = 1 floor_mult behaves floor. f = 0 x returned.","code":""},{"path":"https://epidist.epinowcast.org/dev/reference/dot-floor_mult.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Round to the nearest multiple — .floor_mult","text":"","code":".floor_mult(x, f = 1)"},{"path":"https://epidist.epinowcast.org/dev/reference/dot-floor_mult.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Round to the nearest multiple — .floor_mult","text":"x number rounded . f positive number specifying multiple rounded ","code":""},{"path":"https://epidist.epinowcast.org/dev/reference/dot-get_brms_fn.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a brms function by prefix and family — .get_brms_fn","title":"Get a brms function by prefix and family — .get_brms_fn","text":"Helper function get internal brms functions constructing name prefix family. Used get functions like log_lik_*, posterior_predict_* etc.","code":""},{"path":"https://epidist.epinowcast.org/dev/reference/dot-get_brms_fn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a brms function by prefix and family — .get_brms_fn","text":"","code":".get_brms_fn(prefix, family)"},{"path":"https://epidist.epinowcast.org/dev/reference/dot-get_brms_fn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a brms function by prefix and family — .get_brms_fn","text":"prefix Character string prefix brms function get (e.g. \"log_lik\") family description response distribution link function used model. Every family function link argument allowing users specify link function applied response variable. specified, default links used. details supported families see brmsfamily(). Commonly used, lognormal(), also reexported part epidist.","code":""},{"path":"https://epidist.epinowcast.org/dev/reference/dot-get_brms_fn.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a brms function by prefix and family — .get_brms_fn","text":"requested brms function","code":""},{"path":"https://epidist.epinowcast.org/dev/reference/dot-inform_data_summarised.html","id":null,"dir":"Reference","previous_headings":"","what":"Inform users about data summarisation — .inform_data_summarised","title":"Inform users about data summarisation — .inform_data_summarised","text":"function informs users data summarised unique combinations variables, providing information variables used reduction number rows.","code":""},{"path":"https://epidist.epinowcast.org/dev/reference/dot-inform_data_summarised.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Inform users about data summarisation — .inform_data_summarised","text":"","code":".inform_data_summarised(data, trans_data, required_cols)"},{"path":"https://epidist.epinowcast.org/dev/reference/dot-inform_data_summarised.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Inform users about data summarisation — .inform_data_summarised","text":"data original data summarisation trans_data transformed/summarised data required_cols Character vector required column names","code":""},{"path":"https://epidist.epinowcast.org/dev/reference/dot-inform_data_summarised.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Inform users about data summarisation — .inform_data_summarised","text":"Nothing, called side effects ","code":""},{"path":"https://epidist.epinowcast.org/dev/reference/dot-make_intercepts_explicit.html","id":null,"dir":"Reference","previous_headings":"","what":"Include implicit intercepts in brms formula as explicit — .make_intercepts_explicit","title":"Include implicit intercepts in brms formula as explicit — .make_intercepts_explicit","text":"function detects distributional parameters brms formula object, alters formula include explicit intercept parameters .e. ~ 1.","code":""},{"path":"https://epidist.epinowcast.org/dev/reference/dot-make_intercepts_explicit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Include implicit intercepts in brms formula as explicit — .make_intercepts_explicit","text":"","code":".make_intercepts_explicit(formula)"},{"path":"https://epidist.epinowcast.org/dev/reference/dot-make_intercepts_explicit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Include implicit intercepts in brms formula as explicit — .make_intercepts_explicit","text":"formula brms formula object.","code":""},{"path":"https://epidist.epinowcast.org/dev/reference/dot-rename_columns.html","id":null,"dir":"Reference","previous_headings":"","what":"Rename the columns of a data.frame — .rename_columns","title":"Rename the columns of a data.frame — .rename_columns","text":"Rename columns data.frame","code":""},{"path":"https://epidist.epinowcast.org/dev/reference/dot-rename_columns.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rename the columns of a data.frame — .rename_columns","text":"","code":".rename_columns(data, new_names, old_names)"},{"path":"https://epidist.epinowcast.org/dev/reference/dot-rename_columns.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rename the columns of a data.frame — .rename_columns","text":"data data.frame rename columns . new_names character vector new column names. old_names character vector old column names.","code":""},{"path":"https://epidist.epinowcast.org/dev/reference/dot-replace_prior.html","id":null,"dir":"Reference","previous_headings":"","what":"Replace brms prior distributions — .replace_prior","title":"Replace brms prior distributions — .replace_prior","text":"function takes existing set prior distributions updates new prior specifications. matches priors based parameter class, coefficient, group, response, distributional parameter, non-linear parameter. new priors match existing ones can optionally trigger warning.","code":""},{"path":"https://epidist.epinowcast.org/dev/reference/dot-replace_prior.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Replace brms prior distributions — .replace_prior","text":"","code":".replace_prior(   old_prior,   prior,   warn = FALSE,   merge = TRUE,   enforce_presence = TRUE )"},{"path":"https://epidist.epinowcast.org/dev/reference/dot-replace_prior.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Replace brms prior distributions — .replace_prior","text":"old_prior One prior distributions class brmsprior updated. prior One prior distributions class brmsprior containing new specifications. Can include custom set priors using syntax parameter ~ distribution warn TRUE warning displayed prior prior match old_prior. Defaults FALSE merge TRUE merge new priors existing ones, FALSE use new priors. Defaults TRUE enforce_presence TRUE keep rows old new priors. FALSE keep rows use new priors available, otherwise keep old priors. Defaults TRUE.","code":""},{"path":"https://epidist.epinowcast.org/dev/reference/dot-replace_prior.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Replace brms prior distributions — .replace_prior","text":"Prior distributions can specified two ways: Using standard brms prior specification format. priors replaced based matching parameter metadata (class, coefficient, group, etc.). Using custom set priors syntax parameter ~ distribution. remove existing custom priors parameter name affect priors set via standard brms specification format. Custom priors excluded metadata-based joining process.","code":""},{"path":"https://epidist.epinowcast.org/dev/reference/dot-stan_chunk.html","id":null,"dir":"Reference","previous_headings":"","what":"Read in an epidist Stan code chunk — .stan_chunk","title":"Read in an epidist Stan code chunk — .stan_chunk","text":"function used obtain Stan code chunks stan/ folder epidist package. used within epidist_stancode() function.","code":""},{"path":"https://epidist.epinowcast.org/dev/reference/dot-stan_chunk.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read in an epidist Stan code chunk — .stan_chunk","text":"","code":".stan_chunk(path)"},{"path":"https://epidist.epinowcast.org/dev/reference/dot-stan_chunk.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read in an epidist Stan code chunk — .stan_chunk","text":"path path within stan/ folder installed epidist package Stan code chunk interest.","code":""},{"path":"https://epidist.epinowcast.org/dev/reference/dot-stan_chunk.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read in an epidist Stan code chunk — .stan_chunk","text":"character string containing Stan code chunk interest.","code":""},{"path":"https://epidist.epinowcast.org/dev/reference/dot-summarise_n_by_formula.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarise data by grouping variables and count occurrences — .summarise_n_by_formula","title":"Summarise data by grouping variables and count occurrences — .summarise_n_by_formula","text":"Summarise data grouping variables count occurrences","code":""},{"path":"https://epidist.epinowcast.org/dev/reference/dot-summarise_n_by_formula.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarise data by grouping variables and count occurrences — .summarise_n_by_formula","text":"","code":".summarise_n_by_formula(data, by = character(), formula = NULL)"},{"path":"https://epidist.epinowcast.org/dev/reference/dot-summarise_n_by_formula.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarise data by grouping variables and count occurrences — .summarise_n_by_formula","text":"data data.frame summarise must contain n column count occurrences. Character vector column names group . formula Optional brms formula object extract additional grouping terms .","code":""},{"path":"https://epidist.epinowcast.org/dev/reference/dot-summarise_n_by_formula.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarise data by grouping variables and count occurrences — .summarise_n_by_formula","text":"data.frame summarised grouping variables counts.","code":""},{"path":"https://epidist.epinowcast.org/dev/reference/dot-version_stanvar.html","id":null,"dir":"Reference","previous_headings":"","what":"Label a epidist Stan model with a version indicator — .version_stanvar","title":"Label a epidist Stan model with a version indicator — .version_stanvar","text":"function used within epidist_stancode() label generated Stan code version epidist used. view full Stan code particular epidist model, recommend use brms::make_stancode().","code":""},{"path":"https://epidist.epinowcast.org/dev/reference/dot-version_stanvar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Label a epidist Stan model with a version indicator — .version_stanvar","text":"","code":".version_stanvar()"},{"path":"https://epidist.epinowcast.org/dev/reference/dot-version_stanvar.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Label a epidist Stan model with a version indicator — .version_stanvar","text":"brms Stan chunk containing epidist package version used build Stan code.","code":""},{"path":"https://epidist.epinowcast.org/dev/reference/epidist-package.html","id":null,"dir":"Reference","previous_headings":"","what":"epidist: Estimate Epidemiological Delay Distributions With brms — epidist-package","title":"epidist: Estimate Epidemiological Delay Distributions With brms — epidist-package","text":"Understanding accurately estimating epidemiological delay distributions important public health policy. estimates influence epidemic situational awareness, control strategies, resource allocation. package provides methods address key challenges estimating distributions, including truncation, interval censoring, dynamical biases. issues frequently overlooked, resulting biased conclusions. Built top 'brms', allows flexible modelling including time-varying spatial components partially pooled estimates demographic characteristics.","code":""},{"path":[]},{"path":"https://epidist.epinowcast.org/dev/reference/epidist-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"epidist: Estimate Epidemiological Delay Distributions With brms — epidist-package","text":"Maintainer: Sam Abbott contact@samabbott.co.uk (ORCID) Authors: Adam Howes adamthowes@gmail.com (ORCID) Sang Woo Park swp2@princeton.edu (ORCID) contributors: Sebastian Funk sebastian.funk@lshtm.ac.uk (ORCID) [contributor]","code":""},{"path":"https://epidist.epinowcast.org/dev/reference/epidist.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit epidemiological delay distributions using a brms interface — epidist","title":"Fit epidemiological delay distributions using a brms interface — epidist","text":"Fit epidemiological delay distributions using brms interface","code":""},{"path":"https://epidist.epinowcast.org/dev/reference/epidist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit epidemiological delay distributions using a brms interface — epidist","text":"","code":"epidist(   data,   formula = mu ~ 1,   family = lognormal(),   prior = NULL,   merge_priors = TRUE,   fn = brms::brm,   ... )"},{"path":"https://epidist.epinowcast.org/dev/reference/epidist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit epidemiological delay distributions using a brms interface — epidist","text":"data object class corresponding implemented model. formula object class stats::formula brms::brmsformula (one can coerced classes). symbolic description model fitted. formula must provided distributional parameter mu, may optionally provided distributional parameters. family description response distribution link function used model. Every family function link argument allowing users specify link function applied response variable. specified, default links used. details supported families see brmsfamily(). Commonly used, lognormal(), also reexported part epidist. prior One brmsprior objects created brms::set_prior() related functions. priors passed epidist_prior() prior argument. models default priors automatically added (see epidist_model_prior()). can merged user-provided priors using merge_priors argument. merge_priors TRUE merge user priors default priors, FALSE use user priors. Defaults TRUE. may useful built approaches merging priors flexible enough particular use case. fn internal function called. default brms::brm() performs inference specified model. options brms::make_stancode() returns Stan code specified model, brms::make_standata() returns data passed Stan. two later options may useful model debugging extensions. ... Additional arguments passed fn method.","code":""},{"path":"https://epidist.epinowcast.org/dev/reference/epidist.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit epidemiological delay distributions using a brms interface — epidist","text":"","code":"fit <- sierra_leone_ebola_data |>   as_epidist_linelist_data(     pdate_lwr = \"date_of_symptom_onset\",     sdate_lwr = \"date_of_sample_tested\"   ) |>   as_epidist_aggregate_data() |>   as_epidist_marginal_model() |>   epidist(chains = 2, cores = 2, refresh = ifelse(interactive(), 250, 0)) #> ℹ No primary event upper bound provided, using the primary event lower bound + 1 day as the assumed upper bound. #> ℹ No secondary event upper bound provided, using the secondary event lower bound + 1 day as the assumed upper bound. #> ℹ No observation time column provided, using 2015-09-14 as the observation date (the maximum of the secondary event upper bound). #> ! Setting 2394 observation times beyond 98 (=2x max delay) to Inf. This #>   improves model efficiency by reducing unique observation times while #>   maintaining model accuracy as these times should have negligible impact. #> ℹ Data summarised by unique combinations of: #> * Model variables: delay bounds, observation time, and primary censoring window #> ! Reduced from 2453 to 272 rows. #> ℹ This should improve model efficiency with no loss of information. #> Compiling Stan program... #> Start sampling  summary(fit) #>  Family: marginal_lognormal  #>   Links: mu = identity; sigma = log  #> Formula: delay_lwr | weights(n) + vreal(relative_obs_time, pwindow, swindow, delay_upr) ~ 1  #>          sigma ~ 1 #>    Data: transformed_data (Number of observations: 272)  #>   Draws: 2 chains, each with iter = 2000; warmup = 1000; thin = 1; #>          total post-warmup draws = 2000 #>  #> Regression Coefficients: #>                 Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS #> Intercept           1.62      0.01     1.61     1.63 1.00     1907     1325 #> sigma_Intercept    -0.53      0.01    -0.54    -0.51 1.00     1383     1077 #>  #> Draws were sampled using sampling(NUTS). For each parameter, Bulk_ESS #> and Tail_ESS are effective sample size measures, and Rhat is the potential #> scale reduction factor on split chains (at convergence, Rhat = 1)."},{"path":"https://epidist.epinowcast.org/dev/reference/epidist_diagnostics.html","id":null,"dir":"Reference","previous_headings":"","what":"Diagnostics for epidist_fit models — epidist_diagnostics","title":"Diagnostics for epidist_fit models — epidist_diagnostics","text":"function computes diagnostics assess quality fitted model. fitting algorithm used \"sampling\" (HMC) output epidist_diagnostics data.frame containing: time: total time taken fit chains samples: total number samples across chains max_rhat: highest value Gelman-Rubin statistic divergent_transitions: total number divergent transitions per_divergent_transitions: proportion samples divergent transitions max_treedepth: highest value treedepth HMC parameter no_at_max_treedepth: number samples attained max_treedepth per_at_max_treedepth: proportion samples attained max_treedepth","code":""},{"path":"https://epidist.epinowcast.org/dev/reference/epidist_diagnostics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Diagnostics for epidist_fit models — epidist_diagnostics","text":"","code":"epidist_diagnostics(fit)"},{"path":"https://epidist.epinowcast.org/dev/reference/epidist_diagnostics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Diagnostics for epidist_fit models — epidist_diagnostics","text":"fit fitted model class epidist_fit","code":""},{"path":"https://epidist.epinowcast.org/dev/reference/epidist_diagnostics.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Diagnostics for epidist_fit models — epidist_diagnostics","text":"fitting algorithm \"sampling\" (see brms::brm() possible algorithms) diagnostics yet implemented.","code":""},{"path":"https://epidist.epinowcast.org/dev/reference/epidist_diagnostics.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Diagnostics for epidist_fit models — epidist_diagnostics","text":"","code":"fit <- sierra_leone_ebola_data |>   as_epidist_linelist_data(     pdate_lwr = \"date_of_symptom_onset\",     sdate_lwr = \"date_of_sample_tested\"   ) |>   as_epidist_aggregate_data() |>   as_epidist_marginal_model() |>   epidist(chains = 2, cores = 2, refresh = ifelse(interactive(), 250, 0)) #> ℹ No primary event upper bound provided, using the primary event lower bound + 1 day as the assumed upper bound. #> ℹ No secondary event upper bound provided, using the secondary event lower bound + 1 day as the assumed upper bound. #> ℹ No observation time column provided, using 2015-09-14 as the observation date (the maximum of the secondary event upper bound). #> ! Setting 2394 observation times beyond 98 (=2x max delay) to Inf. This #>   improves model efficiency by reducing unique observation times while #>   maintaining model accuracy as these times should have negligible impact. #> ℹ Data summarised by unique combinations of: #> * Model variables: delay bounds, observation time, and primary censoring window #> ! Reduced from 2453 to 272 rows. #> ℹ This should improve model efficiency with no loss of information. #> Compiling Stan program... #> Start sampling epidist_diagnostics(fit) #> # A tibble: 1 × 8 #>    time samples max_rhat divergent_transitions per_divergent_transitions #>   <dbl>   <dbl>    <dbl>                 <dbl>                     <dbl> #> 1  11.6    2000     1.00                     0                         0 #> # ℹ 3 more variables: max_treedepth <dbl>, no_at_max_treedepth <int>, #> #   per_at_max_treedepth <dbl>"},{"path":"https://epidist.epinowcast.org/dev/reference/epidist_family.html","id":null,"dir":"Reference","previous_headings":"","what":"Define epidist family — epidist_family","title":"Define epidist family — epidist_family","text":"function used within epidist() create model specific custom brms family object. custom family passed brms. unlikely user need function, export nonetheless transparent happens inside call epidist().","code":""},{"path":"https://epidist.epinowcast.org/dev/reference/epidist_family.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Define epidist family — epidist_family","text":"","code":"epidist_family(data, family = lognormal(), ...)"},{"path":"https://epidist.epinowcast.org/dev/reference/epidist_family.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Define epidist family — epidist_family","text":"data object class corresponding implemented model. family description response distribution link function used model. Every family function link argument allowing users specify link function applied response variable. specified, default links used. details supported families see brmsfamily(). Commonly used, lognormal(), also reexported part epidist. ... Additional arguments passed fn method.","code":""},{"path":[]},{"path":"https://epidist.epinowcast.org/dev/reference/epidist_family_model.default.html","id":null,"dir":"Reference","previous_headings":"","what":"Default method for defining a model specific family — epidist_family_model.default","title":"Default method for defining a model specific family — epidist_family_model.default","text":"Default method defining model specific family","code":""},{"path":"https://epidist.epinowcast.org/dev/reference/epidist_family_model.default.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Default method for defining a model specific family — epidist_family_model.default","text":"","code":"# Default S3 method epidist_family_model(data, family, ...)"},{"path":"https://epidist.epinowcast.org/dev/reference/epidist_family_model.default.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Default method for defining a model specific family — epidist_family_model.default","text":"data object class corresponding implemented model. family Output call brms::brmsfamily() additional information provided .add_dpar_info() ... Additional arguments passed fn method.","code":""},{"path":[]},{"path":"https://epidist.epinowcast.org/dev/reference/epidist_family_model.epidist_latent_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Create the model-specific component of an epidist custom family — epidist_family_model.epidist_latent_model","title":"Create the model-specific component of an epidist custom family — epidist_family_model.epidist_latent_model","text":"Create model-specific component epidist custom family","code":""},{"path":"https://epidist.epinowcast.org/dev/reference/epidist_family_model.epidist_latent_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create the model-specific component of an epidist custom family — epidist_family_model.epidist_latent_model","text":"","code":"# S3 method for class 'epidist_latent_model' epidist_family_model(data, family, ...)"},{"path":"https://epidist.epinowcast.org/dev/reference/epidist_family_model.epidist_latent_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create the model-specific component of an epidist custom family — epidist_family_model.epidist_latent_model","text":"data object class corresponding implemented model. family Output call brms::brmsfamily() additional information provided .add_dpar_info() ... Additional arguments passed method.","code":""},{"path":[]},{"path":"https://epidist.epinowcast.org/dev/reference/epidist_family_model.epidist_marginal_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Create the model-specific component of an epidist custom family — epidist_family_model.epidist_marginal_model","title":"Create the model-specific component of an epidist custom family — epidist_family_model.epidist_marginal_model","text":"Create model-specific component epidist custom family","code":""},{"path":"https://epidist.epinowcast.org/dev/reference/epidist_family_model.epidist_marginal_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create the model-specific component of an epidist custom family — epidist_family_model.epidist_marginal_model","text":"","code":"# S3 method for class 'epidist_marginal_model' epidist_family_model(data, family, ...)"},{"path":"https://epidist.epinowcast.org/dev/reference/epidist_family_model.epidist_marginal_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create the model-specific component of an epidist custom family — epidist_family_model.epidist_marginal_model","text":"data object class corresponding implemented model. family Output call brms::brmsfamily() additional information provided .add_dpar_info() ... Additional arguments passed method.","code":""},{"path":[]},{"path":"https://epidist.epinowcast.org/dev/reference/epidist_family_model.html","id":null,"dir":"Reference","previous_headings":"","what":"The model-specific parts of an epidist_family() call — epidist_family_model","title":"The model-specific parts of an epidist_family() call — epidist_family_model","text":"model-specific parts epidist_family() call model-specific parts epidist_formula() call","code":""},{"path":"https://epidist.epinowcast.org/dev/reference/epidist_family_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The model-specific parts of an epidist_family() call — epidist_family_model","text":"","code":"epidist_family_model(data, family, ...)  epidist_formula_model(data, formula, ...)"},{"path":"https://epidist.epinowcast.org/dev/reference/epidist_family_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The model-specific parts of an epidist_family() call — epidist_family_model","text":"data object class corresponding implemented model. family Output call brms::brmsfamily() additional information provided .add_dpar_info() ... Additional arguments passed fn method. formula object class stats::formula brms::brmsformula (one can coerced classes). symbolic description model fitted. formula must provided distributional parameter mu, may optionally provided distributional parameters.","code":""},{"path":[]},{"path":"https://epidist.epinowcast.org/dev/reference/epidist_family_param.default.html","id":null,"dir":"Reference","previous_headings":"","what":"Default method for families which do not require a reparameterisation — epidist_family_param.default","title":"Default method for families which do not require a reparameterisation — epidist_family_param.default","text":"function extracts Stan parameterisation given brms family creating dummy model parsing Stan code. looks log probability density function (lpdf) call Stan code extracts parameter order used Stan. needed brms Stan may use different parameter orderings distribution.","code":""},{"path":"https://epidist.epinowcast.org/dev/reference/epidist_family_param.default.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Default method for families which do not require a reparameterisation — epidist_family_param.default","text":"","code":"# Default S3 method epidist_family_param(family, ...)"},{"path":"https://epidist.epinowcast.org/dev/reference/epidist_family_param.default.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Default method for families which do not require a reparameterisation — epidist_family_param.default","text":"family brms family object containing minimum family element specifying distribution family name. ... Additional arguments passed methods (used)","code":""},{"path":"https://epidist.epinowcast.org/dev/reference/epidist_family_param.default.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Default method for families which do not require a reparameterisation — epidist_family_param.default","text":"input family object additional param element containing Stan parameter ordering string","code":""},{"path":"https://epidist.epinowcast.org/dev/reference/epidist_family_param.default.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Default method for families which do not require a reparameterisation — epidist_family_param.default","text":"function works : Creating minimal dummy model using specified family Extracting Stan code model Finding lpdf function call family Parsing parameter ordering used Stan Adding param element family object","code":""},{"path":[]},{"path":"https://epidist.epinowcast.org/dev/reference/epidist_family_param.html","id":null,"dir":"Reference","previous_headings":"","what":"Reparameterise an epidist family to align brms and Stan — epidist_family_param","title":"Reparameterise an epidist family to align brms and Stan — epidist_family_param","text":"Reparameterise epidist family align brms Stan","code":""},{"path":"https://epidist.epinowcast.org/dev/reference/epidist_family_param.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reparameterise an epidist family to align brms and Stan — epidist_family_param","text":"","code":"epidist_family_param(family, ...)"},{"path":"https://epidist.epinowcast.org/dev/reference/epidist_family_param.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reparameterise an epidist family to align brms and Stan — epidist_family_param","text":"family description response distribution link function used model. Every family function link argument allowing users specify link function applied response variable. specified, default links used. details supported families see brmsfamily(). Commonly used, lognormal(), also reexported part epidist. ... Additional arguments passed fn method.","code":""},{"path":[]},{"path":"https://epidist.epinowcast.org/dev/reference/epidist_family_prior.default.html","id":null,"dir":"Reference","previous_headings":"","what":"Default family specific prior distributions — epidist_family_prior.default","title":"Default family specific prior distributions — epidist_family_prior.default","text":"default, return family specific prior distributions.","code":""},{"path":"https://epidist.epinowcast.org/dev/reference/epidist_family_prior.default.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Default family specific prior distributions — epidist_family_prior.default","text":"","code":"# Default S3 method epidist_family_prior(family, formula, ...)"},{"path":"https://epidist.epinowcast.org/dev/reference/epidist_family_prior.default.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Default family specific prior distributions — epidist_family_prior.default","text":"family description response distribution link function used model. Every family function link argument allowing users specify link function applied response variable. specified, default links used. details supported families see brmsfamily(). Commonly used, lognormal(), also reexported part epidist. formula object class stats::formula brms::brmsformula (one can coerced classes). symbolic description model fitted. formula must provided distributional parameter mu, may optionally provided distributional parameters. ... Additional arguments passed fn method.","code":""},{"path":[]},{"path":"https://epidist.epinowcast.org/dev/reference/epidist_family_prior.html","id":null,"dir":"Reference","previous_headings":"","what":"Family specific prior distributions — epidist_family_prior","title":"Family specific prior distributions — epidist_family_prior","text":"function contains brms prior distributions specific particular likelihood families e.g. brms::lognormal().","code":""},{"path":"https://epidist.epinowcast.org/dev/reference/epidist_family_prior.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Family specific prior distributions — epidist_family_prior","text":"","code":"epidist_family_prior(family, ...)"},{"path":"https://epidist.epinowcast.org/dev/reference/epidist_family_prior.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Family specific prior distributions — epidist_family_prior","text":"family description response distribution link function used model. Every family function link argument allowing users specify link function applied response variable. specified, default links used. details supported families see brmsfamily(). Commonly used, lognormal(), also reexported part epidist. ... Additional arguments passed fn method.","code":""},{"path":[]},{"path":"https://epidist.epinowcast.org/dev/reference/epidist_family_prior.lognormal.html","id":null,"dir":"Reference","previous_headings":"","what":"Family specific prior distributions for the lognormal family — epidist_family_prior.lognormal","title":"Family specific prior distributions for the lognormal family — epidist_family_prior.lognormal","text":"suggest priors overwrite brms defaults lognormal family.","code":""},{"path":"https://epidist.epinowcast.org/dev/reference/epidist_family_prior.lognormal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Family specific prior distributions for the lognormal family — epidist_family_prior.lognormal","text":"","code":"# S3 method for class 'lognormal' epidist_family_prior(family, formula, ...)"},{"path":"https://epidist.epinowcast.org/dev/reference/epidist_family_prior.lognormal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Family specific prior distributions for the lognormal family — epidist_family_prior.lognormal","text":"family description response distribution link function used model. Every family function link argument allowing users specify link function applied response variable. specified, default links used. details supported families see brmsfamily(). Commonly used, lognormal(), also reexported part epidist. formula object class stats::formula brms::brmsformula (one can coerced classes). symbolic description model fitted. formula must provided distributional parameter mu, may optionally provided distributional parameters. ... Additional arguments passed fn method.","code":""},{"path":[]},{"path":"https://epidist.epinowcast.org/dev/reference/epidist_formula.html","id":null,"dir":"Reference","previous_headings":"","what":"Define a model specific formula — epidist_formula","title":"Define a model specific formula — epidist_formula","text":"function used within epidist() create formula object passed brms. unlikely user need function, export nonetheless transparent exactly happening inside call epidist().","code":""},{"path":"https://epidist.epinowcast.org/dev/reference/epidist_formula.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Define a model specific formula — epidist_formula","text":"","code":"epidist_formula(data, family, formula, ...)"},{"path":"https://epidist.epinowcast.org/dev/reference/epidist_formula.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Define a model specific formula — epidist_formula","text":"data object class corresponding implemented model. family description response distribution link function used model created using epidist_family(). formula object class stats::formula brms::brmsformula (one can coerced classes). symbolic description model fitted. formula must provided distributional parameter mu, may optionally provided distributional parameters. ... Additional arguments passed fn method.","code":""},{"path":[]},{"path":"https://epidist.epinowcast.org/dev/reference/epidist_formula_model.default.html","id":null,"dir":"Reference","previous_headings":"","what":"Default method for defining a model specific formula — epidist_formula_model.default","title":"Default method for defining a model specific formula — epidist_formula_model.default","text":"Default method defining model specific formula","code":""},{"path":"https://epidist.epinowcast.org/dev/reference/epidist_formula_model.default.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Default method for defining a model specific formula — epidist_formula_model.default","text":"","code":"# Default S3 method epidist_formula_model(data, formula, ...)"},{"path":"https://epidist.epinowcast.org/dev/reference/epidist_formula_model.default.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Default method for defining a model specific formula — epidist_formula_model.default","text":"data object class corresponding implemented model. formula object class stats::formula brms::brmsformula (one can coerced classes). symbolic description model fitted. formula must provided distributional parameter mu, may optionally provided distributional parameters. ... Additional arguments passed fn method.","code":""},{"path":[]},{"path":"https://epidist.epinowcast.org/dev/reference/epidist_formula_model.epidist_latent_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Define the model-specific component of an epidist custom formula for the latent model — epidist_formula_model.epidist_latent_model","title":"Define the model-specific component of an epidist custom formula for the latent model — epidist_formula_model.epidist_latent_model","text":"Define model-specific component epidist custom formula latent model","code":""},{"path":"https://epidist.epinowcast.org/dev/reference/epidist_formula_model.epidist_latent_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Define the model-specific component of an epidist custom formula for the latent model — epidist_formula_model.epidist_latent_model","text":"","code":"# S3 method for class 'epidist_latent_model' epidist_formula_model(data, formula, ...)"},{"path":"https://epidist.epinowcast.org/dev/reference/epidist_formula_model.epidist_latent_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Define the model-specific component of an epidist custom formula for the latent model — epidist_formula_model.epidist_latent_model","text":"data object class corresponding implemented model. formula object class stats::formula brms::brmsformula (one can coerced classes). symbolic description model fitted. formula must provided distributional parameter mu, may optionally provided distributional parameters. ... Additional arguments passed method.","code":""},{"path":[]},{"path":"https://epidist.epinowcast.org/dev/reference/epidist_formula_model.epidist_marginal_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Define the model-specific component of an epidist custom formula for the marginal model — epidist_formula_model.epidist_marginal_model","title":"Define the model-specific component of an epidist custom formula for the marginal model — epidist_formula_model.epidist_marginal_model","text":"Define model-specific component epidist custom formula marginal model","code":""},{"path":"https://epidist.epinowcast.org/dev/reference/epidist_formula_model.epidist_marginal_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Define the model-specific component of an epidist custom formula for the marginal model — epidist_formula_model.epidist_marginal_model","text":"","code":"# S3 method for class 'epidist_marginal_model' epidist_formula_model(data, formula, ...)"},{"path":"https://epidist.epinowcast.org/dev/reference/epidist_formula_model.epidist_marginal_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Define the model-specific component of an epidist custom formula for the marginal model — epidist_formula_model.epidist_marginal_model","text":"data object class corresponding implemented model. formula object class stats::formula brms::brmsformula (one can coerced classes). symbolic description model fitted. formula must provided distributional parameter mu, may optionally provided distributional parameters. ... Additional arguments passed method.","code":""},{"path":[]},{"path":"https://epidist.epinowcast.org/dev/reference/epidist_formula_model.epidist_naive_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Define the model-specific component of an epidist custom formula for the naive model — epidist_formula_model.epidist_naive_model","title":"Define the model-specific component of an epidist custom formula for the naive model — epidist_formula_model.epidist_naive_model","text":"Define model-specific component epidist custom formula naive model","code":""},{"path":"https://epidist.epinowcast.org/dev/reference/epidist_formula_model.epidist_naive_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Define the model-specific component of an epidist custom formula for the naive model — epidist_formula_model.epidist_naive_model","text":"","code":"# S3 method for class 'epidist_naive_model' epidist_formula_model(data, formula, ...)"},{"path":"https://epidist.epinowcast.org/dev/reference/epidist_formula_model.epidist_naive_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Define the model-specific component of an epidist custom formula for the naive model — epidist_formula_model.epidist_naive_model","text":"data object class corresponding implemented model. formula object class stats::formula brms::brmsformula (one can coerced classes). symbolic description model fitted. formula must provided distributional parameter mu, may optionally provided distributional parameters. ... Additional arguments passed method.","code":""},{"path":[]},{"path":"https://epidist.epinowcast.org/dev/reference/epidist_gen_log_lik.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a function to calculate the marginalised log likelihood for double censored and truncated delay distributions — epidist_gen_log_lik","title":"Create a function to calculate the marginalised log likelihood for double censored and truncated delay distributions — epidist_gen_log_lik","text":"function creates log likelihood function calculates marginal likelihood single observation integrating latent primary secondary event windows. analytical solutions exist primarycensored::dpcens() used, otherwise integration performed numerically. primarycensored::dpcens() handles double censoring truncation delay distribution.","code":""},{"path":"https://epidist.epinowcast.org/dev/reference/epidist_gen_log_lik.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a function to calculate the marginalised log likelihood for double censored and truncated delay distributions — epidist_gen_log_lik","text":"","code":"epidist_gen_log_lik(family)"},{"path":"https://epidist.epinowcast.org/dev/reference/epidist_gen_log_lik.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a function to calculate the marginalised log likelihood for double censored and truncated delay distributions — epidist_gen_log_lik","text":"family description response distribution link function used model. Every family function link argument allowing users specify link function applied response variable. specified, default links used. details supported families see brmsfamily(). Commonly used, lognormal(), also reexported part epidist.","code":""},{"path":"https://epidist.epinowcast.org/dev/reference/epidist_gen_log_lik.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a function to calculate the marginalised log likelihood for double censored and truncated delay distributions — epidist_gen_log_lik","text":"function calculates marginal log likelihood single observation. prep object must following variables: vreal1: relative observation time vreal2: primary event window vreal3: secondary event window","code":""},{"path":"https://epidist.epinowcast.org/dev/reference/epidist_gen_log_lik.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a function to calculate the marginalised log likelihood for double censored and truncated delay distributions — epidist_gen_log_lik","text":"marginal likelihood accounts uncertainty primary secondary event windows integrating possible values, weighted respective uniform distributions.","code":""},{"path":[]},{"path":"https://epidist.epinowcast.org/dev/reference/epidist_gen_posterior_epred.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a function to draw from the expected value of the posterior predictive distribution for a model — epidist_gen_posterior_epred","title":"Create a function to draw from the expected value of the posterior predictive distribution for a model — epidist_gen_posterior_epred","text":"function creates function calculates expected value posterior predictive distribution latent model. returned function takes prep argument (brms) returns posterior expected values. used internally brms::posterior_epred() calculate expected values latent models.","code":""},{"path":"https://epidist.epinowcast.org/dev/reference/epidist_gen_posterior_epred.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a function to draw from the expected value of the posterior predictive distribution for a model — epidist_gen_posterior_epred","text":"","code":"epidist_gen_posterior_epred(family)"},{"path":"https://epidist.epinowcast.org/dev/reference/epidist_gen_posterior_epred.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a function to draw from the expected value of the posterior predictive distribution for a model — epidist_gen_posterior_epred","text":"family description response distribution link function used model. Every family function link argument allowing users specify link function applied response variable. specified, default links used. details supported families see brmsfamily(). Commonly used, lognormal(), also reexported part epidist.","code":""},{"path":"https://epidist.epinowcast.org/dev/reference/epidist_gen_posterior_epred.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a function to draw from the expected value of the posterior predictive distribution for a model — epidist_gen_posterior_epred","text":"function takes prep argument brms returns matrix posterior expected values, one row per posterior draw one column per observation.","code":""},{"path":[]},{"path":"https://epidist.epinowcast.org/dev/reference/epidist_gen_posterior_predict.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a function to draw from the posterior predictive distribution for a double censored and truncated delay distribution — epidist_gen_posterior_predict","title":"Create a function to draw from the posterior predictive distribution for a double censored and truncated delay distribution — epidist_gen_posterior_predict","text":"function creates function draws posterior predictive distribution latent model using primarycensored::rpcens() handle censoring truncation. returned function takes prep argument brms returns posterior predictions. used internally brms::posterior_predict() generate predictions latent models.","code":""},{"path":"https://epidist.epinowcast.org/dev/reference/epidist_gen_posterior_predict.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a function to draw from the posterior predictive distribution for a double censored and truncated delay distribution — epidist_gen_posterior_predict","text":"","code":"epidist_gen_posterior_predict(family)"},{"path":"https://epidist.epinowcast.org/dev/reference/epidist_gen_posterior_predict.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a function to draw from the posterior predictive distribution for a double censored and truncated delay distribution — epidist_gen_posterior_predict","text":"family description response distribution link function used model. Every family function link argument allowing users specify link function applied response variable. specified, default links used. details supported families see brmsfamily(). Commonly used, lognormal(), also reexported part epidist.","code":""},{"path":"https://epidist.epinowcast.org/dev/reference/epidist_gen_posterior_predict.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a function to draw from the posterior predictive distribution for a double censored and truncated delay distribution — epidist_gen_posterior_predict","text":"function takes prep argument brms returns matrix posterior predictions, one row per posterior draw one column per observation. prep object must following variables: vreal1: relative observation time vreal2: primary event window vreal3: secondary event window","code":""},{"path":[]},{"path":"https://epidist.epinowcast.org/dev/reference/epidist_model_prior.default.html","id":null,"dir":"Reference","previous_headings":"","what":"Default model specific prior distributions — epidist_model_prior.default","title":"Default model specific prior distributions — epidist_model_prior.default","text":"default, return model specific prior distributions.","code":""},{"path":"https://epidist.epinowcast.org/dev/reference/epidist_model_prior.default.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Default model specific prior distributions — epidist_model_prior.default","text":"","code":"# Default S3 method epidist_model_prior(data, formula, ...)"},{"path":"https://epidist.epinowcast.org/dev/reference/epidist_model_prior.default.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Default model specific prior distributions — epidist_model_prior.default","text":"data object class corresponding implemented model. formula object class stats::formula brms::brmsformula (one can coerced classes). symbolic description model fitted. formula must provided distributional parameter mu, may optionally provided distributional parameters. ... Additional arguments passed fn method.","code":""},{"path":[]},{"path":"https://epidist.epinowcast.org/dev/reference/epidist_model_prior.epidist_latent_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Model specific prior distributions for latent models — epidist_model_prior.epidist_latent_model","title":"Model specific prior distributions for latent models — epidist_model_prior.epidist_latent_model","text":"Defines prior distributions latent model parameters pwindow_raw swindow_raw control width observation windows.","code":""},{"path":"https://epidist.epinowcast.org/dev/reference/epidist_model_prior.epidist_latent_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Model specific prior distributions for latent models — epidist_model_prior.epidist_latent_model","text":"","code":"# S3 method for class 'epidist_latent_model' epidist_model_prior(data, formula, ...)"},{"path":"https://epidist.epinowcast.org/dev/reference/epidist_model_prior.epidist_latent_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Model specific prior distributions for latent models — epidist_model_prior.epidist_latent_model","text":"data object class corresponding implemented model. formula object class stats::formula brms::brmsformula (one can coerced classes). symbolic description model fitted. formula must provided distributional parameter mu, may optionally provided distributional parameters. ... Additional arguments passed fn method.","code":""},{"path":[]},{"path":"https://epidist.epinowcast.org/dev/reference/epidist_model_prior.html","id":null,"dir":"Reference","previous_headings":"","what":"Model specific prior distributions — epidist_model_prior","title":"Model specific prior distributions — epidist_model_prior","text":"function contains brms prior distributions specific particular epidist models e.g. latent_lognormal model.","code":""},{"path":"https://epidist.epinowcast.org/dev/reference/epidist_model_prior.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Model specific prior distributions — epidist_model_prior","text":"","code":"epidist_model_prior(data, ...)"},{"path":"https://epidist.epinowcast.org/dev/reference/epidist_model_prior.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Model specific prior distributions — epidist_model_prior","text":"data object class corresponding implemented model. ... Additional arguments passed fn method.","code":""},{"path":[]},{"path":"https://epidist.epinowcast.org/dev/reference/epidist_prior.html","id":null,"dir":"Reference","previous_headings":"","what":"Define custom prior distributions for epidist models — epidist_prior","title":"Define custom prior distributions for epidist models — epidist_prior","text":"function combines model specific prior distributions epidist_model_prior(), family specific prior distributions epidist_family_prior(), user provided prior distributions single set custom priors. element overwrites previous elements, user provided prior distributions highest priority. user prior distribution provided included model, warning shown.","code":""},{"path":"https://epidist.epinowcast.org/dev/reference/epidist_prior.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Define custom prior distributions for epidist models — epidist_prior","text":"","code":"epidist_prior(   data,   family,   formula,   prior,   merge = TRUE,   enforce_presence = FALSE )"},{"path":"https://epidist.epinowcast.org/dev/reference/epidist_prior.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Define custom prior distributions for epidist models — epidist_prior","text":"data object class corresponding implemented model. family description response distribution link function used model created using epidist_family(). formula symbolic description model fitted created using epidist_formula(). prior One brmsprior objects created brms::set_prior() related functions. priors passed epidist_prior() prior argument. models default priors automatically added (see epidist_model_prior()). can merged user-provided priors using merge_priors argument. merge TRUE merge new priors existing ones, FALSE use new priors. Defaults TRUE. may useful built approaches merging priors flexible enough particular use case. enforce_presence TRUE allow user priors match existing default priors. FALSE allow user priors present default set. Defaults FALSE.","code":""},{"path":"https://epidist.epinowcast.org/dev/reference/epidist_prior.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Define custom prior distributions for epidist models — epidist_prior","text":"brmsprior object containing combined custom prior distributions.","code":""},{"path":"https://epidist.epinowcast.org/dev/reference/epidist_prior.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Define custom prior distributions for epidist models — epidist_prior","text":"Note matching priors imperfect use brms' internal prior matching functionality. example, distinguish prior coefficients (class = \"b\") prior specific coefficient (class = \"b\" coef specified).","code":""},{"path":[]},{"path":"https://epidist.epinowcast.org/dev/reference/epidist_stancode.default.html","id":null,"dir":"Reference","previous_headings":"","what":"Default method for defining model specific Stan code — epidist_stancode.default","title":"Default method for defining model specific Stan code — epidist_stancode.default","text":"Default method defining model specific Stan code","code":""},{"path":"https://epidist.epinowcast.org/dev/reference/epidist_stancode.default.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Default method for defining model specific Stan code — epidist_stancode.default","text":"","code":"# Default S3 method epidist_stancode(data, ...)"},{"path":"https://epidist.epinowcast.org/dev/reference/epidist_stancode.default.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Default method for defining model specific Stan code — epidist_stancode.default","text":"data object class corresponding implemented model. ... Additional arguments passed fn method.","code":""},{"path":[]},{"path":"https://epidist.epinowcast.org/dev/reference/epidist_stancode.html","id":null,"dir":"Reference","previous_headings":"","what":"Define model specific Stan code — epidist_stancode","title":"Define model specific Stan code — epidist_stancode","text":"function used within epidist() create custom Stan code injected brms via stanvars argument. unlikely user need function, export nonetheless transparent exactly happening inside call epidist().","code":""},{"path":"https://epidist.epinowcast.org/dev/reference/epidist_stancode.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Define model specific Stan code — epidist_stancode","text":"","code":"epidist_stancode(data, ...)"},{"path":"https://epidist.epinowcast.org/dev/reference/epidist_stancode.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Define model specific Stan code — epidist_stancode","text":"data object class corresponding implemented model. ... Additional arguments passed fn method.","code":""},{"path":[]},{"path":"https://epidist.epinowcast.org/dev/reference/epidist_transform_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform data for an epidist model — epidist_transform_data","title":"Transform data for an epidist model — epidist_transform_data","text":"function used within epidist() transform data passing brms. unlikely user need function, export nonetheless transparent happens inside call epidist().","code":""},{"path":"https://epidist.epinowcast.org/dev/reference/epidist_transform_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform data for an epidist model — epidist_transform_data","text":"","code":"epidist_transform_data(data, family, formula, ...)"},{"path":"https://epidist.epinowcast.org/dev/reference/epidist_transform_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform data for an epidist model — epidist_transform_data","text":"data object class corresponding implemented model. family description response distribution link function used model created using epidist_family(). formula formula object created using epidist_formula(). ... Additional arguments passed fn method.","code":""},{"path":[]},{"path":"https://epidist.epinowcast.org/dev/reference/epidist_transform_data_model.default.html","id":null,"dir":"Reference","previous_headings":"","what":"Default method for transforming data for a model — epidist_transform_data_model.default","title":"Default method for transforming data for a model — epidist_transform_data_model.default","text":"Default method transforming data model","code":""},{"path":"https://epidist.epinowcast.org/dev/reference/epidist_transform_data_model.default.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Default method for transforming data for a model — epidist_transform_data_model.default","text":"","code":"# Default S3 method epidist_transform_data_model(data, family, formula, ...)"},{"path":"https://epidist.epinowcast.org/dev/reference/epidist_transform_data_model.default.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Default method for transforming data for a model — epidist_transform_data_model.default","text":"data object class corresponding implemented model. family description response distribution link function used model created using epidist_family(). formula formula object created using epidist_formula(). ... Additional arguments passed fn method.","code":""},{"path":[]},{"path":"https://epidist.epinowcast.org/dev/reference/epidist_transform_data_model.epidist_marginal_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform data for the marginal model — epidist_transform_data_model.epidist_marginal_model","title":"Transform data for the marginal model — epidist_transform_data_model.epidist_marginal_model","text":"method transforms data format required marginal model : Identifying required columns marginal model Summarising data counting unique combinations columns variables model formula using .summarise_n_by_formula() Converting summarised data marginal model object using new_epidist_marginal_model() Informing user data aggregation occurred using .inform_data_summarised()","code":""},{"path":"https://epidist.epinowcast.org/dev/reference/epidist_transform_data_model.epidist_marginal_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform data for the marginal model — epidist_transform_data_model.epidist_marginal_model","text":"","code":"# S3 method for class 'epidist_marginal_model' epidist_transform_data_model(data, family, formula, ...)"},{"path":"https://epidist.epinowcast.org/dev/reference/epidist_transform_data_model.epidist_marginal_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform data for the marginal model — epidist_transform_data_model.epidist_marginal_model","text":"data data transform family epidist family object specifying distribution formula model formula ... Additional arguments passed methods","code":""},{"path":[]},{"path":"https://epidist.epinowcast.org/dev/reference/epidist_transform_data_model.epidist_naive_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform data for the naive model — epidist_transform_data_model.epidist_naive_model","title":"Transform data for the naive model — epidist_transform_data_model.epidist_naive_model","text":"method transforms data format required naive model : Identifying required columns naive model Summarising data counting unique combinations columns variables model formula using .summarise_n_by_formula() Converting summarised data naive model object using new_epidist_naive_model() Informing user data aggregation occurred using .inform_data_summarised()","code":""},{"path":"https://epidist.epinowcast.org/dev/reference/epidist_transform_data_model.epidist_naive_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform data for the naive model — epidist_transform_data_model.epidist_naive_model","text":"","code":"# S3 method for class 'epidist_naive_model' epidist_transform_data_model(data, family, formula, ...)"},{"path":"https://epidist.epinowcast.org/dev/reference/epidist_transform_data_model.epidist_naive_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform data for the naive model — epidist_transform_data_model.epidist_naive_model","text":"data data transform family epidist family object specifying distribution formula model formula ... Additional arguments passed methods","code":""},{"path":[]},{"path":"https://epidist.epinowcast.org/dev/reference/epidist_transform_data_model.html","id":null,"dir":"Reference","previous_headings":"","what":"The model-specific parts of an epidist_transform_data() call — epidist_transform_data_model","title":"The model-specific parts of an epidist_transform_data() call — epidist_transform_data_model","text":"model-specific parts epidist_transform_data() call","code":""},{"path":"https://epidist.epinowcast.org/dev/reference/epidist_transform_data_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The model-specific parts of an epidist_transform_data() call — epidist_transform_data_model","text":"","code":"epidist_transform_data_model(data, family, formula, ...)"},{"path":"https://epidist.epinowcast.org/dev/reference/epidist_transform_data_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The model-specific parts of an epidist_transform_data() call — epidist_transform_data_model","text":"data object class corresponding implemented model. family description response distribution link function used model created using epidist_family(). formula formula object created using epidist_formula(). ... Additional arguments passed fn method.","code":""},{"path":[]},{"path":"https://epidist.epinowcast.org/dev/reference/is_epidist_aggregate_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if data has the epidist_aggregate_data class — is_epidist_aggregate_data","title":"Check if data has the epidist_aggregate_data class — is_epidist_aggregate_data","text":"Check data epidist_aggregate_data class","code":""},{"path":"https://epidist.epinowcast.org/dev/reference/is_epidist_aggregate_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if data has the epidist_aggregate_data class — is_epidist_aggregate_data","text":"","code":"is_epidist_aggregate_data(data, ...)"},{"path":"https://epidist.epinowcast.org/dev/reference/is_epidist_aggregate_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if data has the epidist_aggregate_data class — is_epidist_aggregate_data","text":"data data convert ... Additional arguments","code":""},{"path":[]},{"path":"https://epidist.epinowcast.org/dev/reference/is_epidist_latent_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if data has the epidist_latent_model class — is_epidist_latent_model","title":"Check if data has the epidist_latent_model class — is_epidist_latent_model","text":"Check data epidist_latent_model class","code":""},{"path":"https://epidist.epinowcast.org/dev/reference/is_epidist_latent_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if data has the epidist_latent_model class — is_epidist_latent_model","text":"","code":"is_epidist_latent_model(data)"},{"path":"https://epidist.epinowcast.org/dev/reference/is_epidist_latent_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if data has the epidist_latent_model class — is_epidist_latent_model","text":"data object","code":""},{"path":[]},{"path":"https://epidist.epinowcast.org/dev/reference/is_epidist_linelist_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if data has the epidist_linelist_data class — is_epidist_linelist_data","title":"Check if data has the epidist_linelist_data class — is_epidist_linelist_data","text":"Check data epidist_linelist_data class","code":""},{"path":"https://epidist.epinowcast.org/dev/reference/is_epidist_linelist_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if data has the epidist_linelist_data class — is_epidist_linelist_data","text":"","code":"is_epidist_linelist_data(data, ...)"},{"path":"https://epidist.epinowcast.org/dev/reference/is_epidist_linelist_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if data has the epidist_linelist_data class — is_epidist_linelist_data","text":"data data convert ... Additional arguments","code":""},{"path":[]},{"path":"https://epidist.epinowcast.org/dev/reference/is_epidist_marginal_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if data has the epidist_marginal_model class — is_epidist_marginal_model","title":"Check if data has the epidist_marginal_model class — is_epidist_marginal_model","text":"Check data epidist_marginal_model class","code":""},{"path":"https://epidist.epinowcast.org/dev/reference/is_epidist_marginal_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if data has the epidist_marginal_model class — is_epidist_marginal_model","text":"","code":"is_epidist_marginal_model(data)"},{"path":"https://epidist.epinowcast.org/dev/reference/is_epidist_marginal_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if data has the epidist_marginal_model class — is_epidist_marginal_model","text":"data data.frame containing line list data","code":""},{"path":[]},{"path":"https://epidist.epinowcast.org/dev/reference/is_epidist_naive_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if data has the epidist_naive_model class — is_epidist_naive_model","title":"Check if data has the epidist_naive_model class — is_epidist_naive_model","text":"Check data epidist_naive_model class","code":""},{"path":"https://epidist.epinowcast.org/dev/reference/is_epidist_naive_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if data has the epidist_naive_model class — is_epidist_naive_model","text":"","code":"is_epidist_naive_model(data)"},{"path":"https://epidist.epinowcast.org/dev/reference/is_epidist_naive_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if data has the epidist_naive_model class — is_epidist_naive_model","text":"data object.","code":""},{"path":[]},{"path":"https://epidist.epinowcast.org/dev/reference/new_epidist_aggregate_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Class constructor for epidist_aggregate_data objects — new_epidist_aggregate_data","title":"Class constructor for epidist_aggregate_data objects — new_epidist_aggregate_data","text":"Class constructor epidist_aggregate_data objects","code":""},{"path":"https://epidist.epinowcast.org/dev/reference/new_epidist_aggregate_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Class constructor for epidist_aggregate_data objects — new_epidist_aggregate_data","text":"","code":"new_epidist_aggregate_data(data)"},{"path":"https://epidist.epinowcast.org/dev/reference/new_epidist_aggregate_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class constructor for epidist_aggregate_data objects — new_epidist_aggregate_data","text":"data data.frame convert","code":""},{"path":"https://epidist.epinowcast.org/dev/reference/new_epidist_aggregate_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Class constructor for epidist_aggregate_data objects — new_epidist_aggregate_data","text":"object class epidist_aggregate_data","code":""},{"path":[]},{"path":"https://epidist.epinowcast.org/dev/reference/new_epidist_aggregate_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Class constructor for epidist_aggregate_data objects — new_epidist_aggregate_data","text":"","code":"df <- new_epidist_aggregate_data(data.frame()) class(df) #> [1] \"epidist_aggregate_data\" \"data.frame\""},{"path":"https://epidist.epinowcast.org/dev/reference/new_epidist_latent_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Class constructor for epidist_latent_model objects — new_epidist_latent_model","title":"Class constructor for epidist_latent_model objects — new_epidist_latent_model","text":"Class constructor epidist_latent_model objects","code":""},{"path":"https://epidist.epinowcast.org/dev/reference/new_epidist_latent_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Class constructor for epidist_latent_model objects — new_epidist_latent_model","text":"","code":"new_epidist_latent_model(data, ...)"},{"path":"https://epidist.epinowcast.org/dev/reference/new_epidist_latent_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class constructor for epidist_latent_model objects — new_epidist_latent_model","text":"data object set class epidist_latent_model ... Additional arguments passed methods.","code":""},{"path":"https://epidist.epinowcast.org/dev/reference/new_epidist_latent_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Class constructor for epidist_latent_model objects — new_epidist_latent_model","text":"object class epidist_latent_model","code":""},{"path":[]},{"path":"https://epidist.epinowcast.org/dev/reference/new_epidist_linelist_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Class constructor for epidist_linelist_data objects — new_epidist_linelist_data","title":"Class constructor for epidist_linelist_data objects — new_epidist_linelist_data","text":"Class constructor epidist_linelist_data objects","code":""},{"path":"https://epidist.epinowcast.org/dev/reference/new_epidist_linelist_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Class constructor for epidist_linelist_data objects — new_epidist_linelist_data","text":"","code":"new_epidist_linelist_data(data)"},{"path":"https://epidist.epinowcast.org/dev/reference/new_epidist_linelist_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class constructor for epidist_linelist_data objects — new_epidist_linelist_data","text":"data data.frame convert","code":""},{"path":"https://epidist.epinowcast.org/dev/reference/new_epidist_linelist_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Class constructor for epidist_linelist_data objects — new_epidist_linelist_data","text":"object class epidist_linelist_data","code":""},{"path":[]},{"path":"https://epidist.epinowcast.org/dev/reference/new_epidist_marginal_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Class constructor for epidist_marginal_model objects — new_epidist_marginal_model","title":"Class constructor for epidist_marginal_model objects — new_epidist_marginal_model","text":"Class constructor epidist_marginal_model objects","code":""},{"path":"https://epidist.epinowcast.org/dev/reference/new_epidist_marginal_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Class constructor for epidist_marginal_model objects — new_epidist_marginal_model","text":"","code":"new_epidist_marginal_model(data)"},{"path":"https://epidist.epinowcast.org/dev/reference/new_epidist_marginal_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class constructor for epidist_marginal_model objects — new_epidist_marginal_model","text":"data data.frame convert","code":""},{"path":"https://epidist.epinowcast.org/dev/reference/new_epidist_marginal_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Class constructor for epidist_marginal_model objects — new_epidist_marginal_model","text":"object class epidist_marginal_model","code":""},{"path":[]},{"path":"https://epidist.epinowcast.org/dev/reference/new_epidist_naive_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Class constructor for epidist_naive_model objects — new_epidist_naive_model","title":"Class constructor for epidist_naive_model objects — new_epidist_naive_model","text":"Class constructor epidist_naive_model objects","code":""},{"path":"https://epidist.epinowcast.org/dev/reference/new_epidist_naive_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Class constructor for epidist_naive_model objects — new_epidist_naive_model","text":"","code":"new_epidist_naive_model(data)"},{"path":"https://epidist.epinowcast.org/dev/reference/new_epidist_naive_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class constructor for epidist_naive_model objects — new_epidist_naive_model","text":"data object set class epidist_naive_model.","code":""},{"path":"https://epidist.epinowcast.org/dev/reference/new_epidist_naive_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Class constructor for epidist_naive_model objects — new_epidist_naive_model","text":"object class epidist_naive_model.","code":""},{"path":[]},{"path":"https://epidist.epinowcast.org/dev/reference/predict_delay_parameters.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract samples of the delay distribution parameters — predict_delay_parameters","title":"Extract samples of the delay distribution parameters — predict_delay_parameters","text":"Extract samples delay distribution parameters","code":""},{"path":"https://epidist.epinowcast.org/dev/reference/predict_delay_parameters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract samples of the delay distribution parameters — predict_delay_parameters","text":"","code":"predict_delay_parameters(fit, newdata = NULL, ...)  predict_dpar(fit, newdata = NULL, ...)"},{"path":"https://epidist.epinowcast.org/dev/reference/predict_delay_parameters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract samples of the delay distribution parameters — predict_delay_parameters","text":"fit model fit epidist(). newdata optional data.frame evaluate predictions. NULL (default), original data model used. NA values within factors (excluding grouping variables) interpreted dummy variables factor zero. allows, instance, make predictions grand mean using sum coding. NA values within grouping variables treated new level. ... Additional arguments passed brms::prepare_predictions().","code":""},{"path":[]},{"path":"https://epidist.epinowcast.org/dev/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. brms bf, lognormal, weibull stats Gamma","code":""},{"path":"https://epidist.epinowcast.org/dev/reference/sierra_leone_ebola_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Ebola linelist data from Fang et al. (2016) — sierra_leone_ebola_data","title":"Ebola linelist data from Fang et al. (2016) — sierra_leone_ebola_data","text":"Linelist data Ebola virus collected Sierra Leone. use data work, please cite corresponding paper.","code":""},{"path":"https://epidist.epinowcast.org/dev/reference/sierra_leone_ebola_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ebola linelist data from Fang et al. (2016) — sierra_leone_ebola_data","text":"","code":"sierra_leone_ebola_data"},{"path":"https://epidist.epinowcast.org/dev/reference/sierra_leone_ebola_data.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Ebola linelist data from Fang et al. (2016) — sierra_leone_ebola_data","text":"tibble 8,358 rows 8 columns: id Unique identification number case name Name character, omitted age Age numeric sex Sex character, either \"F\", \"M\" NA date_of_symptom_onset date symptoms began date_of_sample_tested date sample tested district district (ADM2) chiefdom chiefdom (ADM3)","code":""},{"path":"https://epidist.epinowcast.org/dev/reference/sierra_leone_ebola_data.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Ebola linelist data from Fang et al. (2016) — sierra_leone_ebola_data","text":"https://www.pnas.org/doi/full/10.1073/pnas.1518587113","code":""},{"path":"https://epidist.epinowcast.org/dev/reference/simulate_exponential_cases.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate exponential cases — simulate_exponential_cases","title":"Simulate exponential cases — simulate_exponential_cases","text":"function simulates cases exponential distribution. user may specify rate parameter r, sample size, upper bound survival time. rate parameter 0, function defaults uniform distribution.","code":""},{"path":"https://epidist.epinowcast.org/dev/reference/simulate_exponential_cases.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate exponential cases — simulate_exponential_cases","text":"","code":"simulate_exponential_cases(r = 0.2, sample_size = 10000, seed, t = 30)"},{"path":"https://epidist.epinowcast.org/dev/reference/simulate_exponential_cases.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate exponential cases — simulate_exponential_cases","text":"r exponential growth rate parameter. Defaults 0.2. sample_size number cases simulate. Defaults 10000. seed random seed used simulation process. t Upper bound survival time. Defaults 30.","code":""},{"path":"https://epidist.epinowcast.org/dev/reference/simulate_exponential_cases.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate exponential cases — simulate_exponential_cases","text":"data.frame two columns: case (case number) ptime (primary event time).","code":""},{"path":[]},{"path":"https://epidist.epinowcast.org/dev/reference/simulate_gillespie.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate cases from a stochastic SIR model — simulate_gillespie","title":"Simulate cases from a stochastic SIR model — simulate_gillespie","text":"function simulates cases stochastic SIR model. user may specify initial epidemic growth rate \\(r\\), rate recovery gamma \\(\\gamma\\), initial number infected cases \\(I_0\\), total population size \\(N\\).","code":""},{"path":"https://epidist.epinowcast.org/dev/reference/simulate_gillespie.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate cases from a stochastic SIR model — simulate_gillespie","text":"","code":"simulate_gillespie(r = 0.2, gamma = 1/7, I0 = 50, N = 10000, seed)"},{"path":"https://epidist.epinowcast.org/dev/reference/simulate_gillespie.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate cases from a stochastic SIR model — simulate_gillespie","text":"r initial epidemic growth rate. Defaults 0.2. gamma rate recovery. Defaults 1/7. I0 initial number infected people. Defaults 50. N total population size. Defaults 10000. seed random seed used simulation process.","code":""},{"path":"https://epidist.epinowcast.org/dev/reference/simulate_gillespie.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate cases from a stochastic SIR model — simulate_gillespie","text":"data.frame two columns: case (case number) ptime (primary event time).","code":""},{"path":[]},{"path":"https://epidist.epinowcast.org/dev/reference/simulate_secondary.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate secondary events based on a delay distribution — simulate_secondary","title":"Simulate secondary events based on a delay distribution — simulate_secondary","text":"function simulates secondary events based given delay distribution. input dataset primary event times column named ptime.","code":""},{"path":"https://epidist.epinowcast.org/dev/reference/simulate_secondary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate secondary events based on a delay distribution — simulate_secondary","text":"","code":"simulate_secondary(data, dist = rlnorm, ...)"},{"path":"https://epidist.epinowcast.org/dev/reference/simulate_secondary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate secondary events based on a delay distribution — simulate_secondary","text":"data data frame primary event times. dist delay distribution used. Defaults rlnorm(). ... Arguments passed delay distribution function.","code":""},{"path":"https://epidist.epinowcast.org/dev/reference/simulate_secondary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate secondary events based on a delay distribution — simulate_secondary","text":"data.frame augments data two new columns: delay (secondary event latency) stime (time secondary event).","code":""},{"path":[]},{"path":"https://epidist.epinowcast.org/dev/reference/simulate_uniform_cases.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate cases from a uniform distribution — simulate_uniform_cases","title":"Simulate cases from a uniform distribution — simulate_uniform_cases","text":"function simulates cases uniform distribution, primary event times uniformly distributed 0 t.","code":""},{"path":"https://epidist.epinowcast.org/dev/reference/simulate_uniform_cases.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate cases from a uniform distribution — simulate_uniform_cases","text":"","code":"simulate_uniform_cases(sample_size = 1000, t = 60)"},{"path":"https://epidist.epinowcast.org/dev/reference/simulate_uniform_cases.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate cases from a uniform distribution — simulate_uniform_cases","text":"sample_size number cases simulate. t Upper bound uniform distribution generate primary event times.","code":""},{"path":"https://epidist.epinowcast.org/dev/reference/simulate_uniform_cases.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate cases from a uniform distribution — simulate_uniform_cases","text":"data.frame two columns: case (case number) ptime (primary event time).","code":""},{"path":[]},{"path":"https://epidist.epinowcast.org/dev/news/index.html","id":"epidist-3001000","dir":"Changelog","previous_headings":"","what":"epidist 3.0.0.1000","title":"epidist 3.0.0.1000","text":"development release.","code":""},{"path":"https://epidist.epinowcast.org/dev/news/index.html","id":"epidist-030","dir":"Changelog","previous_headings":"","what":"epidist 0.3.0","title":"epidist 0.3.0","text":"release adds support wider range distributions marginal model, improves documentation new vignettes FAQ sections, enhances getting started guide clearer examples model comparison, fixes several bugs related parameter bounds likelihood calculations.","code":""},{"path":"https://epidist.epinowcast.org/dev/news/index.html","id":"models-0-3-0","dir":"Changelog","previous_headings":"","what":"Models","title":"epidist 0.3.0","text":"Added Stan-side support fitting distributions supported primarycensored marginal model. See #540. Added R-side analytical likelihood support Lognormal, Gamma, Weibull distributions. See #540.","code":""},{"path":"https://epidist.epinowcast.org/dev/news/index.html","id":"package-0-3-0","dir":"Changelog","previous_headings":"","what":"Package","title":"epidist 0.3.0","text":"Remove caching vignettes. See #533.","code":""},{"path":"https://epidist.epinowcast.org/dev/news/index.html","id":"documentation-0-3-0","dir":"Changelog","previous_headings":"","what":"Documentation","title":"epidist 0.3.0","text":"Added new vignette “Guide statistical models implemented epidist”. See #514. Added new FAQ section showcasing use posterior package epidist models, particularly working random variables (rvars) propagate uncertainty calculations. See #547. Added new FAQ section use marginaleffects package epidist models. See #547. Reduced focus simulating data getting started vignette make accessible. See #549. Made entry package friendlier clearer examples improved documentation. See #549. Added schematic explain right truncation clearly getting started vignette. See #549. Added comparison fitting naive marginal models getting started vignette highlight importance accounting biases. See #549. Added examples showing extract estimated parameters plot true values evaluate model performance. See #549.","code":""},{"path":"https://epidist.epinowcast.org/dev/news/index.html","id":"bugs-0-3-0","dir":"Changelog","previous_headings":"","what":"Bugs","title":"epidist 0.3.0","text":"Fixed vector length issue censoring causing problems likelihood calls. See #540. Fixed bug preprocessing Weibull family. See #540. Fixed bug bounds set mu parameters custom families. See #549. Fixed bug predict_delay_parameters() couldn’t detect brms families used directly. See #549.","code":""},{"path":"https://epidist.epinowcast.org/dev/news/index.html","id":"epidist-020","dir":"Changelog","previous_headings":"","what":"epidist 0.2.0","title":"epidist 0.2.0","text":"release adds new marginal model based primarycensored provides efficient approach fitting delay distributions compared existing latent model. ’ve also improved data handling adding support aggregated data across models, added comprehensive examples using real world data, enhanced documentation based user feedback. package also undergone significant internal improvements including generalised Stan reparameterisation improved data transformation methods. part release moved @athowes maintaining package (led initial package development, implementation S3 infrastructure, implementation core models, wrote first versions getting started vignette, Ebola case study, FAQ section, approximate inference vignette) @seabbs maintaining package.","code":""},{"path":"https://epidist.epinowcast.org/dev/news/index.html","id":"models-0-2-0","dir":"Changelog","previous_headings":"","what":"Models","title":"epidist 0.2.0","text":"Added marginalised likelihood model based primarycensored. can specified using as_epidist_marginal_model(). currently limited Weibull, log-normal, gamma distributions uniform primary censoring generalised future releases. See #426. Added user settable primary event priors latent model. See #474. Added marginalised likelihood latent model. See #474. Added weight argument as_epidist_marginal_model() allow weighted data (example count data) used marginal model. See #509. Added epidist_aggregate_data method as_epidist_marginal_model() allow straightforward use marginal model aggregated data. See #510. Added epidist_aggregate_data method as_epidist_latent_model() allow straightforward use latent model aggregated data. See #510. Added epidist_aggregate_data method as_epidist_naive_model() allow straightforward use naive model aggregated data. See #510. Updated naive model internally transform data optimally aggregated marginal model. See #510.","code":""},{"path":"https://epidist.epinowcast.org/dev/news/index.html","id":"package-0-2-0","dir":"Changelog","previous_headings":"","what":"Package","title":"epidist 0.2.0","text":"Remove default method epidist(). See #473. Added enforce_presence argument epidist_prior() allow priors specified match existing parameters. See #474. Added merge argument epidist_prior() allow merging user package priors. See #474. Generalised Stan reparametrisation feature work across distributions without manual specification generating Stan code brms extracting reparameterisation. See #474. Added transform_data S3 method allow data transformed specific models. specifically useful marginal model moment allows reducing data unique strata. See #474. Added new epidist_aggregate_data class handle pre-aggregated line list data. See #510. Added as_epidist_aggregate_data() method epidist_linelist_data objects allow easy conversion aggregate data. See #510. Added as_epidist_linelist_data() method epidist_aggregate_data objects allow easy conversion linelist data. See #510. Added example dataset sierra_leone_ebola_data package. See #510. Added examples functions show usage package. See #510. Added improved documentation explaining epidist_transform_data() methods work marginal naive models. See #510.","code":""},{"path":"https://epidist.epinowcast.org/dev/news/index.html","id":"documentation-0-2-0","dir":"Changelog","previous_headings":"","what":"Documentation","title":"epidist 0.2.0","text":"Brings README line epinowcast standards. See #467. Switched using marginal model default documentation. See #426. Added helper functions new variables avoid code duplication vignettes. See #426. Improved Ebola case study vignette use truncated data reduce focus exploratory data analysis. See #510.","code":""},{"path":"https://epidist.epinowcast.org/dev/news/index.html","id":"bugs-0-2-0","dir":"Changelog","previous_headings":"","what":"Bugs","title":"epidist 0.2.0","text":"Switched using patched primarycensored doesn’t make use size(). fixes Mac compilation edge cases. See #524.","code":""},{"path":"https://epidist.epinowcast.org/dev/news/index.html","id":"epidist-010","dir":"Changelog","previous_headings":"","what":"epidist 0.1.0","title":"epidist 0.1.0","text":"first minor release epidist intended early test users package. features may change, package marked experimental. expect release stable 1.0.0 version shortly. epidist package implements models epidemiological delay distributions. uses brms perform Bayesian inference. One data format currently available: linelist data format Two statistical models currently available: naive model: models delay directly using brms latent model: implements latent variable model correct biases data package readily extensible additional models via S3 class based system. particular, model fitting [epidist()] possible using S3 classes custom: Families Formula Prior distributions Stan code provide functionality post-processing. Alternatively, users may directly use tidybayes specific families. Three vignettes available. also frequently asked questions section.","code":""}]
