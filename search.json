[{"path":"https://epidist.epinowcast.org/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 epidist authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://epidist.epinowcast.org/articles/approx-inference.html","id":"background","dir":"Articles","previous_headings":"","what":"Background","title":"Approximate Bayesian inference in epidist","text":"epidist package uses Bayesian inference estimate delay distributions quantities. Bayesian inference amounts approximating posterior distribution parameter statistical model1. range methods exist perform approximation. default, epidist uses -U-Turn Sampler [NUTS; Hoffman, Gelman, et al. (2014)] Hamiltonian Monte Carlo (HMC) algorithm. NUTS example broader class Markov chain Monte Carlo (MCMC) methods. methods work simulating Markov chain target posterior distribution stationary distribution. MCMC algorithms run sufficiently many iterations, reached convergence, samples can treated drawn posterior distribution. Relevant posterior quantities expectations may computed using samples. drawback MCMC methods, like NUTS, simulations can quite computational intensive, especially complex models large data. epidist package built using brms (Bürkner 2017), stands “Bayesian Regression Models using Stan”, Stan (Carpenter et al. 2017) probabilistic programming language. Although NUTS primary inference algorithm used Stan, additional options available. additional inference algorithms also available epidist due dependence brms. vignette, first briefly describe alternative algorithms available (Section 2) well directing detailed resources. (Section 3) demonstrate application fitting simulated data, extracting comparing posterior distributions. comparing resulting inferences NUTS, hope help make informed decisions algorithm use applied problem.","code":""},{"path":"https://epidist.epinowcast.org/articles/approx-inference.html","id":"other","dir":"Articles","previous_headings":"","what":"Alternative approximate inference algorithms","title":"Approximate Bayesian inference in epidist","text":"describe three alternative approximate Bayesian inference algorithms available use brms, therefore also available epidist. ’s worth noting inference algorithms may become available since vignette last updated. Please check brms package updates interested!","code":""},{"path":"https://epidist.epinowcast.org/articles/approx-inference.html","id":"laplace-method","dir":"Articles","previous_headings":"2 Alternative approximate inference algorithms","what":"Laplace method","title":"Approximate Bayesian inference in epidist","text":"Laplace method approximates posterior distribution Gaussian distribution centered (default) posterior mode. Stan, Gaussian approximation constructed unconstrained parameter space (domain Gaussian distribution real line). Samples Gaussian approximation may transformed constrained parameter space. access Laplace method, specify algorithm = \"laplace\" within brms::brm(). See section Laplace Sampling CmdStan User’s Guide information.","code":""},{"path":"https://epidist.epinowcast.org/articles/approx-inference.html","id":"variational-inference-using-advi","dir":"Articles","previous_headings":"2 Alternative approximate inference algorithms","what":"Variational inference using ADVI","title":"Approximate Bayesian inference in epidist","text":"Automatic differentiation variational inference [ADVI; Kucukelbir et al. (2017)] type variational inference [VI; Blei, Kucukelbir, McAuliffe (2017)] algorithm. VI works restricting family distributions, selecting member family similar posterior distribution. commonly, Stan, (dis-)similarity measured using Kullback–Leibler (KL) divergence. two options family distributions, either fully factorised Gaussian algorithm = \"meanfield\" Gaussian full-rank covariance matrix algorithm = \"fullrank\". See section Variational Inference using ADVI CmdStan User’s Guide information.","code":""},{"path":"https://epidist.epinowcast.org/articles/approx-inference.html","id":"pathfinder","dir":"Articles","previous_headings":"2 Alternative approximate inference algorithms","what":"Pathfinder","title":"Approximate Bayesian inference in epidist","text":"Pathfinder method closely related variational inference, recently developed Zhang et al. (2022). works generating Gaussian approximations along step iterative optimisation algorithm (L-BFGS). KL divergence approximation posterior measured, best approximation chosen. Pareto smoothed importance sampling [PSIS; Vehtari et al. (2015)] optionally used resample draws chosen Gaussian distribution. multiple paths specified (using num_paths) Pathfinder algorithm run multiple times, initialising optimisation different points. resulting approximation mixture Gaussian distributions, rather single Gaussian distribution. See section Pathfinder Method Approximate Bayesian Inference CmdStan User’s Guide information.","code":""},{"path":"https://epidist.epinowcast.org/articles/approx-inference.html","id":"demo","dir":"Articles","previous_headings":"","what":"Demonstration","title":"Approximate Bayesian inference in epidist","text":"demonstration, use following packages: First, begin simulating data. example data simulation process follows used Getting started epidist vignette, detail exactly happening , please consult vignette interested: now prepare data fitting latent individual model, perform inference HMC: Note clarity specify algorithm = \"sampling\", call epidist(data = data) result since \"sampling\" (.e. HMC) default value algorithm argument. Now, fit2 latent individual model using method Section 2. match four Markov chains length 1000 HMC , draw 4000 samples approximate posterior. Pathfinder algorithm set num_paths = 1. Although testing Laplace ADVI methods ran without problem cases, found Pathfinder often produced “Error evaluating model log probability: Non-finite gradient.”. Although save_single_paths option available, may allowed recovery individual Pathfinder paths (therefore removing faulty paths), appear working currently3. now extract posterior distribution delay parameters fitted model inference method. Thankfully, algorithm implemented sample draws posterior distribution, post-processing simple.","code":"library(epidist) library(ggplot2) library(dplyr) library(gt) library(purrr) library(tidyr) library(tibble) library(tidybayes) meanlog <- 1.8 sdlog <- 0.5 obs_time <- 25 sample_size <- 200  obs_cens_trunc_samp <- simulate_gillespie(seed = 101) |>   simulate_secondary(     meanlog = meanlog,     sdlog = sdlog   ) |>   observe_process() |>   filter_obs_by_obs_time(obs_time = obs_time) |>   slice_sample(n = sample_size, replace = FALSE) data <- as_latent_individual(obs_cens_trunc_samp)  t <- proc.time() fit_hmc <- epidist(data = data, algorithm = \"sampling\") time_hmc <- proc.time() - t t <- proc.time() fit_laplace <- epidist(data = data, algorithm = \"laplace\", draws = 4000) time_laplace <- proc.time() - t  t <- proc.time() fit_advi <- epidist(data = data, algorithm = \"meanfield\", draws = 4000) time_advi <- proc.time() - t t <- proc.time() fit_pathfinder <- epidist(   data = data, algorithm = \"pathfinder\", draws = 4000, num_paths = 1 ) #> Warning: Number of PSIS draws is larger than the total number of draws returned by the single Pathfinders. This is likely unintentional and leads to re-sampling from the same draws.  #> Path [1] :Initial log joint density = -1520.740908  #> Error evaluating model log probability: Non-finite gradient.  #> Path [1] : Iter      log prob        ||dx||      ||grad||     alpha      alpha0      # evals       ELBO    Best ELBO        Notes   #>              66      -9.381e+02      4.145e-04   3.228e-03    1.925e-01  1.000e+00      1651 -4.023e+02 -4.023e+02                    #> Path [1] :Best Iter: [66] ELBO (-402.301946) evaluations: (1651)  #> Finished in  0.4 seconds. time_pathfinder <- proc.time() - t fits <- list(   \"HMC\" = fit_hmc,   \"Laplace\" = fit_laplace,   \"ADVI\" = fit_advi,   \"Pathfinder\" = fit_pathfinder )  draws <- imap(fits, function(fit, name) {   predict_delay_parameters(fit) |>     as.data.frame() |>     pivot_longer(       cols = c(\"mu\", \"sigma\", \"mean\", \"sd\"),       names_to = \"parameter\",       values_to = \"value\"     ) |>     filter(parameter %in% c(\"mu\", \"sigma\")) |>     mutate(method = as.factor(name)) })  draws <- bind_rows(draws)"},{"path":"https://epidist.epinowcast.org/articles/approx-inference.html","id":"comparison-of-parameter-posterior-distributions","dir":"Articles","previous_headings":"3 Demonstration","what":"Comparison of parameter posterior distributions","title":"Approximate Bayesian inference in epidist","text":"mean estimated value parameter, method follows. comprehensively, estimated posterior distributions shown Figure 3.1. Figure 3.1: Estimated posterior distributions mu sigma parameters using inference method, shown using tidybayes::stat_slabinterval().","code":"pars <- draws |>   group_by(method, parameter) |>   summarise(value = mean(value)) |>   pivot_wider(names_from = parameter, values_from = value)  pars |>   ungroup() |>   gt() draws |>   ggplot(aes(x = value, col = method)) +   stat_slabinterval(density = \"histogram\", breaks = 30, alpha = 0.8) +   scale_colour_manual(values = c(\"#56B4E9\", \"#009E73\", \"#E69F00\", \"#CC79A7\")) +   facet_grid(method ~ parameter, scales = \"free_x\") +   theme_minimal() +   guides(fill = \"none\") +   labs(x = \"\", y = \"\", col = \"Method\") +   theme(legend.position = \"bottom\")"},{"path":"https://epidist.epinowcast.org/articles/approx-inference.html","id":"comparison-of-resulting-delay-distributions","dir":"Articles","previous_headings":"3 Demonstration","what":"Comparison of resulting delay distributions","title":"Approximate Bayesian inference in epidist","text":"Figure 3.2 shows different mu sigma posterior mean estimates inference method alter estimated delay distribution. Figure 3.2: Delay probability density functions obtained based posterior mean estimated mu sigma parameters.","code":"pmap_df(   filter(pars), ~ tibble(     x = seq(0, 25, by = 0.1),     method = ..1, density = dlnorm(x, ..2, ..3)   ) ) |>   ggplot(aes(x = x, y = density, col = method)) +   geom_line() +   scale_color_manual(values = c(\"#56B4E9\", \"#009E73\", \"#E69F00\", \"#CC79A7\")) +   theme_minimal() +   labs(x = \"\", y = \"\", col = \"Method\")"},{"path":"https://epidist.epinowcast.org/articles/approx-inference.html","id":"comparison-of-time-taken","dir":"Articles","previous_headings":"3 Demonstration","what":"Comparison of time taken","title":"Approximate Bayesian inference in epidist","text":"example, HMC took much longer methods, Pathfinder fastest method. said, even HMC computation time case unlikely prohibitive.","code":"times <- list(   \"HMC\" = time_hmc,   \"Laplace\" = time_laplace,   \"ADVI\" = time_advi,   \"Pathfinder\" = time_pathfinder )  times |>   map_dbl(\"elapsed\") |>   enframe(name = \"method\", value = \"time (s)\") |>   gt()"},{"path":"https://epidist.epinowcast.org/articles/approx-inference.html","id":"conclusion","dir":"Articles","previous_headings":"","what":"Conclusion","title":"Approximate Bayesian inference in epidist","text":"range alternative approximation algorithms available, ease use, attractive feature brms. found algorithms produce reasonable approximations far less time HMC. course, vignette includes one example, thorough investigation required make specific recommendations. said, currently recommend use Pathfinder algorithm due unstable performance testing, early stage software implementation.","code":""},{"path":[]},{"path":"https://epidist.epinowcast.org/articles/ebola.html","id":"data-preparation","dir":"Articles","previous_headings":"","what":"Data preparation","title":"Using epidist to estimate delay between symptom onset and positive test for an Ebola outbreak in Sierra Leone","text":"begin loading Ebola line list data: data 8358 rows, corresponding unique case report id. columns data individuals name (retracted, hence can removed), age, sex, dates Ebola symptom onset positive sample, district chiefdom. Figure 1.1 shows dates symptom onset sample testing cases across district. (figure, filter every 5th case order avoid overplotting.) can see start time course epidemic varies across districts. Figure 1.1: Primary secondary event times every 5th case, 14 districts Sierra Leone. can use map help visualise outbreak across space. create map, first join Ebola data shapefiles districts Sierra Leone. shapefiles obtained Database Global Administrative Areas (GADM). Figure 1.2 shows majority cases concentrated Western Urban district. district contains capital country, highest population (, one may also interested prevalence Ebola, number cases divided population size). Figure 1.2: cloropleth showing total number Ebola cases district Sierra Leone.","code":"data(\"sierra_leone_ebola_data\") sierra_leone_ebola_data <- sierra_leone_ebola_data |>   select(-name) |>   mutate(     case = as.integer(id), .keep = \"unused\",     sex = case_when(       sex == \"F\" ~ \"Female\",       sex == \"M\" ~ \"Male\"     )   )  head(sierra_leone_ebola_data) #> # A tibble: 6 × 7 #>     age sex    date_of_symptom_onset date_of_sample_tested district chiefdom    #>   <dbl> <chr>  <dttm>                <dttm>                <chr>    <chr>       #> 1    20 Female 2014-05-18 00:00:00   2014-05-23 00:00:00   Kailahun Kissi Teng  #> 2    42 Female 2014-05-20 00:00:00   2014-05-25 00:00:00   Kailahun Kissi Teng  #> 3    45 Female 2014-05-20 00:00:00   2014-05-25 00:00:00   Kailahun Kissi Tonge #> 4    15 Female 2014-05-21 00:00:00   2014-05-26 00:00:00   Kailahun Kissi Teng  #> 5    19 Female 2014-05-21 00:00:00   2014-05-26 00:00:00   Kailahun Kissi Teng  #> 6    55 Female 2014-05-21 00:00:00   2014-05-26 00:00:00   Kailahun Kissi Teng  #> # ℹ 1 more variable: case <int>  fraction <- 5 ndistrict <- length(unique(sierra_leone_ebola_data$district)) sierra_leone_ebola_data |>   filter(case %% fraction == 0) |>   ggplot() +   geom_segment(     aes(       x = date_of_symptom_onset, xend = date_of_sample_tested,       y = case, yend = case     ),     col = \"grey\"   ) +   geom_point(aes(x = date_of_symptom_onset, y = case), col = \"#56B4E9\") +   geom_point(aes(x = date_of_sample_tested, y = case), col = \"#009E73\") +   facet_wrap(district ~ ., ncol = 2) +   labs(x = \"\", y = \"Case ID\") +   theme_minimal() sf <- st_read(   system.file(\"extdata/gadm41_SLE_shp/gadm41_SLE_2.shp\", package = \"epidist\"),   quiet = TRUE )  sierra_leone_ebola_data_sf <- select(sf, district = NAME_2, geometry) |>   left_join(     sierra_leone_ebola_data |>       group_by(district) |>       summarise(cases = n())   ) ggplot(sierra_leone_ebola_data_sf, aes(fill = cases, geometry = geometry)) +   geom_sf() +   scale_fill_viridis_c(na.value = \"lightgrey\") +   theme_minimal() +   labs(fill = \"Cases\")"},{"path":"https://epidist.epinowcast.org/articles/ebola.html","id":"fitting-sex-district-stratified-delay-distributions","dir":"Articles","previous_headings":"","what":"Fitting sex-district stratified delay distributions","title":"Using epidist to estimate delay between symptom onset and positive test for an Ebola outbreak in Sierra Leone","text":"understand delay time symptom onset time sample testing, fit range statistical models using epidist package. models, vary parameters delay distribution sex district. lognormal delay distribution parameters mean standard deviation underlying normal distribution. , \\(\\mu\\) \\(\\sigma\\) \\(x \\sim \\mathcal{N}(\\mu, \\sigma)\\) \\(\\exp(x)\\) lognormal distribution.","code":""},{"path":"https://epidist.epinowcast.org/articles/ebola.html","id":"data-preparation-1","dir":"Articles","previous_headings":"2 Fitting sex-district stratified delay distributions","what":"Data preparation","title":"Using epidist to estimate delay between symptom onset and positive test for an Ebola outbreak in Sierra Leone","text":"prepare data, begin transforming date columns ptime stime columns times primary secondary events respectively. columns relative first date symptom onset data: Next, use observe_process() add interval censoring columns giving lower upper bounds primary secondary event times: time , filter data complete cases (.e. rows data missing values1). , 83% cases complete. Additionally, speed computation, take random 20% subsample complete data. (real analysis, ’d recommend using available data).","code":"sierra_leone_ebola_data <- sierra_leone_ebola_data |>   mutate(     # use lubridate::ymd() to drop any sub-date time info     date_of_symptom_onset = ymd(date_of_symptom_onset),     date_of_sample_tested = ymd(date_of_sample_tested),     # ptime and stime represent the number of days elapsed since the earliest     # date of symptom onset in the data     ptime = as.numeric(date_of_symptom_onset - min(date_of_symptom_onset)),     stime = as.numeric(date_of_sample_tested - min(date_of_symptom_onset))   ) |>   select(case, ptime, stime, age, sex, district)  head(sierra_leone_ebola_data) #> # A tibble: 6 × 6 #>    case ptime stime   age sex    district #>   <int> <dbl> <dbl> <dbl> <chr>  <chr>    #> 1     1     0     5    20 Female Kailahun #> 2     2     2     7    42 Female Kailahun #> 3     3     2     7    45 Female Kailahun #> 4     4     3     8    15 Female Kailahun #> 5     5     3     8    19 Female Kailahun #> 6     6     3     8    55 Female Kailahun obs_cens <- observe_process(sierra_leone_ebola_data) head(obs_cens) #> # A tibble: 6 × 16 #>    case ptime stime   age sex    district ptime_daily ptime_lwr ptime_upr #>   <int> <dbl> <dbl> <dbl> <chr>  <chr>          <dbl>     <dbl>     <dbl> #> 1     1     0     5    20 Female Kailahun           0         0         1 #> 2     2     2     7    42 Female Kailahun           2         2         3 #> 3     3     2     7    45 Female Kailahun           2         2         3 #> 4     4     3     8    15 Female Kailahun           3         3         4 #> 5     5     3     8    19 Female Kailahun           3         3         4 #> 6     6     3     8    55 Female Kailahun           3         3         4 #> # ℹ 7 more variables: stime_daily <dbl>, stime_lwr <dbl>, stime_upr <dbl>, #> #   delay_daily <dbl>, delay_lwr <dbl>, delay_upr <dbl>, obs_at <dbl> n <- nrow(obs_cens) obs_cens <- obs_cens[complete.cases(obs_cens), ] n_complete <- nrow(obs_cens) subsample <- 0.2 obs_cens <- obs_cens |>   slice_sample(n = round(n_complete * subsample), replace = FALSE)"},{"path":"https://epidist.epinowcast.org/articles/ebola.html","id":"model-fitting","dir":"Articles","previous_headings":"2 Fitting sex-district stratified delay distributions","what":"Model fitting","title":"Using epidist to estimate delay between symptom onset and positive test for an Ebola outbreak in Sierra Leone","text":"prepare data use latent individual model, use function as_latent_individual: Now ready fit latent individual model.","code":"obs_prep <- as_latent_individual(obs_cens) head(obs_prep) #> # A tibble: 6 × 22 #>    case ptime stime   age sex    district      ptime_daily ptime_lwr ptime_upr #>   <int> <dbl> <dbl> <dbl> <chr>  <chr>               <dbl>     <dbl>     <dbl> #> 1  1101   108   111    40 Female Bombali               108       108       109 #> 2  5584   189   197    23 Male   Bombali               189       189       190 #> 3  1187   111   117    35 Male   Port Loko             111       111       112 #> 4  2483   138   142    15 Female Bo                    138       138       139 #> 5  6796   217   221    16 Male   Western Urban         217       217       218 #> 6  3576   157   163    28 Female Bombali               157       157       158 #> # ℹ 13 more variables: stime_daily <dbl>, stime_lwr <dbl>, stime_upr <dbl>, #> #   delay_daily <dbl>, delay_lwr <dbl>, delay_upr <dbl>, obs_at <dbl>, #> #   obs_t <dbl>, pwindow <dbl>, woverlap <dbl>, swindow <dbl>, delay <dbl>, #> #   row_id <fct>"},{"path":"https://epidist.epinowcast.org/articles/ebola.html","id":"intercept-only-model","dir":"Articles","previous_headings":"2 Fitting sex-district stratified delay distributions > 2.2 Model fitting","what":"Intercept-only model","title":"Using epidist to estimate delay between symptom onset and positive test for an Ebola outbreak in Sierra Leone","text":"start fitting single lognormal distribution data. model assumes single distribution describes delays data, regardless case’s location, sex, covariates. , set formula = bf(mu ~ 1, sigma ~ 1) place model intercept parameter (.e. ~ 1 R formula syntax) mu sigma parameters lognormal distribution. distribution specified using family = lognormal(). fit object brmsfit object, associated range methods. See methods(class = \"brmsfit\") details. example, may use summary view information fitted model, including posterior estimates regression coefficients:","code":"fit <- epidist(   data = obs_prep,   formula = bf(mu ~ 1, sigma ~ 1),   family = lognormal(),   algorithm = \"sampling\",   refresh = 0,   silent = 2,   seed = 1 ) summary(fit) #>  Family: latent_lognormal  #>   Links: mu = identity; sigma = log  #> Formula: delay | vreal(obs_t, pwindow, swindow) ~ 1  #>          sigma ~ 1 #>    Data: data (Number of observations: 1390)  #>   Draws: 4 chains, each with iter = 2000; warmup = 1000; thin = 1; #>          total post-warmup draws = 4000 #>  #> Regression Coefficients: #>                 Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS #> Intercept           1.62      0.02     1.59     1.65 1.00     9135     2707 #> sigma_Intercept    -0.54      0.02    -0.58    -0.50 1.00     8932     3351 #>  #> Draws were sampled using sample(hmc). For each parameter, Bulk_ESS #> and Tail_ESS are effective sample size measures, and Rhat is the potential #> scale reduction factor on split chains (at convergence, Rhat = 1)."},{"path":"https://epidist.epinowcast.org/articles/ebola.html","id":"sex-stratified-model","dir":"Articles","previous_headings":"2 Fitting sex-district stratified delay distributions > 2.2 Model fitting","what":"Sex-stratified model","title":"Using epidist to estimate delay between symptom onset and positive test for an Ebola outbreak in Sierra Leone","text":"fit model varies parameters fitted lognormal distribution, mu sigma, sex alter formula specification include fixed effects sex ~ 1 + sex follows: summary model shows males tend longer delays (posterior mean sexMale 0.03) greater delay variation (posterior mean sigma_sexMale 0.05). sexMale effect, 95% credible interval greater zero, whereas sigma_sexMale effect 95% credible interval includes zero. important note estimates represent average observed data, individual delays men women vary significantly.","code":"fit_sex <- epidist(   data = obs_prep,   formula = bf(mu ~ 1 + sex, sigma ~ 1 + sex),   family = lognormal(),   algorithm = \"sampling\",   refresh = 0,   silent = 2,   seed = 1 ) summary(fit_sex) #>  Family: latent_lognormal  #>   Links: mu = identity; sigma = log  #> Formula: delay | vreal(obs_t, pwindow, swindow) ~ sex  #>          sigma ~ 1 + sex #>    Data: data (Number of observations: 1390)  #>   Draws: 4 chains, each with iter = 2000; warmup = 1000; thin = 1; #>          total post-warmup draws = 4000 #>  #> Regression Coefficients: #>                 Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS #> Intercept           1.60      0.02     1.56     1.65 1.00     9840     3072 #> sigma_Intercept    -0.57      0.03    -0.62    -0.51 1.00     9121     2955 #> sexMale             0.03      0.03    -0.03     0.09 1.00     9384     2952 #> sigma_sexMale       0.05      0.04    -0.03     0.14 1.00     8838     2776 #>  #> Draws were sampled using sample(hmc). For each parameter, Bulk_ESS #> and Tail_ESS are effective sample size measures, and Rhat is the potential #> scale reduction factor on split chains (at convergence, Rhat = 1)."},{"path":"https://epidist.epinowcast.org/articles/ebola.html","id":"sex-district-stratified-model","dir":"Articles","previous_headings":"2 Fitting sex-district stratified delay distributions > 2.2 Model fitting","what":"Sex-district stratified model","title":"Using epidist to estimate delay between symptom onset and positive test for an Ebola outbreak in Sierra Leone","text":"Finally, fit model also varies district. , use district level random effects, assumed drawn shared normal distribution, within model mu sigma parameters. random effects specified including (1 | district) formulas: model, along looking summary, may also use brms::ranef() function look estimates random effects:","code":"fit_sex_district <- epidist(   data = obs_prep,   formula = bf(     mu ~ 1 + sex + (1 | district),     sigma ~ 1 + sex + (1 | district)   ),   family = lognormal(),   algorithm = \"sampling\",   refresh = 0,   silent = 2,   seed = 1 ) summary(fit_sex_district) #>  Family: latent_lognormal  #>   Links: mu = identity; sigma = log  #> Formula: delay | vreal(obs_t, pwindow, swindow) ~ sex + (1 | district)  #>          sigma ~ 1 + sex + (1 | district) #>    Data: data (Number of observations: 1390)  #>   Draws: 4 chains, each with iter = 2000; warmup = 1000; thin = 1; #>          total post-warmup draws = 4000 #>  #> Multilevel Hyperparameters: #> ~district (Number of levels: 14)  #>                     Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS #> sd(Intercept)           0.13      0.04     0.07     0.22 1.00     2241     2762 #> sd(sigma_Intercept)     0.24      0.07     0.14     0.41 1.00     1630     2277 #>  #> Regression Coefficients: #>                 Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS #> Intercept           1.63      0.04     1.54     1.72 1.00     2473     2812 #> sigma_Intercept    -0.64      0.08    -0.80    -0.49 1.00     1974     1983 #> sexMale             0.04      0.03    -0.02     0.10 1.00    10711     2685 #> sigma_sexMale       0.04      0.04    -0.04     0.12 1.00     8473     3145 #>  #> Draws were sampled using sample(hmc). For each parameter, Bulk_ESS #> and Tail_ESS are effective sample size measures, and Rhat is the potential #> scale reduction factor on split chains (at convergence, Rhat = 1). ranef(fit_sex_district) #> $district #> , , Intercept #>  #>                    Estimate  Est.Error        Q2.5         Q97.5 #> Bo             6.371621e-02 0.07359867 -0.07516483  0.2172727750 #> Bombali        1.640778e-01 0.04941813  0.06541626  0.2611606250 #> Bonthe         6.939424e-03 0.12645921 -0.25349780  0.2492450750 #> Kailahun      -4.011221e-02 0.05667364 -0.15431732  0.0711047200 #> Kambia         4.223585e-02 0.08850373 -0.12717575  0.2207266750 #> Kenema        -1.391701e-01 0.07323260 -0.29128433  0.0002774699 #> Koinadugu      1.133106e-01 0.09724935 -0.06785274  0.3257543500 #> Kono          -3.061089e-02 0.07825150 -0.18479047  0.1197622750 #> Moyamba       -6.773945e-05 0.08349288 -0.16163852  0.1587817000 #> Port Loko      1.435738e-02 0.05249369 -0.09109206  0.1192909250 #> Pujehun       -4.120320e-02 0.11048968 -0.26577855  0.1650174750 #> Tonkolili      3.631068e-02 0.05692232 -0.07445011  0.1508875250 #> Western Rural  8.802803e-03 0.05416008 -0.09850370  0.1171788750 #> Western Urban -1.841781e-01 0.05383542 -0.29487793 -0.0825507900 #>  #> , , sigma_Intercept #>  #>                  Estimate  Est.Error        Q2.5        Q97.5 #> Bo            -0.04319236 0.11996727 -0.27383410  0.199299325 #> Bombali       -0.29174162 0.08868419 -0.45921660 -0.116847950 #> Bonthe        -0.05523976 0.25069080 -0.59706777  0.422855400 #> Kailahun      -0.20451584 0.10145527 -0.40233780 -0.002879607 #> Kambia         0.29141334 0.11936303  0.06776910  0.536575650 #> Kenema         0.20998415 0.10333036  0.01559385  0.424579575 #> Koinadugu      0.01337396 0.15237593 -0.28072285  0.320624525 #> Kono           0.10498724 0.11619073 -0.11573440  0.336127500 #> Moyamba        0.08364841 0.12449586 -0.14856748  0.339839775 #> Port Loko      0.01463715 0.08721044 -0.15581690  0.198435475 #> Pujehun       -0.14516908 0.24205619 -0.65634702  0.296625300 #> Tonkolili     -0.23929303 0.10497508 -0.44888910 -0.035586045 #> Western Rural  0.02832273 0.08749760 -0.13610960  0.201803750 #> Western Urban  0.24464192 0.08314110  0.08656548  0.412287575"},{"path":"https://epidist.epinowcast.org/articles/ebola.html","id":"posterior-expectation","dir":"Articles","previous_headings":"2 Fitting sex-district stratified delay distributions","what":"Posterior expectations","title":"Using epidist to estimate delay between symptom onset and positive test for an Ebola outbreak in Sierra Leone","text":"go summaries fitted model, recommend using tidybayes package. example, obtain posterior expectation delay distribution, censoring truncation, may use modelr::data_grid() function combination tidybayes::add_epred_draws() function. tidybayes::add_epred_draws() function uses posterior_epred_latent_lognormal function implemented epidist latent_lognormal custom brms family. Figure 2.1 show posterior expectation delay distribution three fitted models. Figure 2.1B illustrates higher mean men compared women. Figure 2.1: fitted posterior expectations delay distribution model.","code":"epred_draws <- obs_prep |>   as.data.frame() |>   data_grid(NA) |>   mutate(obs_t = NA, pwindow = NA, swindow = NA) |>   add_epred_draws(fit, dpar = TRUE)  epred_base_figure <- epred_draws |>   ggplot(aes(x = .epred)) +   stat_halfeye() +   labs(x = \"\", y = \"\", title = \"Intercept-only\", tag = \"A\") +   theme_minimal()  epred_draws_sex <- obs_prep |>   as.data.frame() |>   data_grid(sex) |>   mutate(obs_t = NA, pwindow = NA, swindow = NA) |>   add_epred_draws(fit_sex, dpar = TRUE)  epred_sex_figure <- epred_draws_sex |>   ggplot(aes(x = .epred, y = sex)) +   stat_halfeye() +   labs(x = \"\", y = \"\", title = \"Sex-stratified\", tag = \"B\") +   theme_minimal()  epred_draws_sex_district <- obs_prep |>   as.data.frame() |>   data_grid(sex, district) |>   mutate(obs_t = NA, pwindow = NA, swindow = NA) |>   add_epred_draws(fit_sex_district, dpar = TRUE)  epred_sex_district_figure <- epred_draws_sex_district |>   ggplot(aes(x = .epred, y = district)) +   stat_pointinterval() +   facet_grid(. ~ sex) +   labs(     x = \"Posterior expectation of the delay\", y = \"\",     title = \"Sex-district-stratified\", tag = \"C\"   ) +   scale_y_discrete(limits = rev) +   theme_minimal() epred_base_figure / epred_sex_figure / epred_sex_district_figure +   plot_layout(heights = c(1, 1.5, 2.5))"},{"path":"https://epidist.epinowcast.org/articles/ebola.html","id":"linear-predictor-posteriors","dir":"Articles","previous_headings":"2 Fitting sex-district stratified delay distributions","what":"Linear predictor posteriors","title":"Using epidist to estimate delay between symptom onset and positive test for an Ebola outbreak in Sierra Leone","text":"tidybayes package also allows users generate draws linear predictors distributional parameters using tidybayes::add_linpred_draws(). example, mu parameter sex-district stratified model (Figure 2.2): Figure 2.2: posterior distribution linear predictor mu parameter within sex-district stratified model. posterior expectations Section 2.3 function mu linear predictor posterior distribution sigma linear predictor posterior distribution.","code":"linpred_draws_sex_district <- obs_prep |>   as.data.frame() |>   data_grid(sex, district) |>   mutate(obs_t = NA, pwindow = NA, swindow = NA) |>   add_linpred_draws(fit_sex_district, dpar = TRUE) linpred_draws_sex_district |>   ggplot(aes(x = mu, y = district)) +   stat_pointinterval() +   facet_grid(. ~ sex) +   labs(x = \"Posterior of the mu linear predictor\", y = \"\") +   scale_y_discrete(limits = rev) +   theme_minimal()"},{"path":"https://epidist.epinowcast.org/articles/ebola.html","id":"delay-posterior-distributions","dir":"Articles","previous_headings":"2 Fitting sex-district stratified delay distributions","what":"Delay posterior distributions","title":"Using epidist to estimate delay between symptom onset and positive test for an Ebola outbreak in Sierra Leone","text":"Posterior predictions delay distribution important output analysis epidist package. section, demonstrate produce either discrete probability mass function representation, continuous probability density function representation delay distribution.","code":""},{"path":"https://epidist.epinowcast.org/articles/ebola.html","id":"discrete-probability-mass-function","dir":"Articles","previous_headings":"2 Fitting sex-district stratified delay distributions > 2.5 Delay posterior distributions","what":"Discrete probability mass function","title":"Using epidist to estimate delay between symptom onset and positive test for an Ebola outbreak in Sierra Leone","text":"generate discrete probability mass function (PMF) predict delay distribution observed daily censoring right truncation. , set pwindow swindow 1 daily censoring, obs_t 1000 censoring. Figure 2.3 shows result, delays greater 30 omitted figure. Figure 2.3: Posterior predictions discrete probability mass function fitted models.","code":"draws_pmf <- obs_prep |>   as.data.frame() |>   mutate(obs_t = 1000, pwindow = 1, swindow = 1) |>   add_predicted_draws(fit, ndraws = 1000)  pmf_base_figure <- ggplot(draws_pmf, aes(x = .prediction)) +   geom_bar(aes(y = after_stat(count / sum(count)))) +   labs(x = \"\", y = \"\", title = \"Intercept-only\", tag = \"A\") +   scale_x_continuous(limits = c(0, 30)) +   theme_minimal()  draws_sex_pmf <- obs_prep |>   as.data.frame() |>   data_grid(sex) |>   mutate(obs_t = 1000, pwindow = 1, swindow = 1) |>   add_predicted_draws(fit_sex, ndraws = 1000)  pmf_sex_figure <- draws_sex_pmf |>   ggplot(aes(x = .prediction)) +   geom_bar(aes(y = after_stat(count / ave(count, PANEL, FUN = sum)))) +   labs(x = \"\", y = \"\", title = \"Sex-stratified\", tag = \"B\") +   facet_grid(. ~ sex) +   scale_x_continuous(limits = c(0, 30)) +   theme_minimal()  draws_sex_district_pmf <- obs_prep |>   as.data.frame() |>   data_grid(sex, district) |>   mutate(obs_t = 1000, pwindow = 1, swindow = 1) |>   add_predicted_draws(fit_sex_district, ndraws = 1000)  pmf_sex_district_figure <- draws_sex_district_pmf |>   mutate(     district = case_when(       district == \"Port Loko\" ~ \"Port\\nLoko\",       district == \"Western Rural\" ~ \"Western\\nRural\",       district == \"Western Urban\" ~ \"Western\\nUrban\",       .default = district     )   ) |>   ggplot(aes(x = .prediction)) +   geom_bar(aes(y = after_stat(count / ave(count, PANEL, FUN = sum)))) +   labs(     x = \"PMF with daily censoring and no truncation\", y = \"\",     title = \"Sex-district-stratified\", tag = \"C\"   ) +   facet_grid(district ~ sex) +   scale_x_continuous(limits = c(0, 30)) +   theme_minimal() pmf_base_figure / pmf_sex_figure / pmf_sex_district_figure +   plot_layout(heights = c(1, 1.5, 5.5))"},{"path":"https://epidist.epinowcast.org/articles/ebola.html","id":"continuous-probability-density-function","dir":"Articles","previous_headings":"2 Fitting sex-district stratified delay distributions > 2.5 Delay posterior distributions","what":"Continuous probability density function","title":"Using epidist to estimate delay between symptom onset and positive test for an Ebola outbreak in Sierra Leone","text":"posterior predictive distribution truncation censoring. produce continuous delay times (Figure 2.4): Figure 2.4: Posterior predictions continuous probability density function fitted models.","code":"draws_pdf <- obs_prep |>   as.data.frame() |>   mutate(obs_t = 1000, pwindow = 0, swindow = 0) |>   add_predicted_draws(fit, ndraws = 1000)  pdf_base_figure <- ggplot(draws_pdf, aes(x = .prediction)) +   geom_density() +   labs(x = \"\", y = \"\", title = \"Intercept-only\", tag = \"A\") +   scale_x_continuous(limits = c(0, 30)) +   theme_minimal()  draws_sex_pdf <- obs_prep |>   as.data.frame() |>   data_grid(sex) |>   mutate(obs_t = 1000, pwindow = 0, swindow = 0) |>   add_predicted_draws(fit_sex, ndraws = 1000)  pdf_sex_figure <- draws_sex_pdf |>   ggplot(aes(x = .prediction)) +   geom_density() +   labs(x = \"\", y = \"\", title = \"Sex-stratified\", tag = \"B\") +   facet_grid(. ~ sex) +   scale_x_continuous(limits = c(0, 30)) +   theme_minimal()  draws_sex_district_pdf <- obs_prep |>   as.data.frame() |>   data_grid(sex, district) |>   mutate(obs_t = 1000, pwindow = 0, swindow = 0) |>   add_predicted_draws(fit_sex_district, ndraws = 1000)  pdf_sex_district_figure <- draws_sex_district_pdf |>   mutate(     district = case_when(       district == \"Port Loko\" ~ \"Port\\nLoko\",       district == \"Western Rural\" ~ \"Western\\nRural\",       district == \"Western Urban\" ~ \"Western\\nUrban\",       .default = district     )   ) |>   ggplot(aes(x = .prediction)) +   geom_density() +   labs(     x = \"PDF with no censoring and no truncation\", y = \"\",     title = \"Sex-district-stratified\", tag = \"C\"   ) +   facet_grid(district ~ sex) +   scale_x_continuous(limits = c(0, 30)) +   theme_minimal() pdf_base_figure / pdf_sex_figure / pdf_sex_district_figure +   plot_layout(heights = c(1, 1.5, 5.5))"},{"path":"https://epidist.epinowcast.org/articles/ebola.html","id":"conclusion","dir":"Articles","previous_headings":"","what":"Conclusion","title":"Using epidist to estimate delay between symptom onset and positive test for an Ebola outbreak in Sierra Leone","text":"vignette, demonstrate epidist package can used fit delay distribution models. models can stratified covariates sex district using fixed random effects. Post-processing prediction fitted models possible using tidybayes package. illustrate generating posterior expectations, posteriors linear predictors, well discrete continuous representations delay distribution.","code":""},{"path":[]},{"path":"https://epidist.epinowcast.org/articles/epidist.html","id":"data","dir":"Articles","previous_headings":"","what":"Example data","title":"Getting started with epidist","text":"Data formatted data.frame following columns use within epidist: case: unique case ID. ptime: time primary event. stime: time secondary event. simulate data format, explain two main issues observational delay data. First, use Gillepsie algorithm generate infectious disease outbreak data (Figure 1.1) stochastic compartmental model: Figure 1.1: Early epidemic, high rate growth new cases. people infected, rate growth slows. (every 50th case shown avoid -plotting.) outbreak data.frame columns case ptime. Now, generate secondary events, use lognormal distribution (Figure 1.2) delay primary secondary events: Figure 1.2: lognormal distribution skewed right. Long delay times still probability. Figure 1.3: Secondary events (green) occur delay drawn lognormal distribution (Figure 1.2). Figure 1.1, make figure easier read, every 50th case shown. obs now data.frame columns delay stime. secondary event time simply primary event time plus delay: receive data obs estimating delay distribution easy, epidist package wouldn’t need exist. However, reality, outbreak almost never receive data . First, times primary secondary events usually censored. means rather exact event times, observe event times within interval. suppose interval daily, meaning date primary secondary event, exact event time, reported (Figure 1.4): Figure 1.4: Interval censoring primary secondary event times obscures delay times. common example events reported daily aggregates. daily censoring common, epidist supports primary secondary events delay intervals. Next, outbreak usually estimating delays real time. result cases secondary event occurring time observed. called (right) truncation, biases observation process towards shorter delays: Finally, reality, ’s possible observe every case. suppose sample individuals size sample_size observed: sample size corresponds 8.7% data. Another issue, epidist currently account , sometimes secondary event might observed, primary event. example, symptom onset may reported, start infection unknown. Discarding events type leads called ascertainment biases. Whereas case equally likely appear sample , ascertainment bias cases likely appear data others. censored, truncated, sampled data, now ready try recover underlying delay distribution using epidist.","code":"outbreak <- simulate_gillespie(seed = 101) outbreak |>   filter(case %% 50 == 0) |>   ggplot(aes(x = ptime, y = case)) +   geom_point(col = \"#56B4E9\") +   labs(x = \"Primary event time (day)\", y = \"Case number\") +   theme_minimal() secondary_dist <- data.frame(mu = 1.8, sigma = 0.5) class(secondary_dist) <- c(\"lognormal_samples\", class(secondary_dist)) secondary_dist <- add_mean_sd(secondary_dist) ggplot(data.frame(x = c(0, 30)), aes(x = x)) +   geom_function(     fun = dlnorm,     args = list(       meanlog = secondary_dist[[\"mu\"]],       sdlog = secondary_dist[[\"sigma\"]]     )   ) +   theme_minimal() +   labs(     x = \"Delay between primary and secondary event (days)\",     y = \"Probability density\"   ) obs <- outbreak |>   simulate_secondary(     meanlog = secondary_dist[[\"mu\"]],     sdlog = secondary_dist[[\"sigma\"]]   ) obs |>   filter(case %% 50 == 0) |>   ggplot(aes(y = case)) +   geom_segment(     aes(x = ptime, xend = stime, y = case, yend = case), col = \"grey\"   ) +   geom_point(aes(x = ptime), col = \"#56B4E9\") +   geom_point(aes(x = stime), col = \"#009E73\") +   labs(x = \"Event time (day)\", y = \"Case number\") +   theme_minimal() all(obs$ptime + obs$delay == obs$stime) #> [1] TRUE # observe_process() should be renamed and include a \"daily\" i.e. 1 argument obs_cens <- obs |> observe_process() ggplot(obs_cens, aes(x = delay, y = delay_daily)) +   geom_point(col = \"#E69F00\") +   geom_abline(slope = 1, intercept = 0, linetype = \"dashed\", col = \"grey\") +   theme_minimal() +   coord_fixed() +   labs(x = \"Exact delay time (days)\", y = \"Censored delay time (days)\") obs_time <- 25 # filter_obs_by_obs_time() should be renamed to refer to stime obs_cens_trunc <- filter_obs_by_obs_time(obs_cens, obs_time = obs_time) sample_size <- 200 obs_cens_trunc_samp <- obs_cens_trunc |>   slice_sample(n = sample_size, replace = FALSE)"},{"path":"https://epidist.epinowcast.org/articles/epidist.html","id":"fit","dir":"Articles","previous_headings":"","what":"Fit the model and compare estimates","title":"Getting started with epidist","text":"access complete unaltered obs, simple estimate delay distribution. However, access obs_cens_trunc_samp, delay distribution observe biased (Figure 2.1) must use statistical model. Figure 2.1: histogram delays complete, retrospective data obs_cens match quite closely underlying distribution, whereas obs_cens_trunc_samp show significant systematic bias. instance extent bias caused censoring less caused right truncation. Nonetheless, always recommend [Charniga et al. (2024); Table 2] adjusting censoring present. main function use modelling called epidist1. fit model \"latent_individual\" uses latent variables time primary secondary event individual2. , first prepare data using as_latent_individual: data object now class epidist_latent_individual. Using data, now call epidist::epidist() fit model. parameters model inferred using Bayesian inference. particular, use -U-Turn Sampler (NUTS) Markov chain Monte Carlo (MCMC) algorithm via brms R package (Bürkner 2017). fit object brmsfit object containing MCMC samples parameters (Table 2.1) model. Users familiar Stan brms, can work fit directly. tool supports brms fitted model objects compatible fit. Table 2.1: parameters included model. Many parameters (e.g. swindow pwindow) called latent variables model, lengths corresponding sample_size. epidist package also provides functions make common post-processing tasks easy. example, individual predictions lognormal delay parameters can extracted using: Figure 2.2 shows lognormal delay distribution obtained using average mu sigma draws. Whereas Figure 2.1 histogram censored, truncated, sampled data substantially different underlying delay distribution, using epidist obtained much closer match truth. Figure 2.2: fitted delay distribution (pink) compared true delay distribution (black).","code":"bind_rows(   obs_cens |>     mutate(type = \"Complete, retrospective data\") |>     select(delay = delay_daily, type),   obs_cens_trunc_samp |>     mutate(type = \"Censored, truncated,\\nsampled data\") |>     select(delay = delay_daily, type) ) |>   group_by(type, delay, .drop = FALSE) |>   summarise(n = n()) |>   mutate(p = n / sum(n)) |>   ggplot() +   geom_col(     aes(x = delay, y = p, fill = type, group = type),     position = position_dodge2(preserve = \"single\")   ) +   scale_fill_manual(values = c(\"#CC79A7\", \"#0072B2\")) +   geom_function(     data = data.frame(x = c(0, 30)), aes(x = x),     fun = dlnorm,     args = list(       meanlog = secondary_dist[[\"mu\"]],       sdlog = secondary_dist[[\"sigma\"]]     ),   ) +   labs(     x = \"Delay between primary and secondary event (days)\",     y = \"Probability density\",     fill = \"\"   ) +   theme_minimal() +   theme(legend.position = \"bottom\") data <- as_latent_individual(obs_cens_trunc_samp) class(data) #> [1] \"epidist_latent_individual\" \"data.frame\" fit <- epidist(data = data, cores = 4, refresh = 0) #> Running MCMC with 4 parallel chains... #>  #> Chain 1 finished in 4.7 seconds. #> Chain 3 finished in 4.8 seconds. #> Chain 2 finished in 4.9 seconds. #> Chain 4 finished in 4.9 seconds. #>  #> All 4 chains finished successfully. #> Mean chain execution time: 4.8 seconds. #> Total execution time: 5.0 seconds. pars <- fit$fit@par_dims |>   map(.f = function(x) if (identical(x, integer(0))) return(1) else return(x))  data.frame(\"Parameter\" = names(pars), \"Length\" = unlist(pars)) |>   gt() |>   tab_caption(\"All of the parameters that are included in the model. Many of these parameters (e.g. swindow and pwindow) the so called latent variables in the model, and have lengths corresponding to the sample_size.\") pred <- predict_delay_parameters(fit) ggplot() +   geom_function(     data = data.frame(x = c(0, 30)),     aes(x = x),     fun = dlnorm,     args = list(       meanlog = secondary_dist[[\"mu\"]],       sdlog = secondary_dist[[\"sigma\"]]     )   ) +   geom_function(     data = data.frame(x = c(0, 30)),     aes(x = x), fun = dlnorm,     args = list(       meanlog = mean(pred$mu),       sdlog = mean(pred$sigma)     ),     col = \"#CC79A7\"   ) +   labs(     x = \"Delay between primary and secondary event (days)\",     y = \"Probability density\"   ) +   theme_minimal()"},{"path":[]},{"path":"https://epidist.epinowcast.org/articles/faq.html","id":"i-would-like-to-work-with-the-samples-output","dir":"Articles","previous_headings":"","what":"I would like to work with the samples output","title":"Frequently asked questions and tips","text":"output call epidist compatible typical Stan workflows. recommend use posterior package working samples MCMC sampling algorithms. example, function posterior::as_draws_df() may used obtain dataframe MCMC draws specified parameters.","code":"library(posterior) draws <- as_draws_df(fit, variable = c(\"Intercept\", \"Intercept_sigma\")) head(draws) ## # A draws_df: 6 iterations, 1 chains, and 2 variables ##   Intercept Intercept_sigma ## 1       1.7            0.46 ## 2       1.8            0.43 ## 3       1.8            0.48 ## 4       1.7            0.44 ## 5       1.7            0.47 ## 6       1.7            0.46 ## # ... hidden reserved variables {'.chain', '.iteration', '.draw'}"},{"path":"https://epidist.epinowcast.org/articles/faq.html","id":"how-can-i-assess-if-sampling-has-converged","dir":"Articles","previous_headings":"","what":"How can I assess if sampling has converged?","title":"Frequently asked questions and tips","text":"output call epidist compatible typical Stan workflows. recommend use bayesplot package sampling diagnostic plots. example, function bayesplot::mcmc_trace() can used produce traceplots specified parameters.","code":"library(bayesplot) mcmc_trace(fit, pars = c(\"Intercept\", \"Intercept_sigma\"))"},{"path":"https://epidist.epinowcast.org/articles/faq.html","id":"id-like-to-run-a-simulation-study","dir":"Articles","previous_headings":"","what":"I’d like to run a simulation study","title":"Frequently asked questions and tips","text":"recommend use purrr package running many epidist models, example part simulation study. particularly highlight two functions might useful: purrr::map() (similar functions) iterating list inputs. purrr::safely() ensures function called “always succeeds”. words, error captured output, rather ending computation (potentially disrupting call purrr::map()). example use functions, look epidist-paper repository containing code Park et al. (2024). (Note codebase, use map part targets pipeline.)","code":""},{"path":"https://epidist.epinowcast.org/articles/faq.html","id":"how-did-you-choose-the-default-priors-for-epidist","dir":"Articles","previous_headings":"","what":"How did you choose the default priors for epidist?","title":"Frequently asked questions and tips","text":"brms provides default priors parameters. However, priors make sense context application. Instead, used prior predictive checking set epidist-specific default priors produce epidemiological delay distribution mean standard deviation parameters reasonable range. example, brms::lognormal() latent individual model, suggest following prior distributions brms mu sigma intercept parameters: (Note functions epidist_family epidist_prior mostly internal use!) distributions delay distribution mean standard deviation parameters prior distributions imply:","code":"family <- \"lognormal\"  epidist_family <- epidist_family(data, family) epidist_formula <- epidist_formula(   data, family = epidist_family, formula = bf(mu ~ 1, sigma ~ 1) )  # NULL here means no replacing priors from the user! epidist_prior <- epidist_prior(   data = data,   family = family,   formula = epidist_formula,   prior = NULL )  epidist_prior ##              prior     class coef group resp  dpar nlpar lb ub source ##       normal(1, 1) Intercept                                   family ##  normal(-0.7, 0.4) Intercept                 sigma             family set.seed(1) fit_ppc <- epidist(   data = data,   formula = bf(mu ~ 1, sigma ~ 1),   family = \"lognormal\",   sample_prior = \"only\",   seed = 1 ) pred <- predict_delay_parameters(fit_ppc)  pred |>   as.data.frame() |>   pivot_longer(     cols = c(\"mu\", \"sigma\", \"mean\", \"sd\"),     names_to = \"parameter\",     values_to = \"value\"   ) |>   filter(parameter %in% c(\"mean\", \"sd\")) |>   ggplot(aes(x = value, y = after_stat(density))) +   geom_histogram() +   facet_wrap(. ~ parameter, scales = \"free\") +   labs(x = \"\", y = \"Density\") +   theme_minimal() +   scale_x_log10(labels = comma) ## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. quantile(pred$mean, c(0.01, 0.1, 0.25, 0.5, 0.75, 0.9, 0.99)) ##         1%        10%        25%        50%        75%        90%        99%  ##  0.3558084  1.0303217  1.9577108  3.7682459  7.5819517 14.5496488 46.0359735 quantile(pred$sd, c(0.01, 0.1, 0.25, 0.5, 0.75, 0.9, 0.99)) ##          1%         10%         25%         50%         75%         90%  ##  0.03582676  0.37495328  1.01121384  2.72009640  7.13444186 18.28852812  ##         99%  ## 94.99318781"},{"path":"https://epidist.epinowcast.org/articles/faq.html","id":"what-do-the-parameters-in-my-model-output-correspond-to","dir":"Articles","previous_headings":"","what":"What do the parameters in my model output correspond to?","title":"Frequently asked questions and tips","text":"epidist package uses brms fit models. means model output include brms-style names parameters. , provide table giving correspondence distributional parameter names used brms used standard R functions common likelihood families. Note families brms parameterised measure centrality mu first parameter. parameter necessarily correspond mean: hence provision function add_mean_sd within epidist add columns containing natural scale mean standard deviation data.frame draws.","code":""},{"path":[]},{"path":"https://epidist.epinowcast.org/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Sang Woo Park. Author. Sam Abbott. Author. Adam Howes. Author, maintainer.","code":""},{"path":"https://epidist.epinowcast.org/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Park S, Sam Abbott, Adam Howes (NULL). epidist: Estimate epidemiological delay distributions infectious diseases. doi:10.5281/zenodo.5637165.","code":"@Manual{,   title = {epidist: Estimate epidemiological delay distributions for infectious diseases},   author = {Sang Woo Park and {Sam Abbott} and {Adam Howes}},   year = {NULL},   doi = {10.5281/zenodo.5637165}, }"},{"path":"https://epidist.epinowcast.org/index.html","id":"estimate-epidemiological-delay-distributions-for-infectious-diseases","dir":"","previous_headings":"","what":"Estimate epidemiological delay distributions for infectious diseases","title":"Estimate epidemiological delay distributions for infectious diseases","text":"Warning: package prototype active development. Breaking changes likely.","code":""},{"path":"https://epidist.epinowcast.org/index.html","id":"summary","dir":"","previous_headings":"","what":"Summary","title":"Estimate epidemiological delay distributions for infectious diseases","text":"Understanding accurately estimating epidemiological delay distributions important public health policy. estimates directly influence epidemic situational awareness, control strategies, resource allocation. package, provide methods address key challenges estimating distributions, including truncation, interval censoring, dynamical biases. Despite importance, issues frequently overlooked, often resulting biased conclusions.","code":""},{"path":"https://epidist.epinowcast.org/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Estimate epidemiological delay distributions for infectious diseases","text":"can use remotes package install development version Github (warning! version may contain breaking changes /bugs): Similarly, can install historical versions specifying release tag (e.g. installs 0.1.0): Note: can also use last approach install specific commit needed, e.g. want try specific unreleased feature, absolute latest developmental version. wish model fitting nowcasting, need install CmdStan, also entails suitable C++ toolchain setup. recommend using cmdstanr package. Stan team provides instructions Getting started cmdstanr vignette, details support package site, brief version : Note: can speed CmdStan installation using cores argument. installing particular version epidist, may also need install past version CmdStan, can version argument.","code":"remotes::install_github(   \"epinowcast/epidist\", dependencies = TRUE ) remotes::install_github(   \"epinowcast/epidist\", dependencies = TRUE, ref = \"v0.2.0\" ) # if you not yet installed `epinowcast`, or you installed it without `Suggests` dependencies install.packages(\"cmdstanr\", repos = c(\"https://mc-stan.org/r-packages/\", getOption(\"repos\"))) # once `cmdstanr` is installed: cmdstanr::install_cmdstan()"},{"path":"https://epidist.epinowcast.org/index.html","id":"resources","dir":"","previous_headings":"","what":"Resources","title":"Estimate epidemiological delay distributions for infectious diseases","text":"organisation website includes links resources, guest posts, seminar schedule upcoming past recordings. community forum areas question answer considering new methods tools, among others. generally interested real-time analysis infectious disease, may find useful even use epidist.","code":""},{"path":"https://epidist.epinowcast.org/index.html","id":"contributing","dir":"","previous_headings":"","what":"Contributing","title":"Estimate epidemiological delay distributions for infectious diseases","text":"welcome contributions new contributors! particularly appreciate help identifying identified issues. Please check add issues, /add pull request.","code":""},{"path":"https://epidist.epinowcast.org/index.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Estimate epidemiological delay distributions for infectious diseases","text":"making use methodology methodology based, please cite relevant papers model outline. use epidist work, please consider citing citation(\"epidist\").","code":""},{"path":"https://epidist.epinowcast.org/index.html","id":"contributors","dir":"","previous_headings":"","what":"Contributors","title":"Estimate epidemiological delay distributions for infectious diseases","text":"contributions project gratefully acknowledged using allcontributors package following -contributors specification. Contributions kind welcome!","code":""},{"path":"https://epidist.epinowcast.org/index.html","id":"code","dir":"","previous_headings":"Contributors","what":"Code","title":"Estimate epidemiological delay distributions for infectious diseases","text":"seabbs, athowes, parksw3, damonbayer, medewitt","code":""},{"path":"https://epidist.epinowcast.org/index.html","id":"issue-authors","dir":"","previous_headings":"Contributors","what":"Issue Authors","title":"Estimate epidemiological delay distributions for infectious diseases","text":"kgostic, TimTaylor, jamesmbaazam","code":""},{"path":"https://epidist.epinowcast.org/index.html","id":"issue-contributors","dir":"","previous_headings":"Contributors","what":"Issue Contributors","title":"Estimate epidemiological delay distributions for infectious diseases","text":"pearsonca, sbfnk, SamuelBrand1","code":""},{"path":"https://epidist.epinowcast.org/reference/add_mean_sd.default.html","id":null,"dir":"Reference","previous_headings":"","what":"Default method for add natural scale parameters — add_mean_sd.default","title":"Default method for add natural scale parameters — add_mean_sd.default","text":"Default method add natural scale parameters","code":""},{"path":"https://epidist.epinowcast.org/reference/add_mean_sd.default.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Default method for add natural scale parameters — add_mean_sd.default","text":"","code":"# Default S3 method add_mean_sd(data, ...)"},{"path":"https://epidist.epinowcast.org/reference/add_mean_sd.default.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Default method for add natural scale parameters — add_mean_sd.default","text":"data dataframe distributional parameters ... Additional arguments method.","code":""},{"path":[]},{"path":"https://epidist.epinowcast.org/reference/add_mean_sd.gamma_samples.html","id":null,"dir":"Reference","previous_headings":"","what":"Add natural scale mean and standard deviation parameters for a latent gamma model — add_mean_sd.gamma_samples","title":"Add natural scale mean and standard deviation parameters for a latent gamma model — add_mean_sd.gamma_samples","text":", mu shape distributional parameters brms.","code":""},{"path":"https://epidist.epinowcast.org/reference/add_mean_sd.gamma_samples.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add natural scale mean and standard deviation parameters for a latent gamma model — add_mean_sd.gamma_samples","text":"","code":"# S3 method for class 'gamma_samples' add_mean_sd(data, ...)"},{"path":"https://epidist.epinowcast.org/reference/add_mean_sd.gamma_samples.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add natural scale mean and standard deviation parameters for a latent gamma model — add_mean_sd.gamma_samples","text":"data dataframe distributional parameters ... Additional arguments method.","code":""},{"path":[]},{"path":"https://epidist.epinowcast.org/reference/add_mean_sd.html","id":null,"dir":"Reference","previous_headings":"","what":"Add natural scale mean and standard deviation parameters — add_mean_sd","title":"Add natural scale mean and standard deviation parameters — add_mean_sd","text":"Add natural scale mean standard deviation parameters","code":""},{"path":"https://epidist.epinowcast.org/reference/add_mean_sd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add natural scale mean and standard deviation parameters — add_mean_sd","text":"","code":"add_mean_sd(data, ...)"},{"path":"https://epidist.epinowcast.org/reference/add_mean_sd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add natural scale mean and standard deviation parameters — add_mean_sd","text":"data dataframe distributional parameters ... Additional arguments method.","code":""},{"path":[]},{"path":"https://epidist.epinowcast.org/reference/add_mean_sd.lognormal_samples.html","id":null,"dir":"Reference","previous_headings":"","what":"Add natural scale mean and standard deviation parameters for a latent lognormal model — add_mean_sd.lognormal_samples","title":"Add natural scale mean and standard deviation parameters for a latent lognormal model — add_mean_sd.lognormal_samples","text":"Note input parameters mu sigma, corresponding distributional parameters used brms lognormal family.","code":""},{"path":"https://epidist.epinowcast.org/reference/add_mean_sd.lognormal_samples.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add natural scale mean and standard deviation parameters for a latent lognormal model — add_mean_sd.lognormal_samples","text":"","code":"# S3 method for class 'lognormal_samples' add_mean_sd(data, ...)"},{"path":"https://epidist.epinowcast.org/reference/add_mean_sd.lognormal_samples.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add natural scale mean and standard deviation parameters for a latent lognormal model — add_mean_sd.lognormal_samples","text":"data dataframe distributional parameters ... Additional arguments method.","code":""},{"path":[]},{"path":"https://epidist.epinowcast.org/reference/as_latent_individual.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare latent individual model — as_latent_individual","title":"Prepare latent individual model — as_latent_individual","text":"function prepares data use latent individual model. adding columns used model data object provided. , data must already columns case number (integer), (positive, numeric) upper lower bounds primary secondary event times, well (positive, numeric) time observation takes place. output function epidist_latent_individual class object, may passed epidist() perform inference model.","code":""},{"path":"https://epidist.epinowcast.org/reference/as_latent_individual.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare latent individual model — as_latent_individual","text":"","code":"as_latent_individual(data)  # S3 method for class 'data.frame' as_latent_individual(data)"},{"path":"https://epidist.epinowcast.org/reference/as_latent_individual.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare latent individual model — as_latent_individual","text":"data data.frame containing line list data","code":""},{"path":[]},{"path":"https://epidist.epinowcast.org/reference/dot-floor_mult.html","id":null,"dir":"Reference","previous_headings":"","what":"Round to the nearest multiple — .floor_mult","title":"Round to the nearest multiple — .floor_mult","text":"function rounds input x nearest multiple number f. example, f = 0.2 x = 1.5 output 1.4. f = 1 floor_mult behaves floor. f = 0 x returned.","code":""},{"path":"https://epidist.epinowcast.org/reference/dot-floor_mult.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Round to the nearest multiple — .floor_mult","text":"","code":".floor_mult(x, f = 1)"},{"path":"https://epidist.epinowcast.org/reference/dot-floor_mult.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Round to the nearest multiple — .floor_mult","text":"x number rounded f positive number specifying multiple rounded ","code":""},{"path":"https://epidist.epinowcast.org/reference/dot-replace_prior.html","id":null,"dir":"Reference","previous_headings":"","what":"Replace brms prior distributions — .replace_prior","title":"Replace brms prior distributions — .replace_prior","text":"function takes old_prior replaces prior distributions contained corresponding prior distribution new_prior. prior distribution new_prior match old_prior function error give name new prior distribution match.","code":""},{"path":"https://epidist.epinowcast.org/reference/dot-replace_prior.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Replace brms prior distributions — .replace_prior","text":"","code":".replace_prior(old_prior, new_prior)"},{"path":"https://epidist.epinowcast.org/reference/dot-replace_prior.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Replace brms prior distributions — .replace_prior","text":"old_prior One prior distributions class brmsprior new_prior One prior distributions class brmsprior","code":""},{"path":"https://epidist.epinowcast.org/reference/dot-stan_chunk.html","id":null,"dir":"Reference","previous_headings":"","what":"Read in an epidist Stan code chunk — .stan_chunk","title":"Read in an epidist Stan code chunk — .stan_chunk","text":"function used obtain Stan code chunks stan/ folder epidist package. used within epidist_stancode() function.","code":""},{"path":"https://epidist.epinowcast.org/reference/dot-stan_chunk.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read in an epidist Stan code chunk — .stan_chunk","text":"","code":".stan_chunk(path)"},{"path":"https://epidist.epinowcast.org/reference/dot-stan_chunk.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read in an epidist Stan code chunk — .stan_chunk","text":"path path within stan/ folder installed epidist package Stan code chunk interest.","code":""},{"path":"https://epidist.epinowcast.org/reference/dot-stan_chunk.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read in an epidist Stan code chunk — .stan_chunk","text":"character string containing Stan code chunk interest.","code":""},{"path":"https://epidist.epinowcast.org/reference/dot-version_stanvar.html","id":null,"dir":"Reference","previous_headings":"","what":"Label a epidist Stan model with a version indicator — .version_stanvar","title":"Label a epidist Stan model with a version indicator — .version_stanvar","text":"function used within epidist_stancode() label generated Stan code version epidist used. view full Stan code particular epidist model, recommend use brms::make_stancode().","code":""},{"path":"https://epidist.epinowcast.org/reference/dot-version_stanvar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Label a epidist Stan model with a version indicator — .version_stanvar","text":"","code":".version_stanvar()"},{"path":"https://epidist.epinowcast.org/reference/dot-version_stanvar.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Label a epidist Stan model with a version indicator — .version_stanvar","text":"brms Stan chunk containing epidist package version used build Stan code.","code":""},{"path":"https://epidist.epinowcast.org/reference/epidist-package.html","id":null,"dir":"Reference","previous_headings":"","what":"epidist: Estimate epidemiological delay distributions for infectious diseases — epidist-package","title":"epidist: Estimate epidemiological delay distributions for infectious diseases — epidist-package","text":"Understanding accurately estimating epidemiological delay distributions important public health policy. estimates directly influence epidemic situational awareness, control strategies, resource allocation. package, provide methods address key challenges estimating distributions, including truncation, interval censoring, dynamical biases. Despite importance, issues frequently overlooked, often resulting biased conclusions.","code":""},{"path":[]},{"path":"https://epidist.epinowcast.org/reference/epidist-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"epidist: Estimate epidemiological delay distributions for infectious diseases — epidist-package","text":"Maintainer: Adam Howes adamthowes@gmail.com (ORCID) Authors: Sang Woo Park swp2@princeton.edu (ORCID) Sam Abbott contact@samabbott.co.uk (ORCID)","code":""},{"path":"https://epidist.epinowcast.org/reference/epidist.default.html","id":null,"dir":"Reference","previous_headings":"","what":"Default method used for interface using brms — epidist.default","title":"Default method used for interface using brms — epidist.default","text":"Default method used interface using brms","code":""},{"path":"https://epidist.epinowcast.org/reference/epidist.default.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Default method used for interface using brms — epidist.default","text":"","code":"# Default S3 method epidist(   data,   formula = brms::bf(mu ~ 1),   family = \"lognormal\",   prior = NULL,   backend = \"cmdstanr\",   fn = brms::brm,   ... )"},{"path":"https://epidist.epinowcast.org/reference/epidist.default.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Default method used for interface using brms — epidist.default","text":"data data.frame used modelling. formula formula object created using brms::bf. formula must provided distributional parameter mu common brms families. Optionally, formulas may also provided additional distributional parameters. family description response distribution link function used model. Every family function link argument allowing users specify link function applied response variable. specified, default links used. details supported families see brmsfamily(). prior One brmsprior objects created brms::set_prior() related functions. priors passed epidist_prior() prior argument. recommend caution use prior predictive checks specifying prior distributions. backend Character string naming package use backend fitting Stan model. Options \"rstan\" \"cmdstanr\" (default). option passed directly fn. fn internal function called. default brms::brm, performs inference specified model. options brms::make_stancode, returns Stan code specified model, brms::make_standata returns data passed Stan. options may useful model debugging extensions. ... Additional arguments method.","code":""},{"path":[]},{"path":"https://epidist.epinowcast.org/reference/epidist.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit epidemiological delay distributions using a brms interface — epidist","title":"Fit epidemiological delay distributions using a brms interface — epidist","text":"Fit epidemiological delay distributions using brms interface","code":""},{"path":"https://epidist.epinowcast.org/reference/epidist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit epidemiological delay distributions using a brms interface — epidist","text":"","code":"epidist(data, formula, family, prior, backend, fn, ...)"},{"path":"https://epidist.epinowcast.org/reference/epidist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit epidemiological delay distributions using a brms interface — epidist","text":"data data.frame used modelling. formula formula object created using brms::bf. formula must provided distributional parameter mu common brms families. Optionally, formulas may also provided additional distributional parameters. family description response distribution link function used model. Every family function link argument allowing users specify link function applied response variable. specified, default links used. details supported families see brmsfamily(). prior One brmsprior objects created brms::set_prior() related functions. priors passed epidist_prior() prior argument. recommend caution use prior predictive checks specifying prior distributions. backend Character string naming package use backend fitting Stan model. Options \"rstan\" \"cmdstanr\" (default). option passed directly fn. fn internal function called. default brms::brm, performs inference specified model. options brms::make_stancode, returns Stan code specified model, brms::make_standata returns data passed Stan. options may useful model debugging extensions. ... Additional arguments method.","code":""},{"path":[]},{"path":"https://epidist.epinowcast.org/reference/epidist_diagnostics.html","id":null,"dir":"Reference","previous_headings":"","what":"Diagnostics for epidist_fit models — epidist_diagnostics","title":"Diagnostics for epidist_fit models — epidist_diagnostics","text":"function computes diagnostics assess quality fitted model. fitting algorithm used \"sampling\" (HMC) output epidist_diagnostics data.frame containing: time: total time taken fit chains samples: total number samples across chains max_rhat: highest value Gelman-Rubin statistic divergent_transitions: total number divergent transitions per_divergent_transitions: proportion samples divergent transitions max_treedepth: highest value treedepth HMC parameter no_at_max_treedepth: number samples attained max_treedepth per_at_max_treedepth: proportion samples attained max_treedepth fitting algorithm \"sampling\" (see brms::brm() possible algorithms) diagnostics yet implemented.","code":""},{"path":"https://epidist.epinowcast.org/reference/epidist_diagnostics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Diagnostics for epidist_fit models — epidist_diagnostics","text":"","code":"epidist_diagnostics(fit)"},{"path":"https://epidist.epinowcast.org/reference/epidist_diagnostics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Diagnostics for epidist_fit models — epidist_diagnostics","text":"fit fitted model class epidist_fit","code":""},{"path":"https://epidist.epinowcast.org/reference/epidist_family.default.html","id":null,"dir":"Reference","previous_headings":"","what":"Default method for defining a model specific family — epidist_family.default","title":"Default method for defining a model specific family — epidist_family.default","text":"Default method defining model specific family","code":""},{"path":"https://epidist.epinowcast.org/reference/epidist_family.default.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Default method for defining a model specific family — epidist_family.default","text":"","code":"# Default S3 method epidist_family(data, ...)"},{"path":"https://epidist.epinowcast.org/reference/epidist_family.default.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Default method for defining a model specific family — epidist_family.default","text":"data data.frame used modelling. ... Additional arguments passed method.","code":""},{"path":[]},{"path":"https://epidist.epinowcast.org/reference/epidist_family.epidist_latent_individual.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if data has the epidist_latent_individual class — epidist_family.epidist_latent_individual","title":"Check if data has the epidist_latent_individual class — epidist_family.epidist_latent_individual","text":"Check data epidist_latent_individual class","code":""},{"path":"https://epidist.epinowcast.org/reference/epidist_family.epidist_latent_individual.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if data has the epidist_latent_individual class — epidist_family.epidist_latent_individual","text":"","code":"# S3 method for class 'epidist_latent_individual' epidist_family(data, family = \"lognormal\", ...)"},{"path":"https://epidist.epinowcast.org/reference/epidist_family.epidist_latent_individual.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if data has the epidist_latent_individual class — epidist_family.epidist_latent_individual","text":"data data.frame containing line list data family Output call brms::brmsfamily() ... ...","code":""},{"path":[]},{"path":"https://epidist.epinowcast.org/reference/epidist_family.html","id":null,"dir":"Reference","previous_headings":"","what":"Define model specific family — epidist_family","title":"Define model specific family — epidist_family","text":"function used within epidist() create model specific custom brms family object. object passed brms. unlikely user need function, export nonetheless transparent exactly happening inside call epidist().","code":""},{"path":"https://epidist.epinowcast.org/reference/epidist_family.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Define model specific family — epidist_family","text":"","code":"epidist_family(data, ...)"},{"path":"https://epidist.epinowcast.org/reference/epidist_family.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Define model specific family — epidist_family","text":"data data.frame used modelling. ... Additional arguments passed method.","code":""},{"path":[]},{"path":"https://epidist.epinowcast.org/reference/epidist_family_prior.default.html","id":null,"dir":"Reference","previous_headings":"","what":"Default family specific prior distributions — epidist_family_prior.default","title":"Default family specific prior distributions — epidist_family_prior.default","text":"default, return family specific prior distributions.","code":""},{"path":"https://epidist.epinowcast.org/reference/epidist_family_prior.default.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Default family specific prior distributions — epidist_family_prior.default","text":"","code":"# Default S3 method epidist_family_prior(family, formula, ...)"},{"path":"https://epidist.epinowcast.org/reference/epidist_family_prior.default.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Default family specific prior distributions — epidist_family_prior.default","text":"family ... formula ... ... ...","code":""},{"path":[]},{"path":"https://epidist.epinowcast.org/reference/epidist_family_prior.html","id":null,"dir":"Reference","previous_headings":"","what":"Family specific prior distributions — epidist_family_prior","title":"Family specific prior distributions — epidist_family_prior","text":"function contains brms prior distributions specific particular likelihood families e.g. brms::lognormal().","code":""},{"path":"https://epidist.epinowcast.org/reference/epidist_family_prior.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Family specific prior distributions — epidist_family_prior","text":"","code":"epidist_family_prior(family, ...)"},{"path":"https://epidist.epinowcast.org/reference/epidist_family_prior.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Family specific prior distributions — epidist_family_prior","text":"family ... ... ...","code":""},{"path":[]},{"path":"https://epidist.epinowcast.org/reference/epidist_family_prior.lognormal.html","id":null,"dir":"Reference","previous_headings":"","what":"Family specific prior distributions for the lognormal family — epidist_family_prior.lognormal","title":"Family specific prior distributions for the lognormal family — epidist_family_prior.lognormal","text":"suggest priors overwrite brms defaults lognormal family.","code":""},{"path":"https://epidist.epinowcast.org/reference/epidist_family_prior.lognormal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Family specific prior distributions for the lognormal family — epidist_family_prior.lognormal","text":"","code":"# S3 method for class 'lognormal' epidist_family_prior(family, formula, ...)"},{"path":"https://epidist.epinowcast.org/reference/epidist_family_prior.lognormal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Family specific prior distributions for the lognormal family — epidist_family_prior.lognormal","text":"family ... formula ... ... ...","code":""},{"path":[]},{"path":"https://epidist.epinowcast.org/reference/epidist_formula.default.html","id":null,"dir":"Reference","previous_headings":"","what":"Default method for defining a model specific formula — epidist_formula.default","title":"Default method for defining a model specific formula — epidist_formula.default","text":"Default method defining model specific formula","code":""},{"path":"https://epidist.epinowcast.org/reference/epidist_formula.default.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Default method for defining a model specific formula — epidist_formula.default","text":"","code":"# Default S3 method epidist_formula(data, ...)"},{"path":"https://epidist.epinowcast.org/reference/epidist_formula.default.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Default method for defining a model specific formula — epidist_formula.default","text":"data data.frame used modelling. ... Additional arguments passed method.","code":""},{"path":[]},{"path":"https://epidist.epinowcast.org/reference/epidist_formula.epidist_latent_individual.html","id":null,"dir":"Reference","previous_headings":"","what":"Define a formula for the latent_individual model — epidist_formula.epidist_latent_individual","title":"Define a formula for the latent_individual model — epidist_formula.epidist_latent_individual","text":"Define formula latent_individual model","code":""},{"path":"https://epidist.epinowcast.org/reference/epidist_formula.epidist_latent_individual.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Define a formula for the latent_individual model — epidist_formula.epidist_latent_individual","text":"","code":"# S3 method for class 'epidist_latent_individual' epidist_formula(data, family, formula, ...)"},{"path":"https://epidist.epinowcast.org/reference/epidist_formula.epidist_latent_individual.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Define a formula for the latent_individual model — epidist_formula.epidist_latent_individual","text":"data ... family output epidist_family() formula produced brms::brmsformula() ... ...","code":""},{"path":[]},{"path":"https://epidist.epinowcast.org/reference/epidist_formula.html","id":null,"dir":"Reference","previous_headings":"","what":"Define a model specific formula — epidist_formula","title":"Define a model specific formula — epidist_formula","text":"function used within epidist() create formula object passed brms. unlikely user need function, export nonetheless transparent exactly happening inside call epidist().","code":""},{"path":"https://epidist.epinowcast.org/reference/epidist_formula.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Define a model specific formula — epidist_formula","text":"","code":"epidist_formula(data, ...)"},{"path":"https://epidist.epinowcast.org/reference/epidist_formula.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Define a model specific formula — epidist_formula","text":"data data.frame used modelling. ... Additional arguments passed method.","code":""},{"path":[]},{"path":"https://epidist.epinowcast.org/reference/epidist_model_prior.default.html","id":null,"dir":"Reference","previous_headings":"","what":"Default model specific prior distributions — epidist_model_prior.default","title":"Default model specific prior distributions — epidist_model_prior.default","text":"default, return model specific prior distributions.","code":""},{"path":"https://epidist.epinowcast.org/reference/epidist_model_prior.default.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Default model specific prior distributions — epidist_model_prior.default","text":"","code":"# Default S3 method epidist_model_prior(data, formula, ...)"},{"path":"https://epidist.epinowcast.org/reference/epidist_model_prior.default.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Default model specific prior distributions — epidist_model_prior.default","text":"data ... formula ... ... ...","code":""},{"path":[]},{"path":"https://epidist.epinowcast.org/reference/epidist_model_prior.html","id":null,"dir":"Reference","previous_headings":"","what":"Model specific prior distributions — epidist_model_prior","title":"Model specific prior distributions — epidist_model_prior","text":"function contains brms prior distributions specific particular epidist models e.g. latent_lognormal model.","code":""},{"path":"https://epidist.epinowcast.org/reference/epidist_model_prior.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Model specific prior distributions — epidist_model_prior","text":"","code":"epidist_model_prior(data, ...)"},{"path":"https://epidist.epinowcast.org/reference/epidist_model_prior.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Model specific prior distributions — epidist_model_prior","text":"data ... ... ...","code":""},{"path":[]},{"path":"https://epidist.epinowcast.org/reference/epidist_prior.html","id":null,"dir":"Reference","previous_headings":"","what":"Define prior distributions using brms defaults, model specific priors, family specific priors, and user provided priors — epidist_prior","title":"Define prior distributions using brms defaults, model specific priors, family specific priors, and user provided priors — epidist_prior","text":"function obtains brms default prior distributions particular model, replaces prior distributions using: Model specific prior distributions epidist_model_prior() Family specific prior distributions epidist_family_prior() User provided prior distributions element list overwrites previous elements, user provided prior distribution highest priority.","code":""},{"path":"https://epidist.epinowcast.org/reference/epidist_prior.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Define prior distributions using brms defaults, model specific priors, family specific priors, and user provided priors — epidist_prior","text":"","code":"epidist_prior(data, family, formula, prior)"},{"path":"https://epidist.epinowcast.org/reference/epidist_prior.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Define prior distributions using brms defaults, model specific priors, family specific priors, and user provided priors — epidist_prior","text":"data ... family ... formula ... prior ...","code":""},{"path":[]},{"path":"https://epidist.epinowcast.org/reference/epidist_stancode.default.html","id":null,"dir":"Reference","previous_headings":"","what":"Default method for defining model specific Stan code — epidist_stancode.default","title":"Default method for defining model specific Stan code — epidist_stancode.default","text":"Default method defining model specific Stan code","code":""},{"path":"https://epidist.epinowcast.org/reference/epidist_stancode.default.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Default method for defining model specific Stan code — epidist_stancode.default","text":"","code":"# Default S3 method epidist_stancode(data, ...)"},{"path":"https://epidist.epinowcast.org/reference/epidist_stancode.default.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Default method for defining model specific Stan code — epidist_stancode.default","text":"data data.frame used modelling. ... Additional arguments passed method.","code":""},{"path":[]},{"path":"https://epidist.epinowcast.org/reference/epidist_stancode.html","id":null,"dir":"Reference","previous_headings":"","what":"Define model specific Stan code — epidist_stancode","title":"Define model specific Stan code — epidist_stancode","text":"function used within epidist() create custom Stan code injected brms via stanvars argument. unlikely user need function, export nonetheless transparent exactly happening inside call epidist().","code":""},{"path":"https://epidist.epinowcast.org/reference/epidist_stancode.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Define model specific Stan code — epidist_stancode","text":"","code":"epidist_stancode(data, ...)"},{"path":"https://epidist.epinowcast.org/reference/epidist_stancode.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Define model specific Stan code — epidist_stancode","text":"data data.frame used modelling. ... Additional arguments passed method.","code":""},{"path":[]},{"path":"https://epidist.epinowcast.org/reference/epidist_validate.default.html","id":null,"dir":"Reference","previous_headings":"","what":"Default method for data validation — epidist_validate.default","title":"Default method for data validation — epidist_validate.default","text":"Default method data validation","code":""},{"path":"https://epidist.epinowcast.org/reference/epidist_validate.default.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Default method for data validation — epidist_validate.default","text":"","code":"# Default S3 method epidist_validate(data, ...)"},{"path":"https://epidist.epinowcast.org/reference/epidist_validate.default.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Default method for data validation — epidist_validate.default","text":"data data.frame used modelling. ... Additional arguments passed method.","code":""},{"path":[]},{"path":"https://epidist.epinowcast.org/reference/epidist_validate.epidist_latent_individual.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate latent individual model data — epidist_validate.epidist_latent_individual","title":"Validate latent individual model data — epidist_validate.epidist_latent_individual","text":"function checks whether provided data object suitable running latent individual model. well making sure is_latent_individual() true, also checks data data.frame correct columns.","code":""},{"path":"https://epidist.epinowcast.org/reference/epidist_validate.epidist_latent_individual.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate latent individual model data — epidist_validate.epidist_latent_individual","text":"","code":"# S3 method for class 'epidist_latent_individual' epidist_validate(data)"},{"path":"https://epidist.epinowcast.org/reference/epidist_validate.epidist_latent_individual.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate latent individual model data — epidist_validate.epidist_latent_individual","text":"data data.frame containing line list data","code":""},{"path":[]},{"path":"https://epidist.epinowcast.org/reference/epidist_validate.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate a data object for use with epidist() — epidist_validate","title":"Validate a data object for use with epidist() — epidist_validate","text":"function validates provided data suitable run particular epidist model. may include checking class data, contains suitable columns.","code":""},{"path":"https://epidist.epinowcast.org/reference/epidist_validate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate a data object for use with epidist() — epidist_validate","text":"","code":"epidist_validate(data)"},{"path":"https://epidist.epinowcast.org/reference/epidist_validate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate a data object for use with epidist() — epidist_validate","text":"data data.frame used modelling.","code":""},{"path":[]},{"path":"https://epidist.epinowcast.org/reference/filter_obs_by_obs_time.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter observations based on a observation time of secondary events — filter_obs_by_obs_time","title":"Filter observations based on a observation time of secondary events — filter_obs_by_obs_time","text":"Filter observations based observation time secondary events","code":""},{"path":"https://epidist.epinowcast.org/reference/filter_obs_by_obs_time.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter observations based on a observation time of secondary events — filter_obs_by_obs_time","text":"","code":"filter_obs_by_obs_time(linelist, obs_time)"},{"path":"https://epidist.epinowcast.org/reference/filter_obs_by_obs_time.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter observations based on a observation time of secondary events — filter_obs_by_obs_time","text":"linelist ... obs_time ...","code":""},{"path":[]},{"path":"https://epidist.epinowcast.org/reference/filter_obs_by_ptime.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter observations based on the observation time of primary events — filter_obs_by_ptime","title":"Filter observations based on the observation time of primary events — filter_obs_by_ptime","text":"Filter observations based observation time primary events","code":""},{"path":"https://epidist.epinowcast.org/reference/filter_obs_by_ptime.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter observations based on the observation time of primary events — filter_obs_by_ptime","text":"","code":"filter_obs_by_ptime(   linelist,   obs_time,   obs_at = c(\"obs_secondary\", \"max_secondary\") )"},{"path":"https://epidist.epinowcast.org/reference/filter_obs_by_ptime.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter observations based on the observation time of primary events — filter_obs_by_ptime","text":"linelist ... obs_time ... obs_at ...","code":""},{"path":[]},{"path":"https://epidist.epinowcast.org/reference/is_latent_individual.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if data has the epidist_latent_individual class — is_latent_individual","title":"Check if data has the epidist_latent_individual class — is_latent_individual","text":"Check data epidist_latent_individual class","code":""},{"path":"https://epidist.epinowcast.org/reference/is_latent_individual.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if data has the epidist_latent_individual class — is_latent_individual","text":"","code":"is_latent_individual(data)"},{"path":"https://epidist.epinowcast.org/reference/is_latent_individual.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if data has the epidist_latent_individual class — is_latent_individual","text":"data data.frame containing line list data","code":""},{"path":[]},{"path":"https://epidist.epinowcast.org/reference/log_lik_latent_gamma.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the pointwise log likelihood of the latent_gamma family — log_lik_latent_gamma","title":"Calculate the pointwise log likelihood of the latent_gamma family — log_lik_latent_gamma","text":"See brms::log_lik().","code":""},{"path":"https://epidist.epinowcast.org/reference/log_lik_latent_gamma.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the pointwise log likelihood of the latent_gamma family — log_lik_latent_gamma","text":"","code":"log_lik_latent_gamma(i, prep)"},{"path":"https://epidist.epinowcast.org/reference/log_lik_latent_gamma.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the pointwise log likelihood of the latent_gamma family — log_lik_latent_gamma","text":"index observation calculate log likelihood prep result call brms::prepare_predictions()","code":""},{"path":"https://epidist.epinowcast.org/reference/log_lik_latent_lognormal.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the pointwise log likelihood of the latent_gamma family — log_lik_latent_lognormal","title":"Calculate the pointwise log likelihood of the latent_gamma family — log_lik_latent_lognormal","text":"See brms::log_lik().","code":""},{"path":"https://epidist.epinowcast.org/reference/log_lik_latent_lognormal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the pointwise log likelihood of the latent_gamma family — log_lik_latent_lognormal","text":"","code":"log_lik_latent_lognormal(i, prep)"},{"path":"https://epidist.epinowcast.org/reference/log_lik_latent_lognormal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the pointwise log likelihood of the latent_gamma family — log_lik_latent_lognormal","text":"index observation calculate log likelihood prep result call brms::prepare_predictions()","code":""},{"path":"https://epidist.epinowcast.org/reference/observe_process.html","id":null,"dir":"Reference","previous_headings":"","what":"Observation process for primary and secondary events — observe_process","title":"Observation process for primary and secondary events — observe_process","text":"function adds columns linelist data representing observation process daily primary secondary censoring, well right truncation. columns added : ptime_daily: floor ptime ptime_lwr: lower bound ptime. Equal ptime_daily ptime_upr: upper bound ptime. Equal ptime_lwr + 1 stime_daily: floor stime stime_lwr: lower bound stime. Equal stime_daily stime_upr: upper bound stime. Equal stime_lwr + 1 delay_daily: Given stime_daily - ptime_daily delay_lwr: Given delay_daily - 1 (0 delay_daily < 1) delay_upr: Given delay_daily + 1 obs_at: maximum value stime","code":""},{"path":"https://epidist.epinowcast.org/reference/observe_process.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Observation process for primary and secondary events — observe_process","text":"","code":"observe_process(linelist)"},{"path":"https://epidist.epinowcast.org/reference/observe_process.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Observation process for primary and secondary events — observe_process","text":"linelist ...","code":""},{"path":[]},{"path":"https://epidist.epinowcast.org/reference/posterior_epred_latent_gamma.html","id":null,"dir":"Reference","previous_headings":"","what":"Draws from the expected value of the posterior predictive distribution of the latent_gamma family — posterior_epred_latent_gamma","title":"Draws from the expected value of the posterior predictive distribution of the latent_gamma family — posterior_epred_latent_gamma","text":"See brms::posterior_epred().","code":""},{"path":"https://epidist.epinowcast.org/reference/posterior_epred_latent_gamma.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Draws from the expected value of the posterior predictive distribution of the latent_gamma family — posterior_epred_latent_gamma","text":"","code":"posterior_epred_latent_gamma(prep)"},{"path":"https://epidist.epinowcast.org/reference/posterior_epred_latent_gamma.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Draws from the expected value of the posterior predictive distribution of the latent_gamma family — posterior_epred_latent_gamma","text":"prep result call brms::prepare_predictions","code":""},{"path":"https://epidist.epinowcast.org/reference/posterior_epred_latent_lognormal.html","id":null,"dir":"Reference","previous_headings":"","what":"Draws from the expected value of the posterior predictive distribution of the latent_gamma family — posterior_epred_latent_lognormal","title":"Draws from the expected value of the posterior predictive distribution of the latent_gamma family — posterior_epred_latent_lognormal","text":"See brms::posterior_epred().","code":""},{"path":"https://epidist.epinowcast.org/reference/posterior_epred_latent_lognormal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Draws from the expected value of the posterior predictive distribution of the latent_gamma family — posterior_epred_latent_lognormal","text":"","code":"posterior_epred_latent_lognormal(prep)"},{"path":"https://epidist.epinowcast.org/reference/posterior_epred_latent_lognormal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Draws from the expected value of the posterior predictive distribution of the latent_gamma family — posterior_epred_latent_lognormal","text":"prep result call brms::prepare_predictions","code":""},{"path":"https://epidist.epinowcast.org/reference/posterior_predict_latent_gamma.html","id":null,"dir":"Reference","previous_headings":"","what":"Draws from the posterior predictive distribution of the latent_gamma family — posterior_predict_latent_gamma","title":"Draws from the posterior predictive distribution of the latent_gamma family — posterior_predict_latent_gamma","text":"See brms::posterior_predict().","code":""},{"path":"https://epidist.epinowcast.org/reference/posterior_predict_latent_gamma.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Draws from the posterior predictive distribution of the latent_gamma family — posterior_predict_latent_gamma","text":"","code":"posterior_predict_latent_gamma(i, prep, ...)"},{"path":"https://epidist.epinowcast.org/reference/posterior_predict_latent_gamma.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Draws from the posterior predictive distribution of the latent_gamma family — posterior_predict_latent_gamma","text":"index observation predict prep result call brms::posterior_predict() ... Additional arguments","code":""},{"path":"https://epidist.epinowcast.org/reference/posterior_predict_latent_lognormal.html","id":null,"dir":"Reference","previous_headings":"","what":"Draws from the posterior predictive distribution of the latent_lognormal family — posterior_predict_latent_lognormal","title":"Draws from the posterior predictive distribution of the latent_lognormal family — posterior_predict_latent_lognormal","text":"See brms::posterior_predict().","code":""},{"path":"https://epidist.epinowcast.org/reference/posterior_predict_latent_lognormal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Draws from the posterior predictive distribution of the latent_lognormal family — posterior_predict_latent_lognormal","text":"","code":"posterior_predict_latent_lognormal(i, prep, ...)"},{"path":"https://epidist.epinowcast.org/reference/posterior_predict_latent_lognormal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Draws from the posterior predictive distribution of the latent_lognormal family — posterior_predict_latent_lognormal","text":"index observation predict prep result call brms::posterior_predict() ... Additional arguments","code":""},{"path":"https://epidist.epinowcast.org/reference/predict_delay_parameters.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract samples of the delay distribution parameters — predict_delay_parameters","title":"Extract samples of the delay distribution parameters — predict_delay_parameters","text":"Extract samples delay distribution parameters","code":""},{"path":"https://epidist.epinowcast.org/reference/predict_delay_parameters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract samples of the delay distribution parameters — predict_delay_parameters","text":"","code":"predict_delay_parameters(fit, newdata = NULL, ...)  predict_dpar(fit, newdata = NULL, ...)"},{"path":"https://epidist.epinowcast.org/reference/predict_delay_parameters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract samples of the delay distribution parameters — predict_delay_parameters","text":"fit model fit epidist() newdata optional data.frame evaluate predictions. NULL (default), original data model used. NA values within factors interpreted dummy variables factor zero. allows, instance, make predictions grand mean using sum coding. ... Additional arguments passed brms::prepare_predictions()","code":""},{"path":[]},{"path":"https://epidist.epinowcast.org/reference/sierra_leone_ebola_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Ebola linelist data from Fang et al. (2016) — sierra_leone_ebola_data","title":"Ebola linelist data from Fang et al. (2016) — sierra_leone_ebola_data","text":"Linelist data Ebola virus collected Sierra Leone. use data work, please cite corresponding paper.","code":""},{"path":"https://epidist.epinowcast.org/reference/sierra_leone_ebola_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ebola linelist data from Fang et al. (2016) — sierra_leone_ebola_data","text":"","code":"sierra_leone_ebola_data"},{"path":"https://epidist.epinowcast.org/reference/sierra_leone_ebola_data.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Ebola linelist data from Fang et al. (2016) — sierra_leone_ebola_data","text":"tibble 8,358 rows 8 columns: id Unique identification number case name Name character, omitted age Age numeric sex Sex character, either \"F\", \"M\" NA date_of_symptom_onset date symptoms began date_of_sample_tested date sample tested district district (ADM2) chiefdom chiefdom (ADM3)","code":""},{"path":"https://epidist.epinowcast.org/reference/sierra_leone_ebola_data.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Ebola linelist data from Fang et al. (2016) — sierra_leone_ebola_data","text":"https://www.pnas.org/doi/full/10.1073/pnas.1518587113","code":""},{"path":"https://epidist.epinowcast.org/reference/simulate_exponential_cases.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate exponential cases — simulate_exponential_cases","title":"Simulate exponential cases — simulate_exponential_cases","text":"function simulates cases exponential distribution. user may specify rate parameter r, sample size, upper bound survival time. rate parameter 0, function defaults uniform distribution.","code":""},{"path":"https://epidist.epinowcast.org/reference/simulate_exponential_cases.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate exponential cases — simulate_exponential_cases","text":"","code":"simulate_exponential_cases(r = 0.2, sample_size = 10000, seed, t = 30)"},{"path":"https://epidist.epinowcast.org/reference/simulate_exponential_cases.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate exponential cases — simulate_exponential_cases","text":"r exponential growth rate parameter. Defaults 0.2. sample_size number cases simulate. Defaults 10000. seed random seed used simulation process. t Upper bound survival time. Defaults 30.","code":""},{"path":"https://epidist.epinowcast.org/reference/simulate_exponential_cases.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate exponential cases — simulate_exponential_cases","text":"data.frame two columns: case (case number) ptime (primary event time).","code":""},{"path":[]},{"path":"https://epidist.epinowcast.org/reference/simulate_gillespie.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate cases from a stochastic SIR model — simulate_gillespie","title":"Simulate cases from a stochastic SIR model — simulate_gillespie","text":"function simulates cases stochastic SIR model. user may specify initial epidemic growth rate \\(r\\), rate recovery gamma \\(\\gamma\\), initial number infected cases \\(I_0\\), total population size \\(N\\).","code":""},{"path":"https://epidist.epinowcast.org/reference/simulate_gillespie.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate cases from a stochastic SIR model — simulate_gillespie","text":"","code":"simulate_gillespie(r = 0.2, gamma = 1/7, I0 = 50, N = 10000, seed)"},{"path":"https://epidist.epinowcast.org/reference/simulate_gillespie.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate cases from a stochastic SIR model — simulate_gillespie","text":"r initial epidemic growth rate. Defaults 0.2. gamma rate recovery. Defaults 1/7. I0 initial number infected people. Defaults 50. N total population size. Defaults 10000. seed random seed used simulation process.","code":""},{"path":"https://epidist.epinowcast.org/reference/simulate_gillespie.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate cases from a stochastic SIR model — simulate_gillespie","text":"data.frame two columns: case (case number) ptime (primary event time).","code":""},{"path":[]},{"path":"https://epidist.epinowcast.org/reference/simulate_secondary.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate secondary events based on a delay distribution — simulate_secondary","title":"Simulate secondary events based on a delay distribution — simulate_secondary","text":"function simulates secondary events based given delay distribution. input dataset primary event times column named ptime.","code":""},{"path":"https://epidist.epinowcast.org/reference/simulate_secondary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate secondary events based on a delay distribution — simulate_secondary","text":"","code":"simulate_secondary(linelist, dist = rlnorm, ...)"},{"path":"https://epidist.epinowcast.org/reference/simulate_secondary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate secondary events based on a delay distribution — simulate_secondary","text":"linelist data frame primary event times. dist delay distribution used. Defaults rlnorm(). ... Arguments passed delay distribution function.","code":""},{"path":"https://epidist.epinowcast.org/reference/simulate_secondary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate secondary events based on a delay distribution — simulate_secondary","text":"data.frame augments linelist two new columns: delay (secondary event latency) stime (time secondary event).","code":""},{"path":[]},{"path":"https://epidist.epinowcast.org/reference/simulate_uniform_cases.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate cases from a uniform distribution — simulate_uniform_cases","title":"Simulate cases from a uniform distribution — simulate_uniform_cases","text":"function simulates cases uniform distribution, primary event times uniformly distributed 0 t.","code":""},{"path":"https://epidist.epinowcast.org/reference/simulate_uniform_cases.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate cases from a uniform distribution — simulate_uniform_cases","text":"","code":"simulate_uniform_cases(sample_size = 1000, t = 60)"},{"path":"https://epidist.epinowcast.org/reference/simulate_uniform_cases.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate cases from a uniform distribution — simulate_uniform_cases","text":"sample_size number cases simulate. t Upper bound uniform distribution generate primary event times.","code":""},{"path":"https://epidist.epinowcast.org/reference/simulate_uniform_cases.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate cases from a uniform distribution — simulate_uniform_cases","text":"data.frame two columns: case (case number) ptime (primary event time).","code":""},{"path":[]}]
