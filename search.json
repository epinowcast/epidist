[{"path":"https://epidist.epinowcast.org/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 epidist authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://epidist.epinowcast.org/articles/approx-inference.html","id":"background","dir":"Articles","previous_headings":"","what":"Background","title":"Approximate Bayesian inference in epidist","text":"epidist package uses Bayesian inference estimate delay distributions quantities. Bayesian inference amounts approximating posterior distribution parameter statistical model1. range methods exist perform approximation. default, epidist uses -U-Turn Sampler [NUTS; Hoffman, Gelman, et al. (2014)] Hamiltonian Monte Carlo (HMC) algorithm. NUTS example broader class Markov chain Monte Carlo (MCMC) methods. methods work simulating Markov chain target posterior distribution stationary distribution. MCMC algorithms run sufficiently many iterations, reached convergence, samples can treated drawn posterior distribution. Relevant posterior quantities expectations may computed using samples. drawback MCMC methods, like NUTS, simulations can quite computational intensive, especially complex models large data. epidist package built using brms (Bürkner 2017), stands “Bayesian Regression Models using Stan”, Stan (Carpenter et al. 2017) probabilistic programming language. Although NUTS primary inference algorithm used Stan, additional options available. additional inference algorithms also available epidist due dependence brms. vignette, first briefly describe alternative algorithms available (Section 2) well directing detailed resources. (Section 3) demonstrate application fitting simulated data, extracting comparing posterior distributions. comparing resulting inferences NUTS, hope help make informed decisions algorithm use applied problem.","code":""},{"path":"https://epidist.epinowcast.org/articles/approx-inference.html","id":"other","dir":"Articles","previous_headings":"","what":"Alternative approximate inference algorithms","title":"Approximate Bayesian inference in epidist","text":"describe three alternative approximate Bayesian inference algorithms available use brms, therefore also available epidist. ’s worth noting inference algorithms may become available since vignette last updated. Please check brms package updates interested!","code":""},{"path":"https://epidist.epinowcast.org/articles/approx-inference.html","id":"laplace-method","dir":"Articles","previous_headings":"2 Alternative approximate inference algorithms","what":"Laplace method","title":"Approximate Bayesian inference in epidist","text":"Laplace method approximates posterior distribution Gaussian distribution centered (default) posterior mode. Stan, Gaussian approximation constructed unconstrained parameter space (domain Gaussian distribution real line). Samples Gaussian approximation may transformed constrained parameter space. access Laplace method, specify algorithm = \"laplace\" within brms::brm(). See section Laplace Sampling CmdStan User’s Guide information.","code":""},{"path":"https://epidist.epinowcast.org/articles/approx-inference.html","id":"variational-inference-using-advi","dir":"Articles","previous_headings":"2 Alternative approximate inference algorithms","what":"Variational inference using ADVI","title":"Approximate Bayesian inference in epidist","text":"Automatic differentiation variational inference [ADVI; Kucukelbir et al. (2017)] type variational inference [VI; Blei, Kucukelbir, McAuliffe (2017)] algorithm. VI works restricting family distributions, selecting member family similar posterior distribution. commonly, Stan, (dis-)similarity measured using Kullback–Leibler (KL) divergence. two options family distributions, either fully factorised Gaussian algorithm = \"meanfield\" Gaussian full-rank covariance matrix algorithm = \"fullrank\". See section Variational Inference using ADVI CmdStan User’s Guide information.","code":""},{"path":"https://epidist.epinowcast.org/articles/approx-inference.html","id":"pathfinder","dir":"Articles","previous_headings":"2 Alternative approximate inference algorithms","what":"Pathfinder","title":"Approximate Bayesian inference in epidist","text":"Pathfinder method closely related variational inference, recently developed Zhang et al. (2022). works generating Gaussian approximations along step iterative optimisation algorithm (L-BFGS). KL divergence approximation posterior measured, best approximation chosen. Pareto smoothed importance sampling [PSIS; Vehtari et al. (2015)] optionally used resample draws chosen Gaussian distribution. multiple paths specified (using num_paths) Pathfinder algorithm run multiple times, initialising optimisation different points. resulting approximation mixture Gaussian distributions, rather single Gaussian distribution. See section Pathfinder Method Approximate Bayesian Inference CmdStan User’s Guide information.","code":""},{"path":"https://epidist.epinowcast.org/articles/approx-inference.html","id":"demo","dir":"Articles","previous_headings":"","what":"Demonstration","title":"Approximate Bayesian inference in epidist","text":"demonstration, use following packages: access approximate inference methods used vignette need use cmdstanr backend brms (generally recommend using backend fitting models). , first need install CmdStan (see README details). can check everything need follows: can simulate data use fitting models. example data simulation process follows used Getting started epidist vignette, detail exactly happening , please consult vignette interested: now prepare data fitting latent individual model, perform inference HMC: Note clarity specify algorithm = \"sampling\", call epidist(data = data) result since \"sampling\" (.e. HMC) default value algorithm argument. Now, fit2 latent individual model using method Section 2. match four Markov chains length 1000 HMC , draw 4000 samples approximate posterior. Pathfinder algorithm set num_paths = 1. Although testing Laplace ADVI methods ran without problem cases, found Pathfinder often produced “Error evaluating model log probability: Non-finite gradient.”. Although save_single_paths option available, may allowed recovery individual Pathfinder paths (therefore removing faulty paths), appear working currently3. now extract posterior distribution delay parameters fitted model inference method. Thankfully, algorithm implemented sample draws posterior distribution, post-processing simple.","code":"library(epidist) library(ggplot2) library(dplyr) library(gt) library(purrr) library(tidyr) library(tibble) library(tidybayes) library(cmdstanr) # nolint cmdstanr::cmdstan_version() #> [1] \"2.35.0\" meanlog <- 1.8 sdlog <- 0.5 obs_time <- 25 sample_size <- 200  obs_cens_trunc_samp <- simulate_gillespie(seed = 101) |>   simulate_secondary(     meanlog = meanlog,     sdlog = sdlog   ) |>   mutate(     ptime_lwr = floor(.data$ptime),     ptime_upr = .data$ptime_lwr + 1,     stime_lwr = floor(.data$stime),     stime_upr = .data$stime_lwr + 1,     obs_time = obs_time   ) |>   filter(.data$stime_upr <= .data$obs_time) |>   slice_sample(n = sample_size, replace = FALSE) linelist_data <- as_epidist_linelist_data(   obs_cens_trunc_samp$ptime_lwr,   obs_cens_trunc_samp$ptime_upr,   obs_cens_trunc_samp$stime_lwr,   obs_cens_trunc_samp$stime_upr,   obs_time = obs_cens_trunc_samp$obs_time )  data <- as_epidist_latent_model(linelist_data)  t <- proc.time() fit_hmc <- epidist(data = data, algorithm = \"sampling\", backend = \"cmdstanr\") time_hmc <- proc.time() - t t <- proc.time() fit_laplace <- epidist(   data = data, algorithm = \"laplace\", draws = 4000, backend = \"cmdstanr\" ) time_laplace <- proc.time() - t  t <- proc.time() fit_advi <- epidist(   data = data, algorithm = \"meanfield\", draws = 4000, backend = \"cmdstanr\" ) time_advi <- proc.time() - t t <- proc.time() fit_pathfinder <- epidist(   data = data, algorithm = \"pathfinder\", draws = 4000, num_paths = 1,   backend = \"cmdstanr\" ) #> Warning: Number of PSIS draws is larger than the total number of draws returned by the single Pathfinders. This is likely unintentional and leads to re-sampling from the same draws.  #> Path [1] :Initial log joint density = -1520.740908  #> Error evaluating model log probability: Non-finite gradient.  #> Path [1] : Iter      log prob        ||dx||      ||grad||     alpha      alpha0      # evals       ELBO    Best ELBO        Notes   #>              66      -9.381e+02      4.100e-04   3.293e-03    1.995e-01  1.000e+00      1651 -4.023e+02 -4.023e+02                    #> Path [1] :Best Iter: [66] ELBO (-402.252349) evaluations: (1651)  #> Finished in  0.4 seconds. time_pathfinder <- proc.time() - t fits <- list(   HMC = fit_hmc,   Laplace = fit_laplace,   ADVI = fit_advi,   Pathfinder = fit_pathfinder )  draws <- imap(fits, function(fit, name) {   predict_delay_parameters(fit) |>     as.data.frame() |>     pivot_longer(       cols = c(\"mu\", \"sigma\", \"mean\", \"sd\"),       names_to = \"parameter\",       values_to = \"value\"     ) |>     filter(parameter %in% c(\"mu\", \"sigma\")) |>     mutate(method = as.factor(name)) })  draws <- bind_rows(draws)"},{"path":"https://epidist.epinowcast.org/articles/approx-inference.html","id":"comparison-of-parameter-posterior-distributions","dir":"Articles","previous_headings":"3 Demonstration","what":"Comparison of parameter posterior distributions","title":"Approximate Bayesian inference in epidist","text":"mean estimated value parameter, method follows. comprehensively, estimated posterior distributions shown Figure 3.1. Figure 3.1: Estimated posterior distributions mu sigma parameters using inference method, shown using tidybayes::stat_slabinterval().","code":"pars <- draws |>   group_by(method, parameter) |>   summarise(value = mean(value)) |>   pivot_wider(names_from = parameter, values_from = value)  pars |>   ungroup() |>   gt() draws |>   ggplot(aes(x = value, col = method)) +   stat_slabinterval(density = \"histogram\", breaks = 30, alpha = 0.8) +   scale_colour_manual(values = c(\"#56B4E9\", \"#009E73\", \"#E69F00\", \"#CC79A7\")) +   facet_grid(method ~ parameter, scales = \"free_x\") +   theme_minimal() +   guides(fill = \"none\") +   labs(x = \"\", y = \"\", col = \"Method\") +   theme(legend.position = \"bottom\")"},{"path":"https://epidist.epinowcast.org/articles/approx-inference.html","id":"comparison-of-resulting-delay-distributions","dir":"Articles","previous_headings":"3 Demonstration","what":"Comparison of resulting delay distributions","title":"Approximate Bayesian inference in epidist","text":"Figure 3.2 shows different mu sigma posterior mean estimates inference method alter estimated delay distribution. Figure 3.2: Delay probability density functions obtained based posterior mean estimated mu sigma parameters.","code":"pmap_df(   filter(pars), ~ tibble(     x = seq(0, 25, by = 0.1),     method = ..1, density = dlnorm(x, ..2, ..3)   ) ) |>   ggplot(aes(x = x, y = density, col = method)) +   geom_line() +   scale_color_manual(values = c(\"#56B4E9\", \"#009E73\", \"#E69F00\", \"#CC79A7\")) +   theme_minimal() +   labs(x = \"\", y = \"\", col = \"Method\")"},{"path":"https://epidist.epinowcast.org/articles/approx-inference.html","id":"comparison-of-time-taken","dir":"Articles","previous_headings":"3 Demonstration","what":"Comparison of time taken","title":"Approximate Bayesian inference in epidist","text":"example, HMC took longer time run methods Pathfinder fastest running method. said, even HMC computation time case unlikely prohibitive.","code":"times <- list(   HMC = time_hmc,   Laplace = time_laplace,   ADVI = time_advi,   Pathfinder = time_pathfinder )  times |>   map_dbl(\"elapsed\") |>   enframe(name = \"method\", value = \"time (s)\") |>   gt()"},{"path":"https://epidist.epinowcast.org/articles/approx-inference.html","id":"conclusion","dir":"Articles","previous_headings":"","what":"Conclusion","title":"Approximate Bayesian inference in epidist","text":"range alternative approximation algorithms available, ease use, attractive feature brms. found algorithms produce reasonable approximations far less time HMC. course, vignette includes one example, thorough investigation required make specific recommendations. said, currently recommend use Pathfinder algorithm due unstable performance testing, early stage software implementation.","code":""},{"path":[]},{"path":"https://epidist.epinowcast.org/articles/ebola.html","id":"using-the-cmdstanr-backend","dir":"Articles","previous_headings":"","what":"Using the cmdstanr backend","title":"Using epidist to estimate delay between symptom onset and positive test for an Ebola outbreak in Sierra Leone","text":"models explored vignette relatively complex, recommend using cmdstanr backend fitting models typically performant default rstan backend. use cmdstanr backend, first need install CmdStan (see README details). can check everything need follows:","code":"cmdstanr::cmdstan_version() #> [1] \"2.35.0\""},{"path":"https://epidist.epinowcast.org/articles/ebola.html","id":"data-preparation","dir":"Articles","previous_headings":"","what":"Data preparation","title":"Using epidist to estimate delay between symptom onset and positive test for an Ebola outbreak in Sierra Leone","text":"begin loading Ebola line list data: data 8358 rows, corresponding unique case report id. columns data individuals name (retracted, hence can removed), age, sex, dates Ebola symptom onset positive sample, district chiefdom. Figure 2.1 shows dates symptom onset sample testing cases across district. (figure, filter every 5th case order avoid overplotting.) can see start time course epidemic varies across districts. Figure 2.1: Primary secondary event times every 5th case, 14 districts Sierra Leone. can use map help visualise outbreak across space. create map, first join Ebola data shapefiles districts Sierra Leone. shapefiles obtained Database Global Administrative Areas (GADM). Figure 2.2 shows majority cases concentrated Western Urban district. district contains capital country, highest population (, one may also interested prevalence Ebola, number cases divided population size). Figure 2.2: cloropleth showing total number Ebola cases district Sierra Leone.","code":"data(\"sierra_leone_ebola_data\") sierra_leone_ebola_data <- sierra_leone_ebola_data |>   select(-name) |>   mutate(     case = as.integer(id), .keep = \"unused\",     sex = case_when(       sex == \"F\" ~ \"Female\",       sex == \"M\" ~ \"Male\"     )   )  head(sierra_leone_ebola_data) #> # A tibble: 6 × 7 #>     age sex    date_of_symptom_onset date_of_sample_tested district chiefdom    #>   <dbl> <chr>  <dttm>                <dttm>                <chr>    <chr>       #> 1    20 Female 2014-05-18 00:00:00   2014-05-23 00:00:00   Kailahun Kissi Teng  #> 2    42 Female 2014-05-20 00:00:00   2014-05-25 00:00:00   Kailahun Kissi Teng  #> 3    45 Female 2014-05-20 00:00:00   2014-05-25 00:00:00   Kailahun Kissi Tonge #> 4    15 Female 2014-05-21 00:00:00   2014-05-26 00:00:00   Kailahun Kissi Teng  #> 5    19 Female 2014-05-21 00:00:00   2014-05-26 00:00:00   Kailahun Kissi Teng  #> 6    55 Female 2014-05-21 00:00:00   2014-05-26 00:00:00   Kailahun Kissi Teng  #> # ℹ 1 more variable: case <int>  fraction <- 5 ndistrict <- length(unique(sierra_leone_ebola_data$district)) sierra_leone_ebola_data |>   filter(case %% fraction == 0) |>   ggplot() +   geom_segment(     aes(       x = date_of_symptom_onset, xend = date_of_sample_tested,       y = case, yend = case     ),     col = \"grey\"   ) +   geom_point(aes(x = date_of_symptom_onset, y = case), col = \"#56B4E9\") +   geom_point(aes(x = date_of_sample_tested, y = case), col = \"#009E73\") +   facet_wrap(district ~ ., ncol = 2) +   labs(x = \"\", y = \"Case ID\") +   theme_minimal() sf <- st_read(   system.file(     \"extdata\", \"gadm41_SLE_shp\", \"gadm41_SLE_2.shp\",     package = \"epidist\"   ),   quiet = TRUE )  sierra_leone_ebola_data_sf <- select(sf, district = NAME_2, geometry) |>   left_join(     sierra_leone_ebola_data |>       group_by(district) |>       summarise(cases = n())   ) ggplot(sierra_leone_ebola_data_sf, aes(fill = cases, geometry = geometry)) +   geom_sf() +   scale_fill_viridis_c(na.value = \"lightgrey\") +   theme_minimal() +   labs(fill = \"Cases\")"},{"path":"https://epidist.epinowcast.org/articles/ebola.html","id":"fitting-sex-district-stratified-delay-distributions","dir":"Articles","previous_headings":"","what":"Fitting sex-district stratified delay distributions","title":"Using epidist to estimate delay between symptom onset and positive test for an Ebola outbreak in Sierra Leone","text":"understand delay time symptom onset time sample testing, fit range statistical models using epidist package. models, vary parameters delay distribution sex district. lognormal delay distribution parameters mean standard deviation underlying normal distribution. , \\(\\mu\\) \\(\\sigma\\) \\(x \\sim \\mathcal{N}(\\mu, \\sigma)\\) \\(\\exp(x)\\) lognormal distribution.","code":""},{"path":"https://epidist.epinowcast.org/articles/ebola.html","id":"data-preparation-1","dir":"Articles","previous_headings":"3 Fitting sex-district stratified delay distributions","what":"Data preparation","title":"Using epidist to estimate delay between symptom onset and positive test for an Ebola outbreak in Sierra Leone","text":"prepare data, begin converting date columns Date objects selecting relevant columns: time , filter data complete cases (.e. rows data missing values1). , 83% cases complete. Additionally, speed computation, take random 20% subsample complete data. (real analysis, ’d recommend using available data.) Finally, prepare data use epidist package converting data epidist_linelist_data object: call [as_epidist_linelist_data()] made assumptions data. First, supply upper bounds primary secondary events (pdate_upr sdate_upr), assumed upper bounds one day lower bounds. Second, also supply observation time column (obs_date), assumed observation time maximum secondary event upper bounds.","code":"obs_cens <- sierra_leone_ebola_data |>   tibble() |>   mutate(     # use lubridate::ymd() to drop any sub-date time info     date_of_symptom_onset = ymd(date_of_symptom_onset),     date_of_sample_tested = ymd(date_of_sample_tested)   ) |>   select(case, date_of_symptom_onset, date_of_sample_tested, age, sex, district)  head(obs_cens) #> # A tibble: 6 × 6 #>    case date_of_symptom_onset date_of_sample_tested   age sex    district #>   <int> <date>                <date>                <dbl> <chr>  <chr>    #> 1     1 2014-05-18            2014-05-23               20 Female Kailahun #> 2     2 2014-05-20            2014-05-25               42 Female Kailahun #> 3     3 2014-05-20            2014-05-25               45 Female Kailahun #> 4     4 2014-05-21            2014-05-26               15 Female Kailahun #> 5     5 2014-05-21            2014-05-26               19 Female Kailahun #> 6     6 2014-05-21            2014-05-26               55 Female Kailahun n <- nrow(obs_cens) obs_cens <- obs_cens[complete.cases(obs_cens), ] n_complete <- nrow(obs_cens) subsample <- 0.2 obs_cens <- obs_cens |>   slice_sample(n = round(n_complete * subsample), replace = FALSE) linelist_data <- obs_cens |>   as_epidist_linelist_data(     pdate_lwr = \"date_of_symptom_onset\",     sdate_lwr = \"date_of_sample_tested\"   )"},{"path":"https://epidist.epinowcast.org/articles/ebola.html","id":"model-fitting","dir":"Articles","previous_headings":"3 Fitting sex-district stratified delay distributions","what":"Model fitting","title":"Using epidist to estimate delay between symptom onset and positive test for an Ebola outbreak in Sierra Leone","text":"prepare data use latent individual model, define data epidist_latent_model model object: Now ready fit latent individual model.","code":"obs_prep <- as_epidist_latent_model(linelist_data) head(obs_prep) #> # A tibble: 6 × 20 #>   ptime_lwr ptime_upr stime_lwr stime_upr obs_time  case pdate_lwr  sdate_lwr  #>       <dbl>     <dbl>     <dbl>     <dbl>    <dbl> <int> <date>     <date>     #> 1       108       109       111       112      480  1101 2014-09-03 2014-09-06 #> 2       189       190       197       198      480  5584 2014-11-23 2014-12-01 #> 3       111       112       117       118      480  1187 2014-09-06 2014-09-12 #> 4       138       139       142       143      480  2483 2014-10-03 2014-10-07 #> 5       217       218       221       222      480  6796 2014-12-21 2014-12-25 #> 6       157       158       163       164      480  3576 2014-10-22 2014-10-28 #> # ℹ 12 more variables: age <dbl>, sex <chr>, district <chr>, pdate_upr <date>, #> #   sdate_upr <date>, obs_date <date>, relative_obs_time <dbl>, pwindow <dbl>, #> #   woverlap <dbl>, swindow <dbl>, delay <dbl>, .row_id <int>"},{"path":"https://epidist.epinowcast.org/articles/ebola.html","id":"intercept-only-model","dir":"Articles","previous_headings":"3 Fitting sex-district stratified delay distributions > 3.2 Model fitting","what":"Intercept-only model","title":"Using epidist to estimate delay between symptom onset and positive test for an Ebola outbreak in Sierra Leone","text":"start fitting single lognormal distribution data. model assumes single distribution describes delays data, regardless case’s location, sex, covariates. , set formula = mu ~ 1 place model intercept parameter (.e. ~ 1 R formula syntax) mu parameter lognormal distribution specified using family = lognormal(). (Note lognormal distribution two distributional parameters mu sigma. model explicitly placed sigma, constant model sigma ~ 1 assumed.) fit object brmsfit object, associated range methods. See methods(class = \"brmsfit\") details. example, may use summary() view information fitted model, including posterior estimates regression coefficients:","code":"fit <- epidist(   data = obs_prep,   formula = mu ~ 1,   family = lognormal(),   algorithm = \"sampling\",   refresh = 0,   silent = 2,   seed = 1,   backend = \"cmdstanr\" ) summary(fit) #>  Family: latent_lognormal  #>   Links: mu = identity; sigma = log  #> Formula: delay | vreal(relative_obs_time, pwindow, swindow) ~ 1  #>          sigma ~ 1 #>    Data: data (Number of observations: 1390)  #>   Draws: 4 chains, each with iter = 2000; warmup = 1000; thin = 1; #>          total post-warmup draws = 4000 #>  #> Regression Coefficients: #>                 Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS #> Intercept           1.62      0.02     1.59     1.65 1.00     9716     2688 #> sigma_Intercept    -0.54      0.02    -0.58    -0.50 1.00     9059     2914 #>  #> Draws were sampled using sample(hmc). For each parameter, Bulk_ESS #> and Tail_ESS are effective sample size measures, and Rhat is the potential #> scale reduction factor on split chains (at convergence, Rhat = 1)."},{"path":"https://epidist.epinowcast.org/articles/ebola.html","id":"sex-stratified-model","dir":"Articles","previous_headings":"3 Fitting sex-district stratified delay distributions > 3.2 Model fitting","what":"Sex-stratified model","title":"Using epidist to estimate delay between symptom onset and positive test for an Ebola outbreak in Sierra Leone","text":"fit model varies parameters fitted lognormal distribution, mu sigma, sex alter formula specification include fixed effects sex ~ 1 + sex follows: summary model shows males tend longer delays (posterior mean sexMale 0.03) greater delay variation (posterior mean sigma_sexMale 0.05). sexMale effect, 95% credible interval greater zero, whereas sigma_sexMale effect 95% credible interval includes zero. important note estimates represent average observed data, individual delays men women vary significantly.","code":"fit_sex <- epidist(   data = obs_prep,   formula = bf(mu ~ 1 + sex, sigma ~ 1 + sex),   family = lognormal(),   algorithm = \"sampling\",   refresh = 0,   silent = 2,   seed = 1,   backend = \"cmdstanr\" ) summary(fit_sex) #>  Family: latent_lognormal  #>   Links: mu = identity; sigma = log  #> Formula: delay | vreal(relative_obs_time, pwindow, swindow) ~ sex  #>          sigma ~ 1 + sex #>    Data: data (Number of observations: 1390)  #>   Draws: 4 chains, each with iter = 2000; warmup = 1000; thin = 1; #>          total post-warmup draws = 4000 #>  #> Regression Coefficients: #>                 Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS #> Intercept           1.60      0.02     1.56     1.65 1.00     7640     2860 #> sigma_Intercept    -0.57      0.03    -0.63    -0.51 1.00     7639     3413 #> sexMale             0.03      0.03    -0.03     0.09 1.00     8259     3161 #> sigma_sexMale       0.05      0.04    -0.03     0.13 1.00     7225     3271 #>  #> Draws were sampled using sample(hmc). For each parameter, Bulk_ESS #> and Tail_ESS are effective sample size measures, and Rhat is the potential #> scale reduction factor on split chains (at convergence, Rhat = 1)."},{"path":"https://epidist.epinowcast.org/articles/ebola.html","id":"sex-district-stratified-model","dir":"Articles","previous_headings":"3 Fitting sex-district stratified delay distributions > 3.2 Model fitting","what":"Sex-district stratified model","title":"Using epidist to estimate delay between symptom onset and positive test for an Ebola outbreak in Sierra Leone","text":"Finally, fit model also varies district. , use district level random effects, assumed drawn shared normal distribution, within model mu sigma parameters. random effects specified including (1 | district) formulas: model, along looking summary(), may also use brms::ranef() function look estimates random effects:","code":"fit_sex_district <- epidist(   data = obs_prep,   formula = bf(     mu ~ 1 + sex + (1 | district),     sigma ~ 1 + sex + (1 | district)   ),   family = lognormal(),   algorithm = \"sampling\",   refresh = 0,   silent = 2,   seed = 1,   backend = \"cmdstanr\" ) summary(fit_sex_district) #>  Family: latent_lognormal  #>   Links: mu = identity; sigma = log  #> Formula: delay | vreal(relative_obs_time, pwindow, swindow) ~ sex + (1 | district)  #>          sigma ~ 1 + sex + (1 | district) #>    Data: data (Number of observations: 1390)  #>   Draws: 4 chains, each with iter = 2000; warmup = 1000; thin = 1; #>          total post-warmup draws = 4000 #>  #> Multilevel Hyperparameters: #> ~district (Number of levels: 14)  #>                     Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS #> sd(Intercept)           0.13      0.04     0.07     0.22 1.00     2031     2785 #> sd(sigma_Intercept)     0.23      0.07     0.14     0.39 1.00     1660     2425 #>  #> Regression Coefficients: #>                 Estimate Est.Error l-95% CI u-95% CI Rhat Bulk_ESS Tail_ESS #> Intercept           1.63      0.05     1.54     1.72 1.00     1995     2422 #> sigma_Intercept    -0.64      0.08    -0.80    -0.49 1.00     1486     1925 #> sexMale             0.04      0.03    -0.02     0.10 1.00     9583     2802 #> sigma_sexMale       0.04      0.04    -0.04     0.12 1.00     8840     3261 #>  #> Draws were sampled using sample(hmc). For each parameter, Bulk_ESS #> and Tail_ESS are effective sample size measures, and Rhat is the potential #> scale reduction factor on split chains (at convergence, Rhat = 1). ranef(fit_sex_district) #> $district #> , , Intercept #>  #>                   Estimate  Est.Error        Q2.5        Q97.5 #> Bo             0.062354374 0.07793594 -0.09351771  0.218292475 #> Bombali        0.161996426 0.04955703  0.06940822  0.264468425 #> Bonthe         0.006244718 0.12679564 -0.24637620  0.255287025 #> Kailahun      -0.042366892 0.05661785 -0.15803442  0.067869875 #> Kambia         0.047736853 0.08842820 -0.12744093  0.225382750 #> Kenema        -0.140868411 0.07190588 -0.29151928 -0.006228557 #> Koinadugu      0.115249953 0.10252796 -0.06984558  0.323375225 #> Kono          -0.033648450 0.07635799 -0.19061337  0.114239075 #> Moyamba       -0.003141594 0.08211161 -0.16419105  0.154032925 #> Port Loko      0.012306233 0.05371323 -0.09176502  0.117358425 #> Pujehun       -0.040339979 0.11931596 -0.28476797  0.185322950 #> Tonkolili      0.034717044 0.05846418 -0.07734945  0.152016750 #> Western Rural  0.007570996 0.05532290 -0.10125318  0.120088900 #> Western Urban -0.185939069 0.05412118 -0.29620172 -0.080082992 #>  #> , , sigma_Intercept #>  #>                  Estimate  Est.Error        Q2.5        Q97.5 #> Bo            -0.03846943 0.12209254 -0.27656220  0.204633075 #> Bombali       -0.28608014 0.08967155 -0.46117640 -0.110950700 #> Bonthe        -0.05263939 0.25533418 -0.56840995  0.434322475 #> Kailahun      -0.20092384 0.10222637 -0.40472870 -0.002501823 #> Kambia         0.28990098 0.12193886  0.06364249  0.546610475 #> Kenema         0.21306142 0.10361685  0.02341296  0.425560350 #> Koinadugu      0.01608345 0.14743538 -0.26236690  0.314916075 #> Kono           0.10647670 0.11489021 -0.10604492  0.349526025 #> Moyamba        0.08658646 0.12012121 -0.13572768  0.338896975 #> Port Loko      0.01543792 0.08684709 -0.15448425  0.192607250 #> Pujehun       -0.13537132 0.23270857 -0.62131650  0.276139650 #> Tonkolili     -0.23273016 0.10370956 -0.43821827 -0.029459557 #> Western Rural  0.03107030 0.08897905 -0.13993570  0.210752500 #> Western Urban  0.24903149 0.08285642  0.09742020  0.422192375"},{"path":"https://epidist.epinowcast.org/articles/ebola.html","id":"posterior-expectation","dir":"Articles","previous_headings":"3 Fitting sex-district stratified delay distributions","what":"Posterior expectations","title":"Using epidist to estimate delay between symptom onset and positive test for an Ebola outbreak in Sierra Leone","text":"go summaries fitted model, recommend using tidybayes package. example, obtain posterior expectation delay distribution, censoring truncation, may use modelr::data_grid() function combination tidybayes::add_epred_draws() function. tidybayes::add_epred_draws() function uses (internal) posterior_epred_latent_lognormal() function implemented epidist latent_lognormal custom brms family. Figure 3.1 show posterior expectation delay distribution three fitted models. Figure 3.1B illustrates higher mean men compared women. Figure 3.1: fitted posterior expectations delay distribution model.","code":"epred_draws <- obs_prep |>   as.data.frame() |>   data_grid(NA) |>   mutate(relative_obs_time = NA, pwindow = NA, swindow = NA) |>   add_epred_draws(fit, dpar = TRUE)  epred_base_figure <- epred_draws |>   ggplot(aes(x = .epred)) +   stat_halfeye() +   labs(x = \"\", y = \"\", title = \"Intercept-only\", tag = \"A\") +   theme_minimal()  epred_draws_sex <- obs_prep |>   as.data.frame() |>   data_grid(sex) |>   mutate(relative_obs_time = NA, pwindow = NA, swindow = NA) |>   add_epred_draws(fit_sex, dpar = TRUE)  epred_sex_figure <- epred_draws_sex |>   ggplot(aes(x = .epred, y = sex)) +   stat_halfeye() +   labs(x = \"\", y = \"\", title = \"Sex-stratified\", tag = \"B\") +   theme_minimal()  epred_draws_sex_district <- obs_prep |>   as.data.frame() |>   data_grid(sex, district) |>   mutate(relative_obs_time = NA, pwindow = NA, swindow = NA) |>   add_epred_draws(fit_sex_district, dpar = TRUE)  epred_sex_district_figure <- epred_draws_sex_district |>   ggplot(aes(x = .epred, y = district)) +   stat_pointinterval() +   facet_grid(. ~ sex) +   labs(     x = \"Posterior expectation of the delay\", y = \"\",     title = \"Sex-district-stratified\", tag = \"C\"   ) +   scale_y_discrete(limits = rev) +   theme_minimal() epred_base_figure / epred_sex_figure / epred_sex_district_figure +   plot_layout(heights = c(1, 1.5, 2.5))"},{"path":"https://epidist.epinowcast.org/articles/ebola.html","id":"linear-predictor-posteriors","dir":"Articles","previous_headings":"3 Fitting sex-district stratified delay distributions","what":"Linear predictor posteriors","title":"Using epidist to estimate delay between symptom onset and positive test for an Ebola outbreak in Sierra Leone","text":"tidybayes package also allows users generate draws linear predictors distributional parameters using tidybayes::add_linpred_draws(). example, mu parameter sex-district stratified model (Figure 3.2): Figure 3.2: posterior distribution linear predictor mu parameter within sex-district stratified model. posterior expectations Section 3.3 function mu linear predictor posterior distribution sigma linear predictor posterior distribution.","code":"linpred_draws_sex_district <- obs_prep |>   as.data.frame() |>   data_grid(sex, district) |>   mutate(relative_obs_time = NA, pwindow = NA, swindow = NA) |>   add_linpred_draws(fit_sex_district, dpar = TRUE) linpred_draws_sex_district |>   ggplot(aes(x = mu, y = district)) +   stat_pointinterval() +   facet_grid(. ~ sex) +   labs(x = \"Posterior of the mu linear predictor\", y = \"\") +   scale_y_discrete(limits = rev) +   theme_minimal()"},{"path":"https://epidist.epinowcast.org/articles/ebola.html","id":"delay-posterior-distributions","dir":"Articles","previous_headings":"3 Fitting sex-district stratified delay distributions","what":"Delay posterior distributions","title":"Using epidist to estimate delay between symptom onset and positive test for an Ebola outbreak in Sierra Leone","text":"Posterior predictions delay distribution important output analysis epidist package. section, demonstrate produce either discrete probability mass function representation, continuous probability density function representation delay distribution.","code":""},{"path":"https://epidist.epinowcast.org/articles/ebola.html","id":"discrete-probability-mass-function","dir":"Articles","previous_headings":"3 Fitting sex-district stratified delay distributions > 3.5 Delay posterior distributions","what":"Discrete probability mass function","title":"Using epidist to estimate delay between symptom onset and positive test for an Ebola outbreak in Sierra Leone","text":"generate discrete probability mass function (PMF) predict delay distribution observed daily censoring right truncation. , set pwindow swindow 1 daily censoring, relative_obs_time 1000 censoring. Figure 3.3 shows result, delays greater 30 omitted figure. Figure 3.3: Posterior predictions discrete probability mass function fitted models.","code":"draws_pmf <- obs_prep |>   as.data.frame() |>   mutate(relative_obs_time = 1000, pwindow = 1, swindow = 1) |>   add_predicted_draws(fit, ndraws = 1000)  pmf_base_figure <- ggplot(draws_pmf, aes(x = .prediction)) +   geom_bar(aes(y = after_stat(count / sum(count)))) +   labs(x = \"\", y = \"\", title = \"Intercept-only\", tag = \"A\") +   scale_x_continuous(limits = c(0, 30)) +   theme_minimal()  draws_sex_pmf <- obs_prep |>   as.data.frame() |>   data_grid(sex) |>   mutate(relative_obs_time = 1000, pwindow = 1, swindow = 1) |>   add_predicted_draws(fit_sex, ndraws = 1000)  pmf_sex_figure <- draws_sex_pmf |>   ggplot(aes(x = .prediction)) +   geom_bar(aes(y = after_stat(count / ave(count, PANEL, FUN = sum)))) +   labs(x = \"\", y = \"\", title = \"Sex-stratified\", tag = \"B\") +   facet_grid(. ~ sex) +   scale_x_continuous(limits = c(0, 30)) +   theme_minimal()  draws_sex_district_pmf <- obs_prep |>   as.data.frame() |>   data_grid(sex, district) |>   mutate(relative_obs_time = 1000, pwindow = 1, swindow = 1) |>   add_predicted_draws(fit_sex_district, ndraws = 1000)  pmf_sex_district_figure <- draws_sex_district_pmf |>   mutate(     district = case_when(       district == \"Port Loko\" ~ \"Port\\nLoko\",       district == \"Western Rural\" ~ \"Western\\nRural\",       district == \"Western Urban\" ~ \"Western\\nUrban\",       .default = district     )   ) |>   ggplot(aes(x = .prediction)) +   geom_bar(aes(y = after_stat(count / ave(count, PANEL, FUN = sum)))) +   labs(     x = \"PMF with daily censoring and no truncation\", y = \"\",     title = \"Sex-district-stratified\", tag = \"C\"   ) +   facet_grid(district ~ sex) +   scale_x_continuous(limits = c(0, 30)) +   theme_minimal() pmf_base_figure / pmf_sex_figure / pmf_sex_district_figure +   plot_layout(heights = c(1, 1.5, 5.5))"},{"path":"https://epidist.epinowcast.org/articles/ebola.html","id":"continuous-probability-density-function","dir":"Articles","previous_headings":"3 Fitting sex-district stratified delay distributions > 3.5 Delay posterior distributions","what":"Continuous probability density function","title":"Using epidist to estimate delay between symptom onset and positive test for an Ebola outbreak in Sierra Leone","text":"posterior predictive distribution truncation censoring. produce continuous delay times (Figure 3.4): Figure 3.4: Posterior predictions continuous probability density function fitted models.","code":"draws_pdf <- obs_prep |>   as.data.frame() |>   mutate(relative_obs_time = 1000, pwindow = 0, swindow = 0) |>   add_predicted_draws(fit, ndraws = 1000)  pdf_base_figure <- ggplot(draws_pdf, aes(x = .prediction)) +   geom_density() +   labs(x = \"\", y = \"\", title = \"Intercept-only\", tag = \"A\") +   scale_x_continuous(limits = c(0, 30)) +   theme_minimal()  draws_sex_pdf <- obs_prep |>   as.data.frame() |>   data_grid(sex) |>   mutate(relative_obs_time = 1000, pwindow = 0, swindow = 0) |>   add_predicted_draws(fit_sex, ndraws = 1000)  pdf_sex_figure <- draws_sex_pdf |>   ggplot(aes(x = .prediction)) +   geom_density() +   labs(x = \"\", y = \"\", title = \"Sex-stratified\", tag = \"B\") +   facet_grid(. ~ sex) +   scale_x_continuous(limits = c(0, 30)) +   theme_minimal()  draws_sex_district_pdf <- obs_prep |>   as.data.frame() |>   data_grid(sex, district) |>   mutate(relative_obs_time = 1000, pwindow = 0, swindow = 0) |>   add_predicted_draws(fit_sex_district, ndraws = 1000)  pdf_sex_district_figure <- draws_sex_district_pdf |>   mutate(     district = case_when(       district == \"Port Loko\" ~ \"Port\\nLoko\",       district == \"Western Rural\" ~ \"Western\\nRural\",       district == \"Western Urban\" ~ \"Western\\nUrban\",       .default = district     )   ) |>   ggplot(aes(x = .prediction)) +   geom_density() +   labs(     x = \"PDF with no censoring and no truncation\", y = \"\",     title = \"Sex-district-stratified\", tag = \"C\"   ) +   facet_grid(district ~ sex) +   scale_x_continuous(limits = c(0, 30)) +   theme_minimal() pdf_base_figure / pdf_sex_figure / pdf_sex_district_figure +   plot_layout(heights = c(1, 1.5, 5.5))"},{"path":"https://epidist.epinowcast.org/articles/ebola.html","id":"conclusion","dir":"Articles","previous_headings":"","what":"Conclusion","title":"Using epidist to estimate delay between symptom onset and positive test for an Ebola outbreak in Sierra Leone","text":"vignette, demonstrate epidist package can used fit delay distribution models. models can stratified covariates sex district using fixed random effects. Post-processing prediction fitted models possible using tidybayes package. illustrate generating posterior expectations, posteriors linear predictors, well discrete continuous representations delay distribution.","code":""},{"path":[]},{"path":"https://epidist.epinowcast.org/articles/epidist.html","id":"data","dir":"Articles","previous_headings":"","what":"Example data","title":"Getting started with epidist","text":"First, use Gillepsie algorithm generate infectious disease outbreak data (Figure 1.1) stochastic compartmental model. Figure 1.1: Early epidemic, high rate growth new cases. people infected, rate growth slows. (every 50th case shown avoid -plotting.) outbreak data.frame two columns: case ptime. ptime numeric column giving time infection. reality, common recive primary event times date rather numeric. generate secondary events, use lognormal distribution (Figure 1.2) delay primary secondary events: Figure 1.2: lognormal distribution skewed right. Long delay times still probability. Figure 1.3: Secondary events (green) occur delay drawn lognormal distribution (Figure 1.2). Figure 1.1, make figure easier read, every 50th case shown. obs now data.frame columns delay stime. secondary event time simply primary event time plus delay: receive complete data obs simple accurately estimate delay distribution. However, reality, outbreak almost never receive data . First, times primary secondary events usually censored. means rather exact event times, observe event times within interval. suppose interval daily, meaning date primary secondary event, exact event time, reported (Figure 1.4): Figure 1.4: Interval censoring primary secondary event times obscures delay times. common example events reported daily aggregates. daily censoring common, epidist supports primary secondary events delay intervals. outbreak usually estimating delays real time. result cases secondary event occurring time observed. called (right) truncation, biases observation process towards shorter delays: Finally, reality, ’s possible observe every case. suppose sample individuals size sample_size observed: sample size corresponds 8.7% data. Another issue, epidist currently account , sometimes secondary event might observed, primary event. example, symptom onset may reported, start infection unknown. Discarding events type leads called ascertainment biases. Whereas case equally likely appear sample , ascertainment bias cases likely appear data others. censored, truncated, sampled data, now ready try recover underlying delay distribution using epidist.","code":"outbreak <- simulate_gillespie(seed = 101) outbreak |>   filter(case %% 50 == 0) |>   ggplot(aes(x = ptime, y = case)) +   geom_point(col = \"#56B4E9\") +   labs(x = \"Primary event time (day)\", y = \"Case number\") +   theme_minimal() head(outbreak) #>   case      ptime #> 1    1 0.04884052 #> 2    2 0.06583120 #> 3    3 0.21857827 #> 4    4 0.24963421 #> 5    5 0.30133392 #> 6    6 0.31425010 secondary_dist <- data.frame(mu = 1.8, sigma = 0.5) class(secondary_dist) <- c(\"lognormal_samples\", class(secondary_dist)) secondary_dist <- add_mean_sd(secondary_dist)  obs <- outbreak |>   simulate_secondary(     meanlog = secondary_dist[[\"mu\"]],     sdlog = secondary_dist[[\"sigma\"]]   ) ggplot(data.frame(x = c(0, 30)), aes(x = x)) +   geom_function(     fun = dlnorm,     args = list(       meanlog = secondary_dist[[\"mu\"]],       sdlog = secondary_dist[[\"sigma\"]]     )   ) +   theme_minimal() +   labs(     x = \"Delay between primary and secondary event (days)\",     y = \"Probability density\"   ) obs |>   filter(case %% 50 == 0) |>   ggplot(aes(y = case)) +   geom_segment(     aes(x = ptime, xend = stime, y = case, yend = case),     col = \"grey\"   ) +   geom_point(aes(x = ptime), col = \"#56B4E9\") +   geom_point(aes(x = stime), col = \"#009E73\") +   labs(x = \"Event time (day)\", y = \"Case number\") +   theme_minimal() all(obs$ptime + obs$delay == obs$stime) #> [1] TRUE obs_cens <- obs |>   mutate(     ptime_lwr = floor(.data$ptime),     ptime_upr = .data$ptime_lwr + 1,     stime_lwr = floor(.data$stime),     stime_upr = .data$stime_lwr + 1,     delay_daily = stime_lwr - ptime_lwr   ) obs_cens |>   filter(case %% 50 == 0, case <= 250) |>   ggplot(aes(y = case)) +   geom_segment(     aes(x = ptime, xend = stime, y = case, yend = case),     col = \"grey\"   ) +   # The primary event censoring intervals   geom_errorbarh(     aes(xmin = ptime_lwr, xmax = ptime_upr, y = case, yend = case),     col = \"#56B4E9\", height = 5   ) +   # The secondary event censoring intervals   geom_errorbarh(     aes(xmin = stime_lwr, xmax = stime_upr, y = case, yend = case),     col = \"#009E73\", height = 5   ) +   geom_point(aes(x = ptime), fill = \"white\", col = \"#56B4E9\", shape = 21) +   geom_point(aes(x = stime), fill = \"white\", col = \"#009E73\", shape = 21) +   labs(x = \"Event time (day)\", y = \"Case number\") +   theme_minimal() obs_time <- 25 obs_cens_trunc <- obs_cens |>   mutate(obs_time = obs_time) |>   filter(.data$stime_upr <= .data$obs_time) sample_size <- 200 obs_cens_trunc_samp <- obs_cens_trunc |>   slice_sample(n = sample_size, replace = FALSE)"},{"path":"https://epidist.epinowcast.org/articles/epidist.html","id":"fit","dir":"Articles","previous_headings":"","what":"Fit the model and compare estimates","title":"Getting started with epidist","text":"access complete unaltered obs, simple estimate delay distribution. However, access obs_cens_trunc_samp, delay distribution observe biased (Figure 2.1) must use statistical model. Figure 2.1: histogram delays complete, retrospective data obs_cens match quite closely underlying distribution, whereas obs_cens_trunc_samp show significant systematic bias. instance extent bias caused censoring less caused right truncation. Nonetheless, always recommend [Charniga et al. (2024); Table 2] adjusting censoring present. main function use modelling called epidist()1. fit model \"epidist_latent_model\" uses latent variables time primary secondary event individual2. , first prepare data using as_epidist_latent_model(): data object now class epidist_latent_model. Using data, now call epidist() fit model. parameters model inferred using Bayesian inference. particular, use -U-Turn Sampler (NUTS) Markov chain Monte Carlo (MCMC) algorithm via brms R package (Bürkner 2017). fit object brmsfit object containing MCMC samples parameters model, shown table . Many parameters (e.g. swindow pwindow) called latent variables, lengths corresponding sample_size. Users familiar Stan brms, can work fit directly. tool supports brms fitted model objects compatible fit. Note use default rstan backend generally recommend using cmdstanr backend faster sampling additional features. can set using backend = \"cmdstanr\" following installing CmdStan instructions README. epidist package also provides functions make common post-processing tasks easy. example, individual predictions lognormal delay parameters can extracted using: Figure 2.2 shows lognormal delay distribution obtained using average mu sigma draws. Whereas Figure 2.1 histogram censored, truncated, sampled data substantially different underlying delay distribution, using epidist() obtained much closer match truth. Figure 2.2: fitted delay distribution (pink) compared true delay distribution (black).","code":"bind_rows(   obs_cens |>     mutate(type = \"Complete, retrospective data\") |>     select(delay = delay_daily, type),   obs_cens_trunc_samp |>     mutate(type = \"Censored, truncated,\\nsampled data\") |>     select(delay = delay_daily, type) ) |>   group_by(type, delay, .drop = FALSE) |>   summarise(n = n()) |>   mutate(p = n / sum(n)) |>   ggplot() +   geom_col(     aes(x = delay, y = p, fill = type, group = type),     position = position_dodge2(preserve = \"single\")   ) +   scale_fill_manual(values = c(\"#CC79A7\", \"#0072B2\")) +   geom_function(     data = data.frame(x = c(0, 30)), aes(x = x),     fun = dlnorm,     args = list(       meanlog = secondary_dist[[\"mu\"]],       sdlog = secondary_dist[[\"sigma\"]]     )   ) +   labs(     x = \"Delay between primary and secondary event (days)\",     y = \"Probability density\",     fill = \"\"   ) +   theme_minimal() +   theme(legend.position = \"bottom\") linelist_data <- as_epidist_linelist_data(   obs_cens_trunc_samp$ptime_lwr,   obs_cens_trunc_samp$ptime_upr,   obs_cens_trunc_samp$stime_lwr,   obs_cens_trunc_samp$stime_upr,   obs_time = obs_cens_trunc_samp$obs_time )  data <- as_epidist_latent_model(linelist_data) class(data) #> [1] \"epidist_latent_model\"  \"epidist_linelist_data\" \"tbl_df\"                #> [4] \"tbl\"                   \"data.frame\" fit <- epidist(data = data, chains = 2, cores = 2, refresh = 0) pars <- fit |>   variables(reserved = FALSE) |>   gsub(pattern = \"\\\\[\\\\d+\\\\]\", replacement = \"\")  data.frame(   Parameter = unique(pars), Length = table(pars) ) |>   gt() pred <- predict_delay_parameters(fit) ggplot() +   geom_function(     data = data.frame(x = c(0, 30)),     aes(x = x),     fun = dlnorm,     args = list(       meanlog = secondary_dist[[\"mu\"]],       sdlog = secondary_dist[[\"sigma\"]]     )   ) +   geom_function(     data = data.frame(x = c(0, 30)),     aes(x = x), fun = dlnorm,     args = list(       meanlog = mean(pred$mu),       sdlog = mean(pred$sigma)     ),     col = \"#CC79A7\"   ) +   labs(     x = \"Delay between primary and secondary event (days)\",     y = \"Probability density\"   ) +   theme_minimal()"},{"path":[]},{"path":"https://epidist.epinowcast.org/articles/faq.html","id":"i-would-like-to-work-with-the-samples-output","dir":"Articles","previous_headings":"","what":"I would like to work with the samples output","title":"Frequently asked questions and tips","text":"output call epidist compatible typical Stan workflows. recommend use posterior package working samples MCMC sampling algorithms. example, function posterior::as_draws_df() may used obtain dataframe MCMC draws specified parameters.","code":"library(posterior) draws <- as_draws_df(fit, variable = c(\"Intercept\", \"Intercept_sigma\")) head(draws) ## # A draws_df: 6 iterations, 1 chains, and 2 variables ##   Intercept Intercept_sigma ## 1       1.8           -0.81 ## 2       1.7           -0.81 ## 3       1.8           -0.77 ## 4       1.7           -0.74 ## 5       1.8           -0.79 ## 6       1.7           -0.79 ## # ... hidden reserved variables {'.chain', '.iteration', '.draw'}"},{"path":"https://epidist.epinowcast.org/articles/faq.html","id":"how-can-i-assess-whether-sampling-has-converged","dir":"Articles","previous_headings":"","what":"How can I assess whether sampling has converged?","title":"Frequently asked questions and tips","text":"output call epidist compatible typical Stan workflows. recommend use bayesplot package sampling diagnostic plots. example, function bayesplot::mcmc_trace() can used produce traceplots specified parameters.  also provide function epidist_diagnostics() can used obtain common diagnostics used assess quality fitted model.","code":"library(bayesplot) mcmc_trace(fit, pars = c(\"Intercept\", \"Intercept_sigma\")) epidist_diagnostics(fit) ## # A tibble: 1 × 8 ##    time samples max_rhat divergent_transitions per_divergent_transitions ##   <dbl>   <dbl>    <dbl>                 <dbl>                     <dbl> ## 1  19.7    4000     1.01                     0                         0 ## # ℹ 3 more variables: max_treedepth <dbl>, no_at_max_treedepth <int>, ## #   per_at_max_treedepth <dbl>"},{"path":"https://epidist.epinowcast.org/articles/faq.html","id":"id-like-to-run-a-simulation-study","dir":"Articles","previous_headings":"","what":"I’d like to run a simulation study","title":"Frequently asked questions and tips","text":"recommend use purrr package running many epidist models, example part simulation study. particularly highlight two functions might useful: purrr::map() (similar functions) iterating list inputs. purrr::safely() ensures function called “always succeeds”. words, error captured output, rather ending computation (potentially disrupting call purrr::map()). example use functions, look epidist-paper repository containing code Park et al. (2024). (Note codebase, use map part targets pipeline.)","code":""},{"path":"https://epidist.epinowcast.org/articles/faq.html","id":"how-are-the-default-priors-for-epidist-chosen","dir":"Articles","previous_headings":"","what":"How are the default priors for epidist chosen?","title":"Frequently asked questions and tips","text":"brms provides default priors parameters. However, priors make sense context application. Instead, used prior predictive checking set epidist-specific default priors produce epidemiological delay distribution mean standard deviation parameters reasonable range. example, brms::lognormal() latent individual model, suggest following prior distributions brms mu sigma intercept parameters: (Note functions epidist_family() epidist_prior() mostly internal use!) distributions delay distribution mean standard deviation parameters prior distributions imply:","code":"# Note that we export lognormal() as part of epidist hence no need for brms:: family <- lognormal()  epidist_family <- epidist_family(data, family) epidist_formula <- epidist_formula(   data,   family = epidist_family,   formula = mu ~ 1 )  # NULL here means no replacing priors from the user! epidist_prior <- epidist_prior(   data = data,   family = family,   formula = epidist_formula,   prior = NULL )  epidist_prior ##                 prior     class coef group resp  dpar nlpar lb ub  source ##  student_t(3, 5, 2.5) Intercept                                   default ##  student_t(3, 0, 2.5) Intercept                 sigma             default set.seed(1) fit_ppc <- epidist(   data = data,   formula = mu ~ 1,   family = lognormal(),   sample_prior = \"only\",   seed = 1 ) pred <- predict_delay_parameters(fit_ppc)  pred |>   as.data.frame() |>   pivot_longer(     cols = c(\"mu\", \"sigma\", \"mean\", \"sd\"),     names_to = \"parameter\",     values_to = \"value\"   ) |>   filter(parameter %in% c(\"mean\", \"sd\")) |>   ggplot(aes(x = value, y = after_stat(density))) +   geom_histogram() +   facet_wrap(. ~ parameter, scales = \"free\") +   labs(x = \"\", y = \"Density\") +   theme_minimal() +   scale_x_log10(labels = comma) ## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. quantile(pred$mean, c(0.01, 0.1, 0.25, 0.5, 0.75, 0.9, 0.99)) ##         1%        10%        25%        50%        75%        90%        99%  ##  0.3559844  0.8869435  1.6742645  3.2699269  6.5923091 12.2076804 31.8073094 quantile(pred$sd, c(0.01, 0.1, 0.25, 0.5, 0.75, 0.9, 0.99)) ##         1%        10%        25%        50%        75%        90%        99%  ##  0.1401650  0.3952650  0.8041371  1.7341592  3.9300937  8.2228084 30.9047074"},{"path":"https://epidist.epinowcast.org/articles/faq.html","id":"how-can-i-assess-how-sensitive-the-fitted-posterior-distribution-is-to-the-prior-distribution-used","dir":"Articles","previous_headings":"","what":"How can I assess how sensitive the fitted posterior distribution is to the prior distribution used?","title":"Frequently asked questions and tips","text":"recommend use priorsense package (Kallioinen et al. 2024) check sensitive posterior distribution perturbations prior distribution likelihood using power-scaling analysis:","code":"library(priorsense) powerscale_plot_dens(fit, variable = c(\"Intercept\", \"Intercept_sigma\")) +   theme_minimal()"},{"path":"https://epidist.epinowcast.org/articles/faq.html","id":"what-do-the-parameters-in-my-model-output-correspond-to","dir":"Articles","previous_headings":"","what":"What do the parameters in my model output correspond to?","title":"Frequently asked questions and tips","text":"epidist package uses brms fit models. means model output include brms-style names parameters. , provide table giving correspondence distributional parameter names used brms used standard R functions common likelihood families. Note families brms parameterised measure centrality mu first parameter. parameter necessarily correspond mean: hence provision function add_mean_sd() within epidist add columns containing natural scale mean standard deviation data.frame draws.","code":""},{"path":"https://epidist.epinowcast.org/articles/faq.html","id":"how-can-i-generate-predictions-with-my-fitted-epidist-model","dir":"Articles","previous_headings":"","what":"How can I generate predictions with my fitted epidist model?","title":"Frequently asked questions and tips","text":"possible generate predictions manually working samples model output. However tricky , possible recommend using tidybayes package. particular, following functions may useful: tidybayes::add_epred_draws() predictions expected value delay. tidybayes::add_linpred_draws() predictions delay distributional parameter linear predictors. tidybayes::add_predicted_draws() predictions observed delay. see functions demonstrated vignette, see “Advanced features Ebola data”. short example, generate 4000 predictions (equal number draws) delay observed double censored observation process (primary secondary censoring windows one) :  Importantly, functionality available epidist models using custom brms families posterior_predict posterior_epred methods implemented. example, epidist_latent_model model, currently methods implemented lognormal gamma families. using another family, consider submitting pull request implement methods! , may find useful use primarycensored package.","code":"draws_pmf <- data.frame(relative_obs_time = 1000, pwindow = 1, swindow = 1) |>   add_predicted_draws(fit, ndraws = 4000)  ggplot(draws_pmf, aes(x = .prediction)) +   geom_bar(aes(y = after_stat(count / sum(count)))) +   labs(x = \"Delay\", y = \"PMF\") +   scale_x_continuous(limits = c(0, 30)) +   theme_minimal()"},{"path":"https://epidist.epinowcast.org/articles/faq.html","id":"how-can-i-use-the-cmdstanr-backend","dir":"Articles","previous_headings":"","what":"How can I use the cmdstanr backend?","title":"Frequently asked questions and tips","text":"cmdstanr backend typically performant default rstan backend. use cmdstanr backend, first need install CmdStan (see README details). can check everything need follows:","code":"cmdstanr::cmdstan_version() ## [1] \"2.35.0\""},{"path":[]},{"path":"https://epidist.epinowcast.org/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Adam Howes. Author, maintainer. Sang Woo Park. Author. Sam Abbott. Author.","code":""},{"path":"https://epidist.epinowcast.org/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Adam Howes, Park S, Sam Abbott (NULL). epidist: Estimate Epidemiological Delay Distributions brms. doi:10.5281/zenodo.5637165.","code":"@Manual{,   title = {epidist: Estimate Epidemiological Delay Distributions With brms},   author = {{Adam Howes} and Sang Woo Park and {Sam Abbott}},   year = {NULL},   doi = {10.5281/zenodo.5637165}, }"},{"path":[]},{"path":"https://epidist.epinowcast.org/index.html","id":"summary","dir":"","previous_headings":"","what":"Summary","title":"Estimate Epidemiological Delay Distributions With brms","text":"Understanding accurately estimating epidemiological delay distributions important public health policy. estimates directly influence epidemic situational awareness, control strategies, resource allocation. package, provide methods address key challenges estimating distributions, including truncation, interval censoring, dynamical biases. Despite importance, issues frequently overlooked, often resulting biased conclusions.","code":""},{"path":"https://epidist.epinowcast.org/index.html","id":"quickstart","dir":"","previous_headings":"","what":"Quickstart","title":"Estimate Epidemiological Delay Distributions With brms","text":"learn epidist recommend reading vignettes order: Getting started epidist Using epidist estimate delay symptom onset positive test Ebola outbreak Sierra Leone Approximate Bayesian inference epidist","code":""},{"path":"https://epidist.epinowcast.org/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Estimate Epidemiological Delay Distributions With brms","text":"can use remotes package install development version Github (warning! version may contain breaking changes /bugs): default epidist uses rstan package fitting models. wish use cmdstanr package instead, need install CmdStan, also entails suitable C++ toolchain setup. recommend using cmdstanr package manage CmdStan. Stan team provides instructions Getting started cmdstanr vignette, details support package site, brief version : Note: can speed CmdStan installation using cores argument. installing particular version epidist, may also need install past version CmdStan, can version argument.","code":"remotes::install_github(   file.path(\"epinowcast\", \"epidist\"),   dependencies = TRUE ) # if you have not yet installed `epidist`, or you installed it without # `Suggests` dependencies install.packages(   \"cmdstanr\",   repos = c(\"https://mc-stan.org/r-packages/\", getOption(\"repos\")) )  # once `cmdstanr` is installed cmdstanr::install_cmdstan()"},{"path":"https://epidist.epinowcast.org/index.html","id":"resources","dir":"","previous_headings":"","what":"Resources","title":"Estimate Epidemiological Delay Distributions With brms","text":"organisation website includes links resources, guest posts, seminar schedule upcoming past recordings. community forum areas question answer considering new methods tools, among others. generally interested real-time analysis infectious disease, may find useful even use epidist.","code":""},{"path":"https://epidist.epinowcast.org/index.html","id":"contributing","dir":"","previous_headings":"","what":"Contributing","title":"Estimate Epidemiological Delay Distributions With brms","text":"welcome contributions new contributors! particularly appreciate help identifying identified issues. Please check add issues, /add pull request.","code":""},{"path":"https://epidist.epinowcast.org/index.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Estimate Epidemiological Delay Distributions With brms","text":"use epidist work, please consider citing using citation(\"epidist\"). using methodology, methodology based, please cite relevant papers. may include: Estimating epidemiological delay distributions infectious diseases Park et al. (2024) Best practices estimating reporting epidemiological delay distributions infectious diseases using public health surveillance healthcare data Charniga et al. (2024)","code":"citation(\"epidist\") To cite package 'epidist' in publications use:    Adam Howes, Park S, Sam Abbott (NULL). _epidist: Estimate   Epidemiological Delay Distributions With brms_.   doi:10.5281/zenodo.5637165 <https://doi.org/10.5281/zenodo.5637165>.  A BibTeX entry for LaTeX users is    @Manual{,     title = {epidist: Estimate Epidemiological Delay Distributions With brms},     author = {{Adam Howes} and Sang Woo Park and {Sam Abbott}},     year = {NULL},     doi = {10.5281/zenodo.5637165},   }"},{"path":"https://epidist.epinowcast.org/index.html","id":"contributors","dir":"","previous_headings":"","what":"Contributors","title":"Estimate Epidemiological Delay Distributions With brms","text":"contributions project gratefully acknowledged using allcontributors package following -contributors specification. Contributions kind welcome!","code":""},{"path":"https://epidist.epinowcast.org/index.html","id":"code","dir":"","previous_headings":"Contributors","what":"Code","title":"Estimate Epidemiological Delay Distributions With brms","text":"seabbs, athowes, parksw3, damonbayer, medewitt","code":""},{"path":"https://epidist.epinowcast.org/index.html","id":"issue-authors","dir":"","previous_headings":"Contributors","what":"Issue Authors","title":"Estimate Epidemiological Delay Distributions With brms","text":"kgostic, TimTaylor, jamesmbaazam","code":""},{"path":"https://epidist.epinowcast.org/index.html","id":"issue-contributors","dir":"","previous_headings":"Contributors","what":"Issue Contributors","title":"Estimate Epidemiological Delay Distributions With brms","text":"pearsonca, sbfnk, SamuelBrand1, zsusswein","code":""},{"path":"https://epidist.epinowcast.org/reference/add_mean_sd.default.html","id":null,"dir":"Reference","previous_headings":"","what":"Default method for add natural scale parameters — add_mean_sd.default","title":"Default method for add natural scale parameters — add_mean_sd.default","text":"Default method add natural scale parameters","code":""},{"path":"https://epidist.epinowcast.org/reference/add_mean_sd.default.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Default method for add natural scale parameters — add_mean_sd.default","text":"","code":"# Default S3 method add_mean_sd(data, ...)"},{"path":"https://epidist.epinowcast.org/reference/add_mean_sd.default.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Default method for add natural scale parameters — add_mean_sd.default","text":"data dataframe distributional parameters ... Additional arguments method.","code":""},{"path":[]},{"path":"https://epidist.epinowcast.org/reference/add_mean_sd.gamma_samples.html","id":null,"dir":"Reference","previous_headings":"","what":"Add natural scale mean and standard deviation parameters for a latent gamma model — add_mean_sd.gamma_samples","title":"Add natural scale mean and standard deviation parameters for a latent gamma model — add_mean_sd.gamma_samples","text":", mu shape distributional parameters brms.","code":""},{"path":"https://epidist.epinowcast.org/reference/add_mean_sd.gamma_samples.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add natural scale mean and standard deviation parameters for a latent gamma model — add_mean_sd.gamma_samples","text":"","code":"# S3 method for class 'gamma_samples' add_mean_sd(data, ...)"},{"path":"https://epidist.epinowcast.org/reference/add_mean_sd.gamma_samples.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add natural scale mean and standard deviation parameters for a latent gamma model — add_mean_sd.gamma_samples","text":"data dataframe distributional parameters ... Additional arguments method.","code":""},{"path":[]},{"path":"https://epidist.epinowcast.org/reference/add_mean_sd.html","id":null,"dir":"Reference","previous_headings":"","what":"Add natural scale mean and standard deviation parameters — add_mean_sd","title":"Add natural scale mean and standard deviation parameters — add_mean_sd","text":"Add natural scale mean standard deviation parameters","code":""},{"path":"https://epidist.epinowcast.org/reference/add_mean_sd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add natural scale mean and standard deviation parameters — add_mean_sd","text":"","code":"add_mean_sd(data, ...)"},{"path":"https://epidist.epinowcast.org/reference/add_mean_sd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add natural scale mean and standard deviation parameters — add_mean_sd","text":"data dataframe distributional parameters ... Additional arguments method.","code":""},{"path":[]},{"path":"https://epidist.epinowcast.org/reference/add_mean_sd.lognormal_samples.html","id":null,"dir":"Reference","previous_headings":"","what":"Add natural scale mean and standard deviation parameters for a latent lognormal model — add_mean_sd.lognormal_samples","title":"Add natural scale mean and standard deviation parameters for a latent lognormal model — add_mean_sd.lognormal_samples","text":"Note input parameters mu sigma, corresponding distributional parameters used brms lognormal family.","code":""},{"path":"https://epidist.epinowcast.org/reference/add_mean_sd.lognormal_samples.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add natural scale mean and standard deviation parameters for a latent lognormal model — add_mean_sd.lognormal_samples","text":"","code":"# S3 method for class 'lognormal_samples' add_mean_sd(data, ...)"},{"path":"https://epidist.epinowcast.org/reference/add_mean_sd.lognormal_samples.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add natural scale mean and standard deviation parameters for a latent lognormal model — add_mean_sd.lognormal_samples","text":"data dataframe distributional parameters ... Additional arguments method.","code":""},{"path":[]},{"path":"https://epidist.epinowcast.org/reference/as_epidist_latent_model.epidist_linelist_data.html","id":null,"dir":"Reference","previous_headings":"","what":"The latent model method for epidist_linelist_data objects — as_epidist_latent_model.epidist_linelist_data","title":"The latent model method for epidist_linelist_data objects — as_epidist_latent_model.epidist_linelist_data","text":"latent model method epidist_linelist_data objects","code":""},{"path":"https://epidist.epinowcast.org/reference/as_epidist_latent_model.epidist_linelist_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The latent model method for epidist_linelist_data objects — as_epidist_latent_model.epidist_linelist_data","text":"","code":"# S3 method for class 'epidist_linelist_data' as_epidist_latent_model(data)"},{"path":"https://epidist.epinowcast.org/reference/as_epidist_latent_model.epidist_linelist_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The latent model method for epidist_linelist_data objects — as_epidist_latent_model.epidist_linelist_data","text":"data epidist_linelist_data object","code":""},{"path":[]},{"path":"https://epidist.epinowcast.org/reference/as_epidist_latent_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert an object to an epidist_latent_model object — as_epidist_latent_model","title":"Convert an object to an epidist_latent_model object — as_epidist_latent_model","text":"Convert object epidist_latent_model object","code":""},{"path":"https://epidist.epinowcast.org/reference/as_epidist_latent_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert an object to an epidist_latent_model object — as_epidist_latent_model","text":"","code":"as_epidist_latent_model(data)"},{"path":"https://epidist.epinowcast.org/reference/as_epidist_latent_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert an object to an epidist_latent_model object — as_epidist_latent_model","text":"data object converted class epidist_latent_model","code":""},{"path":[]},{"path":"https://epidist.epinowcast.org/reference/as_epidist_linelist_data.data.frame.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an epidist_linelist_data object from a data frame with event dates — as_epidist_linelist_data.data.frame","title":"Create an epidist_linelist_data object from a data frame with event dates — as_epidist_linelist_data.data.frame","text":"Create epidist_linelist_data object data frame event dates","code":""},{"path":"https://epidist.epinowcast.org/reference/as_epidist_linelist_data.data.frame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an epidist_linelist_data object from a data frame with event dates — as_epidist_linelist_data.data.frame","text":"","code":"# S3 method for class 'data.frame' as_epidist_linelist_data(   data,   pdate_lwr = NULL,   sdate_lwr = NULL,   pdate_upr = NULL,   sdate_upr = NULL,   obs_date = NULL,   ... )"},{"path":"https://epidist.epinowcast.org/reference/as_epidist_linelist_data.data.frame.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an epidist_linelist_data object from a data frame with event dates — as_epidist_linelist_data.data.frame","text":"data data.frame containing line list data pdate_lwr string giving column data containing primary event lower bound datetime. Defaults NULL assumes variable pdate_lwr present. sdate_lwr string giving column data containing secondary event lower bound datetime. Defaults NULL assumes variable sdate_lwr present. pdate_upr string giving column data containing primary event upper bound datetime. column exists data used, otherwise supplied value pdate_lwr + 1 day used. sdate_upr string giving column data containing secondary event upper bound datetime. column exists data used, otherwise supplied value sdate_lwr + 1 day used. obs_date string giving column data containing observation time datetime. Optional, supplied maximum sdate_upr used. ... Additional arguments passed methods","code":""},{"path":[]},{"path":"https://epidist.epinowcast.org/reference/as_epidist_linelist_data.default.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an epidist_linelist_data object from vectors of event times — as_epidist_linelist_data.default","title":"Create an epidist_linelist_data object from vectors of event times — as_epidist_linelist_data.default","text":"Create epidist_linelist_data object vectors event times","code":""},{"path":"https://epidist.epinowcast.org/reference/as_epidist_linelist_data.default.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an epidist_linelist_data object from vectors of event times — as_epidist_linelist_data.default","text":"","code":"# Default S3 method as_epidist_linelist_data(   data,   ptime_upr = NULL,   stime_lwr = NULL,   stime_upr = NULL,   obs_time = NULL,   ... )"},{"path":"https://epidist.epinowcast.org/reference/as_epidist_linelist_data.default.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an epidist_linelist_data object from vectors of event times — as_epidist_linelist_data.default","text":"data Numeric vector giving lower bounds primary times ptime_upr Numeric vector giving upper bounds primary times stime_lwr, stime_upr Numeric vectors giving lower upper bounds secondary times obs_time Numeric vector giving observation times ... Additional columns add epidist_linelist_data object","code":""},{"path":[]},{"path":"https://epidist.epinowcast.org/reference/as_epidist_linelist_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an epidist_linelist_data object — as_epidist_linelist_data","title":"Create an epidist_linelist_data object — as_epidist_linelist_data","text":"Create epidist_linelist_data object","code":""},{"path":"https://epidist.epinowcast.org/reference/as_epidist_linelist_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an epidist_linelist_data object — as_epidist_linelist_data","text":"","code":"as_epidist_linelist_data(data, ...)"},{"path":"https://epidist.epinowcast.org/reference/as_epidist_linelist_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an epidist_linelist_data object — as_epidist_linelist_data","text":"data data convert ... Additional arguments passed methods","code":""},{"path":[]},{"path":"https://epidist.epinowcast.org/reference/as_epidist_naive_model.epidist_linelist_data.html","id":null,"dir":"Reference","previous_headings":"","what":"The naive model method for epidist_linelist_data objects — as_epidist_naive_model.epidist_linelist_data","title":"The naive model method for epidist_linelist_data objects — as_epidist_naive_model.epidist_linelist_data","text":"naive model method epidist_linelist_data objects","code":""},{"path":"https://epidist.epinowcast.org/reference/as_epidist_naive_model.epidist_linelist_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The naive model method for epidist_linelist_data objects — as_epidist_naive_model.epidist_linelist_data","text":"","code":"# S3 method for class 'epidist_linelist_data' as_epidist_naive_model(data)"},{"path":"https://epidist.epinowcast.org/reference/as_epidist_naive_model.epidist_linelist_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The naive model method for epidist_linelist_data objects — as_epidist_naive_model.epidist_linelist_data","text":"data epidist_linelist_data object","code":""},{"path":[]},{"path":"https://epidist.epinowcast.org/reference/as_epidist_naive_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare naive model to pass through to brms — as_epidist_naive_model","title":"Prepare naive model to pass through to brms — as_epidist_naive_model","text":"Prepare naive model pass brms","code":""},{"path":"https://epidist.epinowcast.org/reference/as_epidist_naive_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare naive model to pass through to brms — as_epidist_naive_model","text":"","code":"as_epidist_naive_model(data)"},{"path":"https://epidist.epinowcast.org/reference/as_epidist_naive_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare naive model to pass through to brms — as_epidist_naive_model","text":"data object converted class epidist_naive_model","code":""},{"path":[]},{"path":"https://epidist.epinowcast.org/reference/assert_epidist.epidist_linelist_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Assert validity of epidist_linelist_data objects — assert_epidist.epidist_linelist_data","title":"Assert validity of epidist_linelist_data objects — assert_epidist.epidist_linelist_data","text":"Assert validity epidist_linelist_data objects","code":""},{"path":"https://epidist.epinowcast.org/reference/assert_epidist.epidist_linelist_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assert validity of epidist_linelist_data objects — assert_epidist.epidist_linelist_data","text":"","code":"# S3 method for class 'epidist_linelist_data' assert_epidist(data, ...)"},{"path":"https://epidist.epinowcast.org/reference/assert_epidist.epidist_linelist_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assert validity of epidist_linelist_data objects — assert_epidist.epidist_linelist_data","text":"data object check ... Additional arguments","code":""},{"path":[]},{"path":"https://epidist.epinowcast.org/reference/assert_epidist.html","id":null,"dir":"Reference","previous_headings":"","what":"Validation for epidist objects — assert_epidist","title":"Validation for epidist objects — assert_epidist","text":"Validation epidist objects","code":""},{"path":"https://epidist.epinowcast.org/reference/assert_epidist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validation for epidist objects — assert_epidist","text":"","code":"assert_epidist(data, ...)"},{"path":"https://epidist.epinowcast.org/reference/assert_epidist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validation for epidist objects — assert_epidist","text":"data Object validate ... Additional arguments","code":""},{"path":"https://epidist.epinowcast.org/reference/assert_epidist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validation for epidist objects — assert_epidist","text":"NULL invisibly","code":""},{"path":"https://epidist.epinowcast.org/reference/dot-add_dpar_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Additional distributional parameter information for brms families — .add_dpar_info","title":"Additional distributional parameter information for brms families — .add_dpar_info","text":"Includes additional information (link functions parameter bound) distributional parameters brms family conditional mean mu.","code":""},{"path":"https://epidist.epinowcast.org/reference/dot-add_dpar_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Additional distributional parameter information for brms families — .add_dpar_info","text":"","code":".add_dpar_info(family)"},{"path":"https://epidist.epinowcast.org/reference/dot-add_dpar_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Additional distributional parameter information for brms families — .add_dpar_info","text":"family description response distribution link function used model. Every family function link argument allowing users specify link function applied response variable. specified, default links used. details supported families see brmsfamily(). Commonly used, lognormal(), also reexported part epidist.","code":""},{"path":"https://epidist.epinowcast.org/reference/dot-floor_mult.html","id":null,"dir":"Reference","previous_headings":"","what":"Round to the nearest multiple — .floor_mult","title":"Round to the nearest multiple — .floor_mult","text":"function rounds input x nearest multiple number f. example, f = 0.2 x = 1.5 output 1.4. f = 1 floor_mult behaves floor. f = 0 x returned.","code":""},{"path":"https://epidist.epinowcast.org/reference/dot-floor_mult.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Round to the nearest multiple — .floor_mult","text":"","code":".floor_mult(x, f = 1)"},{"path":"https://epidist.epinowcast.org/reference/dot-floor_mult.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Round to the nearest multiple — .floor_mult","text":"x number rounded f positive number specifying multiple rounded ","code":""},{"path":"https://epidist.epinowcast.org/reference/dot-make_intercepts_explicit.html","id":null,"dir":"Reference","previous_headings":"","what":"Include implicit intercepts in brms formula as explicit — .make_intercepts_explicit","title":"Include implicit intercepts in brms formula as explicit — .make_intercepts_explicit","text":"function detects distributional parameters brms formula object, alters formula include explicit intercept parameters .e. ~ 1.","code":""},{"path":"https://epidist.epinowcast.org/reference/dot-make_intercepts_explicit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Include implicit intercepts in brms formula as explicit — .make_intercepts_explicit","text":"","code":".make_intercepts_explicit(formula)"},{"path":"https://epidist.epinowcast.org/reference/dot-make_intercepts_explicit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Include implicit intercepts in brms formula as explicit — .make_intercepts_explicit","text":"formula ...","code":""},{"path":"https://epidist.epinowcast.org/reference/dot-rename_columns.html","id":null,"dir":"Reference","previous_headings":"","what":"Rename the columns of a data.frame — .rename_columns","title":"Rename the columns of a data.frame — .rename_columns","text":"Rename columns data.frame","code":""},{"path":"https://epidist.epinowcast.org/reference/dot-rename_columns.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rename the columns of a data.frame — .rename_columns","text":"","code":".rename_columns(df, new_names, old_names)"},{"path":"https://epidist.epinowcast.org/reference/dot-rename_columns.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rename the columns of a data.frame — .rename_columns","text":"df ... new_names ... old_names ...","code":""},{"path":"https://epidist.epinowcast.org/reference/dot-replace_prior.html","id":null,"dir":"Reference","previous_headings":"","what":"Replace brms prior distributions — .replace_prior","title":"Replace brms prior distributions — .replace_prior","text":"function takes old_prior replaces prior distributions contained corresponding prior distribution prior. prior distribution prior match old_prior function can optionally give warning.","code":""},{"path":"https://epidist.epinowcast.org/reference/dot-replace_prior.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Replace brms prior distributions — .replace_prior","text":"","code":".replace_prior(old_prior, prior, warn = FALSE)"},{"path":"https://epidist.epinowcast.org/reference/dot-replace_prior.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Replace brms prior distributions — .replace_prior","text":"old_prior One prior distributions class brmsprior prior One prior distributions class brmsprior warn TRUE warning displayed new_prior provided matching old_prior. Defaults FALSE","code":""},{"path":"https://epidist.epinowcast.org/reference/dot-stan_chunk.html","id":null,"dir":"Reference","previous_headings":"","what":"Read in an epidist Stan code chunk — .stan_chunk","title":"Read in an epidist Stan code chunk — .stan_chunk","text":"function used obtain Stan code chunks stan/ folder epidist package. used within epidist_stancode() function.","code":""},{"path":"https://epidist.epinowcast.org/reference/dot-stan_chunk.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read in an epidist Stan code chunk — .stan_chunk","text":"","code":".stan_chunk(path)"},{"path":"https://epidist.epinowcast.org/reference/dot-stan_chunk.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read in an epidist Stan code chunk — .stan_chunk","text":"path path within stan/ folder installed epidist package Stan code chunk interest.","code":""},{"path":"https://epidist.epinowcast.org/reference/dot-stan_chunk.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read in an epidist Stan code chunk — .stan_chunk","text":"character string containing Stan code chunk interest.","code":""},{"path":"https://epidist.epinowcast.org/reference/dot-version_stanvar.html","id":null,"dir":"Reference","previous_headings":"","what":"Label a epidist Stan model with a version indicator — .version_stanvar","title":"Label a epidist Stan model with a version indicator — .version_stanvar","text":"function used within epidist_stancode() label generated Stan code version epidist used. view full Stan code particular epidist model, recommend use brms::make_stancode().","code":""},{"path":"https://epidist.epinowcast.org/reference/dot-version_stanvar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Label a epidist Stan model with a version indicator — .version_stanvar","text":"","code":".version_stanvar()"},{"path":"https://epidist.epinowcast.org/reference/dot-version_stanvar.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Label a epidist Stan model with a version indicator — .version_stanvar","text":"brms Stan chunk containing epidist package version used build Stan code.","code":""},{"path":"https://epidist.epinowcast.org/reference/epidist-package.html","id":null,"dir":"Reference","previous_headings":"","what":"epidist: Estimate Epidemiological Delay Distributions With brms — epidist-package","title":"epidist: Estimate Epidemiological Delay Distributions With brms — epidist-package","text":"Understanding accurately estimating epidemiological delay distributions important public health policy. estimates directly influence epidemic situational awareness, control strategies, resource allocation. package, provide methods address key challenges estimating distributions, including truncation, interval censoring, dynamical biases. Despite importance, issues frequently overlooked, often resulting biased conclusions.","code":""},{"path":[]},{"path":"https://epidist.epinowcast.org/reference/epidist-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"epidist: Estimate Epidemiological Delay Distributions With brms — epidist-package","text":"Maintainer: Adam Howes adamthowes@gmail.com (ORCID) Authors: Sang Woo Park swp2@princeton.edu (ORCID) Sam Abbott contact@samabbott.co.uk (ORCID)","code":""},{"path":"https://epidist.epinowcast.org/reference/epidist.default.html","id":null,"dir":"Reference","previous_headings":"","what":"Default method used for interface using brms — epidist.default","title":"Default method used for interface using brms — epidist.default","text":"Default method used interface using brms","code":""},{"path":"https://epidist.epinowcast.org/reference/epidist.default.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Default method used for interface using brms — epidist.default","text":"","code":"# Default S3 method epidist(   data,   formula = mu ~ 1,   family = lognormal(),   prior = NULL,   fn = brms::brm,   ... )"},{"path":"https://epidist.epinowcast.org/reference/epidist.default.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Default method used for interface using brms — epidist.default","text":"data object class corresponding implemented model. formula object class stats::formula brms::brmsformula (one can coerced classes). symbolic description model fitted. formula must provided distributional parameter mu, may optionally provided distributional parameters. family description response distribution link function used model. Every family function link argument allowing users specify link function applied response variable. specified, default links used. details supported families see brmsfamily(). Commonly used, lognormal(), also reexported part epidist. prior One brmsprior objects created brms::set_prior() related functions. priors passed epidist_prior() prior argument. fn internal function called. default brms::brm() performs inference specified model. options brms::make_stancode() returns Stan code specified model, brms::make_standata() returns data passed Stan. two later options may useful model debugging extensions. ... Additional arguments passed fn method.","code":""},{"path":[]},{"path":"https://epidist.epinowcast.org/reference/epidist.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit epidemiological delay distributions using a brms interface — epidist","title":"Fit epidemiological delay distributions using a brms interface — epidist","text":"Fit epidemiological delay distributions using brms interface","code":""},{"path":"https://epidist.epinowcast.org/reference/epidist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit epidemiological delay distributions using a brms interface — epidist","text":"","code":"epidist(data, formula, family, prior, fn, ...)"},{"path":"https://epidist.epinowcast.org/reference/epidist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit epidemiological delay distributions using a brms interface — epidist","text":"data object class corresponding implemented model. formula object class stats::formula brms::brmsformula (one can coerced classes). symbolic description model fitted. formula must provided distributional parameter mu, may optionally provided distributional parameters. family description response distribution link function used model. Every family function link argument allowing users specify link function applied response variable. specified, default links used. details supported families see brmsfamily(). Commonly used, lognormal(), also reexported part epidist. prior One brmsprior objects created brms::set_prior() related functions. priors passed epidist_prior() prior argument. fn internal function called. default brms::brm() performs inference specified model. options brms::make_stancode() returns Stan code specified model, brms::make_standata() returns data passed Stan. two later options may useful model debugging extensions. ... Additional arguments passed fn method.","code":""},{"path":[]},{"path":"https://epidist.epinowcast.org/reference/epidist_diagnostics.html","id":null,"dir":"Reference","previous_headings":"","what":"Diagnostics for epidist_fit models — epidist_diagnostics","title":"Diagnostics for epidist_fit models — epidist_diagnostics","text":"function computes diagnostics assess quality fitted model. fitting algorithm used \"sampling\" (HMC) output epidist_diagnostics data.frame containing: time: total time taken fit chains samples: total number samples across chains max_rhat: highest value Gelman-Rubin statistic divergent_transitions: total number divergent transitions per_divergent_transitions: proportion samples divergent transitions max_treedepth: highest value treedepth HMC parameter no_at_max_treedepth: number samples attained max_treedepth per_at_max_treedepth: proportion samples attained max_treedepth","code":""},{"path":"https://epidist.epinowcast.org/reference/epidist_diagnostics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Diagnostics for epidist_fit models — epidist_diagnostics","text":"","code":"epidist_diagnostics(fit)"},{"path":"https://epidist.epinowcast.org/reference/epidist_diagnostics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Diagnostics for epidist_fit models — epidist_diagnostics","text":"fit fitted model class epidist_fit","code":""},{"path":"https://epidist.epinowcast.org/reference/epidist_diagnostics.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Diagnostics for epidist_fit models — epidist_diagnostics","text":"fitting algorithm \"sampling\" (see brms::brm() possible algorithms) diagnostics yet implemented.","code":""},{"path":"https://epidist.epinowcast.org/reference/epidist_family.html","id":null,"dir":"Reference","previous_headings":"","what":"Define epidist family — epidist_family","title":"Define epidist family — epidist_family","text":"function used within epidist() create model specific custom brms family object. custom family passed brms. unlikely user need function, export nonetheless transparent happens inside call epidist().","code":""},{"path":"https://epidist.epinowcast.org/reference/epidist_family.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Define epidist family — epidist_family","text":"","code":"epidist_family(data, family = lognormal(), ...)"},{"path":"https://epidist.epinowcast.org/reference/epidist_family.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Define epidist family — epidist_family","text":"data object class corresponding implemented model. family description response distribution link function used model. Every family function link argument allowing users specify link function applied response variable. specified, default links used. details supported families see brmsfamily(). Commonly used, lognormal(), also reexported part epidist. ... Additional arguments passed fn method.","code":""},{"path":[]},{"path":"https://epidist.epinowcast.org/reference/epidist_family_model.default.html","id":null,"dir":"Reference","previous_headings":"","what":"Default method for defining a model specific family — epidist_family_model.default","title":"Default method for defining a model specific family — epidist_family_model.default","text":"Default method defining model specific family","code":""},{"path":"https://epidist.epinowcast.org/reference/epidist_family_model.default.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Default method for defining a model specific family — epidist_family_model.default","text":"","code":"# Default S3 method epidist_family_model(data, family, ...)"},{"path":"https://epidist.epinowcast.org/reference/epidist_family_model.default.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Default method for defining a model specific family — epidist_family_model.default","text":"data object class corresponding implemented model. family Output call brms::brmsfamily() additional information provided .add_dpar_info() ... Additional arguments passed fn method.","code":""},{"path":[]},{"path":"https://epidist.epinowcast.org/reference/epidist_family_model.epidist_latent_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Create the model-specific component of an epidist custom family — epidist_family_model.epidist_latent_model","title":"Create the model-specific component of an epidist custom family — epidist_family_model.epidist_latent_model","text":"Create model-specific component epidist custom family","code":""},{"path":"https://epidist.epinowcast.org/reference/epidist_family_model.epidist_latent_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create the model-specific component of an epidist custom family — epidist_family_model.epidist_latent_model","text":"","code":"# S3 method for class 'epidist_latent_model' epidist_family_model(data, family, ...)"},{"path":"https://epidist.epinowcast.org/reference/epidist_family_model.epidist_latent_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create the model-specific component of an epidist custom family — epidist_family_model.epidist_latent_model","text":"data object class corresponding implemented model. family Output call brms::brmsfamily() additional information provided .add_dpar_info() ... Additional arguments passed method.","code":""},{"path":[]},{"path":"https://epidist.epinowcast.org/reference/epidist_family_model.html","id":null,"dir":"Reference","previous_headings":"","what":"The model-specific parts of an epidist_family() call — epidist_family_model","title":"The model-specific parts of an epidist_family() call — epidist_family_model","text":"model-specific parts epidist_family() call model-specific parts epidist_formula() call","code":""},{"path":"https://epidist.epinowcast.org/reference/epidist_family_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The model-specific parts of an epidist_family() call — epidist_family_model","text":"","code":"epidist_family_model(data, family, ...)  epidist_formula_model(data, formula, ...)"},{"path":"https://epidist.epinowcast.org/reference/epidist_family_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The model-specific parts of an epidist_family() call — epidist_family_model","text":"data object class corresponding implemented model. family Output call brms::brmsfamily() additional information provided .add_dpar_info() ... Additional arguments passed fn method. formula object class stats::formula brms::brmsformula (one can coerced classes). symbolic description model fitted. formula must provided distributional parameter mu, may optionally provided distributional parameters.","code":""},{"path":[]},{"path":"https://epidist.epinowcast.org/reference/epidist_family_prior.default.html","id":null,"dir":"Reference","previous_headings":"","what":"Default family specific prior distributions — epidist_family_prior.default","title":"Default family specific prior distributions — epidist_family_prior.default","text":"default, return family specific prior distributions.","code":""},{"path":"https://epidist.epinowcast.org/reference/epidist_family_prior.default.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Default family specific prior distributions — epidist_family_prior.default","text":"","code":"# Default S3 method epidist_family_prior(family, formula, ...)"},{"path":"https://epidist.epinowcast.org/reference/epidist_family_prior.default.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Default family specific prior distributions — epidist_family_prior.default","text":"family description response distribution link function used model. Every family function link argument allowing users specify link function applied response variable. specified, default links used. details supported families see brmsfamily(). Commonly used, lognormal(), also reexported part epidist. formula object class stats::formula brms::brmsformula (one can coerced classes). symbolic description model fitted. formula must provided distributional parameter mu, may optionally provided distributional parameters. ... Additional arguments passed fn method.","code":""},{"path":[]},{"path":"https://epidist.epinowcast.org/reference/epidist_family_prior.html","id":null,"dir":"Reference","previous_headings":"","what":"Family specific prior distributions — epidist_family_prior","title":"Family specific prior distributions — epidist_family_prior","text":"function contains brms prior distributions specific particular likelihood families e.g. brms::lognormal().","code":""},{"path":"https://epidist.epinowcast.org/reference/epidist_family_prior.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Family specific prior distributions — epidist_family_prior","text":"","code":"epidist_family_prior(family, ...)"},{"path":"https://epidist.epinowcast.org/reference/epidist_family_prior.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Family specific prior distributions — epidist_family_prior","text":"family description response distribution link function used model. Every family function link argument allowing users specify link function applied response variable. specified, default links used. details supported families see brmsfamily(). Commonly used, lognormal(), also reexported part epidist. ... Additional arguments passed fn method.","code":""},{"path":[]},{"path":"https://epidist.epinowcast.org/reference/epidist_family_prior.lognormal.html","id":null,"dir":"Reference","previous_headings":"","what":"Family specific prior distributions for the lognormal family — epidist_family_prior.lognormal","title":"Family specific prior distributions for the lognormal family — epidist_family_prior.lognormal","text":"suggest priors overwrite brms defaults lognormal family.","code":""},{"path":"https://epidist.epinowcast.org/reference/epidist_family_prior.lognormal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Family specific prior distributions for the lognormal family — epidist_family_prior.lognormal","text":"","code":"# S3 method for class 'lognormal' epidist_family_prior(family, formula, ...)"},{"path":"https://epidist.epinowcast.org/reference/epidist_family_prior.lognormal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Family specific prior distributions for the lognormal family — epidist_family_prior.lognormal","text":"family description response distribution link function used model. Every family function link argument allowing users specify link function applied response variable. specified, default links used. details supported families see brmsfamily(). Commonly used, lognormal(), also reexported part epidist. formula object class stats::formula brms::brmsformula (one can coerced classes). symbolic description model fitted. formula must provided distributional parameter mu, may optionally provided distributional parameters. ... Additional arguments passed fn method.","code":""},{"path":[]},{"path":"https://epidist.epinowcast.org/reference/epidist_family_reparam.default.html","id":null,"dir":"Reference","previous_headings":"","what":"Default method for families which do not require a reparameterisation — epidist_family_reparam.default","title":"Default method for families which do not require a reparameterisation — epidist_family_reparam.default","text":"Default method families require reparameterisation","code":""},{"path":"https://epidist.epinowcast.org/reference/epidist_family_reparam.default.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Default method for families which do not require a reparameterisation — epidist_family_reparam.default","text":"","code":"# Default S3 method epidist_family_reparam(family, ...)"},{"path":"https://epidist.epinowcast.org/reference/epidist_family_reparam.default.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Default method for families which do not require a reparameterisation — epidist_family_reparam.default","text":"family description response distribution link function used model. Every family function link argument allowing users specify link function applied response variable. specified, default links used. details supported families see brmsfamily(). Commonly used, lognormal(), also reexported part epidist. ... Additional arguments passed fn method.","code":""},{"path":[]},{"path":"https://epidist.epinowcast.org/reference/epidist_family_reparam.gamma.html","id":null,"dir":"Reference","previous_headings":"","what":"Reparameterisation for the gamma family — epidist_family_reparam.gamma","title":"Reparameterisation for the gamma family — epidist_family_reparam.gamma","text":"Reparameterisation gamma family","code":""},{"path":"https://epidist.epinowcast.org/reference/epidist_family_reparam.gamma.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reparameterisation for the gamma family — epidist_family_reparam.gamma","text":"","code":"# S3 method for class 'gamma' epidist_family_reparam(family, ...)"},{"path":"https://epidist.epinowcast.org/reference/epidist_family_reparam.gamma.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reparameterisation for the gamma family — epidist_family_reparam.gamma","text":"family description response distribution link function used model. Every family function link argument allowing users specify link function applied response variable. specified, default links used. details supported families see brmsfamily(). Commonly used, lognormal(), also reexported part epidist. ... Additional arguments passed fn method.","code":""},{"path":[]},{"path":"https://epidist.epinowcast.org/reference/epidist_family_reparam.html","id":null,"dir":"Reference","previous_headings":"","what":"Reparameterise an epidist family to align brms and Stan — epidist_family_reparam","title":"Reparameterise an epidist family to align brms and Stan — epidist_family_reparam","text":"Reparameterise epidist family align brms Stan","code":""},{"path":"https://epidist.epinowcast.org/reference/epidist_family_reparam.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reparameterise an epidist family to align brms and Stan — epidist_family_reparam","text":"","code":"epidist_family_reparam(family, ...)"},{"path":"https://epidist.epinowcast.org/reference/epidist_family_reparam.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reparameterise an epidist family to align brms and Stan — epidist_family_reparam","text":"family description response distribution link function used model. Every family function link argument allowing users specify link function applied response variable. specified, default links used. details supported families see brmsfamily(). Commonly used, lognormal(), also reexported part epidist. ... Additional arguments passed fn method.","code":""},{"path":[]},{"path":"https://epidist.epinowcast.org/reference/epidist_formula.html","id":null,"dir":"Reference","previous_headings":"","what":"Define a model specific formula — epidist_formula","title":"Define a model specific formula — epidist_formula","text":"function used within epidist() create formula object passed brms. unlikely user need function, export nonetheless transparent exactly happening inside call epidist().","code":""},{"path":"https://epidist.epinowcast.org/reference/epidist_formula.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Define a model specific formula — epidist_formula","text":"","code":"epidist_formula(data, family, formula, ...)"},{"path":"https://epidist.epinowcast.org/reference/epidist_formula.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Define a model specific formula — epidist_formula","text":"data object class corresponding implemented model. family description response distribution link function used model created using epidist_family(). formula object class stats::formula brms::brmsformula (one can coerced classes). symbolic description model fitted. formula must provided distributional parameter mu, may optionally provided distributional parameters. ... Additional arguments passed fn method.","code":""},{"path":[]},{"path":"https://epidist.epinowcast.org/reference/epidist_formula_model.default.html","id":null,"dir":"Reference","previous_headings":"","what":"Default method for defining a model specific formula — epidist_formula_model.default","title":"Default method for defining a model specific formula — epidist_formula_model.default","text":"Default method defining model specific formula","code":""},{"path":"https://epidist.epinowcast.org/reference/epidist_formula_model.default.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Default method for defining a model specific formula — epidist_formula_model.default","text":"","code":"# Default S3 method epidist_formula_model(data, formula, ...)"},{"path":"https://epidist.epinowcast.org/reference/epidist_formula_model.default.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Default method for defining a model specific formula — epidist_formula_model.default","text":"data object class corresponding implemented model. formula object class stats::formula brms::brmsformula (one can coerced classes). symbolic description model fitted. formula must provided distributional parameter mu, may optionally provided distributional parameters. ... Additional arguments passed fn method.","code":""},{"path":[]},{"path":"https://epidist.epinowcast.org/reference/epidist_formula_model.epidist_latent_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Define the model-specific component of an epidist custom formula — epidist_formula_model.epidist_latent_model","title":"Define the model-specific component of an epidist custom formula — epidist_formula_model.epidist_latent_model","text":"Define model-specific component epidist custom formula","code":""},{"path":"https://epidist.epinowcast.org/reference/epidist_formula_model.epidist_latent_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Define the model-specific component of an epidist custom formula — epidist_formula_model.epidist_latent_model","text":"","code":"# S3 method for class 'epidist_latent_model' epidist_formula_model(data, formula, ...)"},{"path":"https://epidist.epinowcast.org/reference/epidist_formula_model.epidist_latent_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Define the model-specific component of an epidist custom formula — epidist_formula_model.epidist_latent_model","text":"data object class corresponding implemented model. formula object class stats::formula brms::brmsformula (one can coerced classes). symbolic description model fitted. formula must provided distributional parameter mu, may optionally provided distributional parameters. ... Additional arguments passed method.","code":""},{"path":[]},{"path":"https://epidist.epinowcast.org/reference/epidist_model_prior.default.html","id":null,"dir":"Reference","previous_headings":"","what":"Default model specific prior distributions — epidist_model_prior.default","title":"Default model specific prior distributions — epidist_model_prior.default","text":"default, return model specific prior distributions.","code":""},{"path":"https://epidist.epinowcast.org/reference/epidist_model_prior.default.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Default model specific prior distributions — epidist_model_prior.default","text":"","code":"# Default S3 method epidist_model_prior(data, formula, ...)"},{"path":"https://epidist.epinowcast.org/reference/epidist_model_prior.default.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Default model specific prior distributions — epidist_model_prior.default","text":"data object class corresponding implemented model. formula object class stats::formula brms::brmsformula (one can coerced classes). symbolic description model fitted. formula must provided distributional parameter mu, may optionally provided distributional parameters. ... Additional arguments passed fn method.","code":""},{"path":[]},{"path":"https://epidist.epinowcast.org/reference/epidist_model_prior.html","id":null,"dir":"Reference","previous_headings":"","what":"Model specific prior distributions — epidist_model_prior","title":"Model specific prior distributions — epidist_model_prior","text":"function contains brms prior distributions specific particular epidist models e.g. latent_lognormal model.","code":""},{"path":"https://epidist.epinowcast.org/reference/epidist_model_prior.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Model specific prior distributions — epidist_model_prior","text":"","code":"epidist_model_prior(data, ...)"},{"path":"https://epidist.epinowcast.org/reference/epidist_model_prior.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Model specific prior distributions — epidist_model_prior","text":"data object class corresponding implemented model. ... Additional arguments passed fn method.","code":""},{"path":[]},{"path":"https://epidist.epinowcast.org/reference/epidist_prior.html","id":null,"dir":"Reference","previous_headings":"","what":"Define prior distributions using brms defaults, model specific priors, family specific priors, and user provided priors — epidist_prior","title":"Define prior distributions using brms defaults, model specific priors, family specific priors, and user provided priors — epidist_prior","text":"function obtains brms default prior distributions particular model, replaces prior distributions using: Model specific prior distributions epidist_model_prior() Family specific prior distributions epidist_family_prior() User provided prior distributions element list overwrites previous elements, user provided prior distribution highest priority. third stage, prior distribution provided included model, warning shown. prevent warning, pass prior distributions parameters model.","code":""},{"path":"https://epidist.epinowcast.org/reference/epidist_prior.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Define prior distributions using brms defaults, model specific priors, family specific priors, and user provided priors — epidist_prior","text":"","code":"epidist_prior(data, family, formula, prior)"},{"path":"https://epidist.epinowcast.org/reference/epidist_prior.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Define prior distributions using brms defaults, model specific priors, family specific priors, and user provided priors — epidist_prior","text":"data object class corresponding implemented model. family description response distribution link function used model created using epidist_family(). formula symbolic description model fitted created using epidist_formula(). prior One brmsprior objects created brms::set_prior() related functions. priors passed epidist_prior() prior argument.","code":""},{"path":[]},{"path":"https://epidist.epinowcast.org/reference/epidist_stancode.default.html","id":null,"dir":"Reference","previous_headings":"","what":"Default method for defining model specific Stan code — epidist_stancode.default","title":"Default method for defining model specific Stan code — epidist_stancode.default","text":"Default method defining model specific Stan code","code":""},{"path":"https://epidist.epinowcast.org/reference/epidist_stancode.default.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Default method for defining model specific Stan code — epidist_stancode.default","text":"","code":"# Default S3 method epidist_stancode(data, ...)"},{"path":"https://epidist.epinowcast.org/reference/epidist_stancode.default.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Default method for defining model specific Stan code — epidist_stancode.default","text":"data object class corresponding implemented model. ... Additional arguments passed fn method.","code":""},{"path":[]},{"path":"https://epidist.epinowcast.org/reference/epidist_stancode.html","id":null,"dir":"Reference","previous_headings":"","what":"Define model specific Stan code — epidist_stancode","title":"Define model specific Stan code — epidist_stancode","text":"function used within epidist() create custom Stan code injected brms via stanvars argument. unlikely user need function, export nonetheless transparent exactly happening inside call epidist().","code":""},{"path":"https://epidist.epinowcast.org/reference/epidist_stancode.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Define model specific Stan code — epidist_stancode","text":"","code":"epidist_stancode(data, ...)"},{"path":"https://epidist.epinowcast.org/reference/epidist_stancode.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Define model specific Stan code — epidist_stancode","text":"data object class corresponding implemented model. ... Additional arguments passed fn method.","code":""},{"path":[]},{"path":"https://epidist.epinowcast.org/reference/is_epidist_latent_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if data has the epidist_latent_model class — is_epidist_latent_model","title":"Check if data has the epidist_latent_model class — is_epidist_latent_model","text":"Check data epidist_latent_model class","code":""},{"path":"https://epidist.epinowcast.org/reference/is_epidist_latent_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if data has the epidist_latent_model class — is_epidist_latent_model","text":"","code":"is_epidist_latent_model(data)"},{"path":"https://epidist.epinowcast.org/reference/is_epidist_latent_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if data has the epidist_latent_model class — is_epidist_latent_model","text":"data object","code":""},{"path":[]},{"path":"https://epidist.epinowcast.org/reference/is_epidist_linelist_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if data has the epidist_linelist_data class — is_epidist_linelist_data","title":"Check if data has the epidist_linelist_data class — is_epidist_linelist_data","text":"Check data epidist_linelist_data class","code":""},{"path":"https://epidist.epinowcast.org/reference/is_epidist_linelist_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if data has the epidist_linelist_data class — is_epidist_linelist_data","text":"","code":"is_epidist_linelist_data(data, ...)"},{"path":"https://epidist.epinowcast.org/reference/is_epidist_linelist_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if data has the epidist_linelist_data class — is_epidist_linelist_data","text":"data data convert ... Additional arguments","code":""},{"path":[]},{"path":"https://epidist.epinowcast.org/reference/is_epidist_naive_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if data has the epidist_naive_model class — is_epidist_naive_model","title":"Check if data has the epidist_naive_model class — is_epidist_naive_model","text":"Check data epidist_naive_model class","code":""},{"path":"https://epidist.epinowcast.org/reference/is_epidist_naive_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if data has the epidist_naive_model class — is_epidist_naive_model","text":"","code":"is_epidist_naive_model(data)"},{"path":"https://epidist.epinowcast.org/reference/is_epidist_naive_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if data has the epidist_naive_model class — is_epidist_naive_model","text":"data object","code":""},{"path":[]},{"path":"https://epidist.epinowcast.org/reference/log_lik_latent_gamma.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the pointwise log likelihood of the latent_gamma family — log_lik_latent_gamma","title":"Calculate the pointwise log likelihood of the latent_gamma family — log_lik_latent_gamma","text":"See brms::log_lik().","code":""},{"path":"https://epidist.epinowcast.org/reference/log_lik_latent_gamma.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the pointwise log likelihood of the latent_gamma family — log_lik_latent_gamma","text":"","code":"log_lik_latent_gamma(i, prep)"},{"path":"https://epidist.epinowcast.org/reference/log_lik_latent_gamma.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the pointwise log likelihood of the latent_gamma family — log_lik_latent_gamma","text":"index observation calculate log likelihood prep result call brms::prepare_predictions()","code":""},{"path":"https://epidist.epinowcast.org/reference/log_lik_latent_lognormal.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the pointwise log likelihood of the latent_gamma family — log_lik_latent_lognormal","title":"Calculate the pointwise log likelihood of the latent_gamma family — log_lik_latent_lognormal","text":"See brms::log_lik().","code":""},{"path":"https://epidist.epinowcast.org/reference/log_lik_latent_lognormal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the pointwise log likelihood of the latent_gamma family — log_lik_latent_lognormal","text":"","code":"log_lik_latent_lognormal(i, prep)"},{"path":"https://epidist.epinowcast.org/reference/log_lik_latent_lognormal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the pointwise log likelihood of the latent_gamma family — log_lik_latent_lognormal","text":"index observation calculate log likelihood prep result call brms::prepare_predictions()","code":""},{"path":"https://epidist.epinowcast.org/reference/new_epidist_latent_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Class constructor for epidist_latent_model objects — new_epidist_latent_model","title":"Class constructor for epidist_latent_model objects — new_epidist_latent_model","text":"Class constructor epidist_latent_model objects","code":""},{"path":"https://epidist.epinowcast.org/reference/new_epidist_latent_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Class constructor for epidist_latent_model objects — new_epidist_latent_model","text":"","code":"new_epidist_latent_model(data)"},{"path":"https://epidist.epinowcast.org/reference/new_epidist_latent_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class constructor for epidist_latent_model objects — new_epidist_latent_model","text":"data object set class epidist_latent_model","code":""},{"path":"https://epidist.epinowcast.org/reference/new_epidist_latent_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Class constructor for epidist_latent_model objects — new_epidist_latent_model","text":"object class epidist_latent_model","code":""},{"path":[]},{"path":"https://epidist.epinowcast.org/reference/new_epidist_linelist_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Class constructor for epidist_linelist_data objects — new_epidist_linelist_data","title":"Class constructor for epidist_linelist_data objects — new_epidist_linelist_data","text":"Class constructor epidist_linelist_data objects","code":""},{"path":"https://epidist.epinowcast.org/reference/new_epidist_linelist_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Class constructor for epidist_linelist_data objects — new_epidist_linelist_data","text":"","code":"new_epidist_linelist_data(data)"},{"path":"https://epidist.epinowcast.org/reference/new_epidist_linelist_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class constructor for epidist_linelist_data objects — new_epidist_linelist_data","text":"data data.frame convert","code":""},{"path":"https://epidist.epinowcast.org/reference/new_epidist_linelist_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Class constructor for epidist_linelist_data objects — new_epidist_linelist_data","text":"object class epidist_linelist_data","code":""},{"path":[]},{"path":"https://epidist.epinowcast.org/reference/new_epidist_naive_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Class constructor for epidist_naive_model objects — new_epidist_naive_model","title":"Class constructor for epidist_naive_model objects — new_epidist_naive_model","text":"Class constructor epidist_naive_model objects","code":""},{"path":"https://epidist.epinowcast.org/reference/new_epidist_naive_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Class constructor for epidist_naive_model objects — new_epidist_naive_model","text":"","code":"new_epidist_naive_model(data)"},{"path":"https://epidist.epinowcast.org/reference/new_epidist_naive_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class constructor for epidist_naive_model objects — new_epidist_naive_model","text":"data object set class epidist_naive_model","code":""},{"path":"https://epidist.epinowcast.org/reference/new_epidist_naive_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Class constructor for epidist_naive_model objects — new_epidist_naive_model","text":"object class epidist_naive_model","code":""},{"path":[]},{"path":"https://epidist.epinowcast.org/reference/posterior_epred_latent_gamma.html","id":null,"dir":"Reference","previous_headings":"","what":"Draws from the expected value of the posterior predictive distribution of the latent_gamma family — posterior_epred_latent_gamma","title":"Draws from the expected value of the posterior predictive distribution of the latent_gamma family — posterior_epred_latent_gamma","text":"See brms::posterior_epred().","code":""},{"path":"https://epidist.epinowcast.org/reference/posterior_epred_latent_gamma.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Draws from the expected value of the posterior predictive distribution of the latent_gamma family — posterior_epred_latent_gamma","text":"","code":"posterior_epred_latent_gamma(prep)"},{"path":"https://epidist.epinowcast.org/reference/posterior_epred_latent_gamma.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Draws from the expected value of the posterior predictive distribution of the latent_gamma family — posterior_epred_latent_gamma","text":"prep result call brms::prepare_predictions","code":""},{"path":"https://epidist.epinowcast.org/reference/posterior_epred_latent_lognormal.html","id":null,"dir":"Reference","previous_headings":"","what":"Draws from the expected value of the posterior predictive distribution of the latent_gamma family — posterior_epred_latent_lognormal","title":"Draws from the expected value of the posterior predictive distribution of the latent_gamma family — posterior_epred_latent_lognormal","text":"See brms::posterior_epred().","code":""},{"path":"https://epidist.epinowcast.org/reference/posterior_epred_latent_lognormal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Draws from the expected value of the posterior predictive distribution of the latent_gamma family — posterior_epred_latent_lognormal","text":"","code":"posterior_epred_latent_lognormal(prep)"},{"path":"https://epidist.epinowcast.org/reference/posterior_epred_latent_lognormal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Draws from the expected value of the posterior predictive distribution of the latent_gamma family — posterior_epred_latent_lognormal","text":"prep result call brms::prepare_predictions","code":""},{"path":"https://epidist.epinowcast.org/reference/posterior_predict_latent_gamma.html","id":null,"dir":"Reference","previous_headings":"","what":"Draws from the posterior predictive distribution of the latent_gamma family — posterior_predict_latent_gamma","title":"Draws from the posterior predictive distribution of the latent_gamma family — posterior_predict_latent_gamma","text":"See brms::posterior_predict().","code":""},{"path":"https://epidist.epinowcast.org/reference/posterior_predict_latent_gamma.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Draws from the posterior predictive distribution of the latent_gamma family — posterior_predict_latent_gamma","text":"","code":"posterior_predict_latent_gamma(i, prep, ...)"},{"path":"https://epidist.epinowcast.org/reference/posterior_predict_latent_gamma.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Draws from the posterior predictive distribution of the latent_gamma family — posterior_predict_latent_gamma","text":"index observation predict prep result call brms::posterior_predict() ... Additional arguments","code":""},{"path":"https://epidist.epinowcast.org/reference/posterior_predict_latent_lognormal.html","id":null,"dir":"Reference","previous_headings":"","what":"Draws from the posterior predictive distribution of the latent_lognormal family — posterior_predict_latent_lognormal","title":"Draws from the posterior predictive distribution of the latent_lognormal family — posterior_predict_latent_lognormal","text":"See brms::posterior_predict().","code":""},{"path":"https://epidist.epinowcast.org/reference/posterior_predict_latent_lognormal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Draws from the posterior predictive distribution of the latent_lognormal family — posterior_predict_latent_lognormal","text":"","code":"posterior_predict_latent_lognormal(i, prep, ...)"},{"path":"https://epidist.epinowcast.org/reference/posterior_predict_latent_lognormal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Draws from the posterior predictive distribution of the latent_lognormal family — posterior_predict_latent_lognormal","text":"index observation predict prep result call brms::posterior_predict() ... Additional arguments","code":""},{"path":"https://epidist.epinowcast.org/reference/predict_delay_parameters.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract samples of the delay distribution parameters — predict_delay_parameters","title":"Extract samples of the delay distribution parameters — predict_delay_parameters","text":"Extract samples delay distribution parameters","code":""},{"path":"https://epidist.epinowcast.org/reference/predict_delay_parameters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract samples of the delay distribution parameters — predict_delay_parameters","text":"","code":"predict_delay_parameters(fit, newdata = NULL, ...)  predict_dpar(fit, newdata = NULL, ...)"},{"path":"https://epidist.epinowcast.org/reference/predict_delay_parameters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract samples of the delay distribution parameters — predict_delay_parameters","text":"fit model fit epidist() newdata optional data.frame evaluate predictions. NULL (default), original data model used. NA values within factors (excluding grouping variables) interpreted dummy variables factor zero. allows, instance, make predictions grand mean using sum coding. NA values within grouping variables treated new level. ... Additional arguments passed brms::prepare_predictions()","code":""},{"path":[]},{"path":"https://epidist.epinowcast.org/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. brms bf, lognormal, weibull stats Gamma","code":""},{"path":"https://epidist.epinowcast.org/reference/sierra_leone_ebola_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Ebola linelist data from Fang et al. (2016) — sierra_leone_ebola_data","title":"Ebola linelist data from Fang et al. (2016) — sierra_leone_ebola_data","text":"Linelist data Ebola virus collected Sierra Leone. use data work, please cite corresponding paper.","code":""},{"path":"https://epidist.epinowcast.org/reference/sierra_leone_ebola_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ebola linelist data from Fang et al. (2016) — sierra_leone_ebola_data","text":"","code":"sierra_leone_ebola_data"},{"path":"https://epidist.epinowcast.org/reference/sierra_leone_ebola_data.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Ebola linelist data from Fang et al. (2016) — sierra_leone_ebola_data","text":"tibble 8,358 rows 8 columns: id Unique identification number case name Name character, omitted age Age numeric sex Sex character, either \"F\", \"M\" NA date_of_symptom_onset date symptoms began date_of_sample_tested date sample tested district district (ADM2) chiefdom chiefdom (ADM3)","code":""},{"path":"https://epidist.epinowcast.org/reference/sierra_leone_ebola_data.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Ebola linelist data from Fang et al. (2016) — sierra_leone_ebola_data","text":"https://www.pnas.org/doi/full/10.1073/pnas.1518587113","code":""},{"path":"https://epidist.epinowcast.org/reference/simulate_exponential_cases.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate exponential cases — simulate_exponential_cases","title":"Simulate exponential cases — simulate_exponential_cases","text":"function simulates cases exponential distribution. user may specify rate parameter r, sample size, upper bound survival time. rate parameter 0, function defaults uniform distribution.","code":""},{"path":"https://epidist.epinowcast.org/reference/simulate_exponential_cases.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate exponential cases — simulate_exponential_cases","text":"","code":"simulate_exponential_cases(r = 0.2, sample_size = 10000, seed, t = 30)"},{"path":"https://epidist.epinowcast.org/reference/simulate_exponential_cases.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate exponential cases — simulate_exponential_cases","text":"r exponential growth rate parameter. Defaults 0.2. sample_size number cases simulate. Defaults 10000. seed random seed used simulation process. t Upper bound survival time. Defaults 30.","code":""},{"path":"https://epidist.epinowcast.org/reference/simulate_exponential_cases.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate exponential cases — simulate_exponential_cases","text":"data.frame two columns: case (case number) ptime (primary event time).","code":""},{"path":[]},{"path":"https://epidist.epinowcast.org/reference/simulate_gillespie.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate cases from a stochastic SIR model — simulate_gillespie","title":"Simulate cases from a stochastic SIR model — simulate_gillespie","text":"function simulates cases stochastic SIR model. user may specify initial epidemic growth rate \\(r\\), rate recovery gamma \\(\\gamma\\), initial number infected cases \\(I_0\\), total population size \\(N\\).","code":""},{"path":"https://epidist.epinowcast.org/reference/simulate_gillespie.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate cases from a stochastic SIR model — simulate_gillespie","text":"","code":"simulate_gillespie(r = 0.2, gamma = 1/7, I0 = 50, N = 10000, seed)"},{"path":"https://epidist.epinowcast.org/reference/simulate_gillespie.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate cases from a stochastic SIR model — simulate_gillespie","text":"r initial epidemic growth rate. Defaults 0.2. gamma rate recovery. Defaults 1/7. I0 initial number infected people. Defaults 50. N total population size. Defaults 10000. seed random seed used simulation process.","code":""},{"path":"https://epidist.epinowcast.org/reference/simulate_gillespie.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate cases from a stochastic SIR model — simulate_gillespie","text":"data.frame two columns: case (case number) ptime (primary event time).","code":""},{"path":[]},{"path":"https://epidist.epinowcast.org/reference/simulate_secondary.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate secondary events based on a delay distribution — simulate_secondary","title":"Simulate secondary events based on a delay distribution — simulate_secondary","text":"function simulates secondary events based given delay distribution. input dataset primary event times column named ptime.","code":""},{"path":"https://epidist.epinowcast.org/reference/simulate_secondary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate secondary events based on a delay distribution — simulate_secondary","text":"","code":"simulate_secondary(data, dist = rlnorm, ...)"},{"path":"https://epidist.epinowcast.org/reference/simulate_secondary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate secondary events based on a delay distribution — simulate_secondary","text":"data data frame primary event times. dist delay distribution used. Defaults rlnorm(). ... Arguments passed delay distribution function.","code":""},{"path":"https://epidist.epinowcast.org/reference/simulate_secondary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate secondary events based on a delay distribution — simulate_secondary","text":"data.frame augments data two new columns: delay (secondary event latency) stime (time secondary event).","code":""},{"path":[]},{"path":"https://epidist.epinowcast.org/reference/simulate_uniform_cases.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate cases from a uniform distribution — simulate_uniform_cases","title":"Simulate cases from a uniform distribution — simulate_uniform_cases","text":"function simulates cases uniform distribution, primary event times uniformly distributed 0 t.","code":""},{"path":"https://epidist.epinowcast.org/reference/simulate_uniform_cases.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate cases from a uniform distribution — simulate_uniform_cases","text":"","code":"simulate_uniform_cases(sample_size = 1000, t = 60)"},{"path":"https://epidist.epinowcast.org/reference/simulate_uniform_cases.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate cases from a uniform distribution — simulate_uniform_cases","text":"sample_size number cases simulate. t Upper bound uniform distribution generate primary event times.","code":""},{"path":"https://epidist.epinowcast.org/reference/simulate_uniform_cases.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate cases from a uniform distribution — simulate_uniform_cases","text":"data.frame two columns: case (case number) ptime (primary event time).","code":""},{"path":[]},{"path":"https://epidist.epinowcast.org/news/index.html","id":"epidist-010","dir":"Changelog","previous_headings":"","what":"epidist 0.1.0","title":"epidist 0.1.0","text":"first minor release epidist intended early test users package. features may change, package marked experimental. expect release stable 1.0.0 version shortly. epidist package implements models epidemiological delay distributions. uses brms perform Bayesian inference. One data format currently available: linelist data format Two statistical models currently available: naive model: models delay directly using brms latent model: implements latent variable model correct biases data package readily extensible additional models via S3 class based system. particular, model fitting [epidist()] possible using S3 classes custom: Families Formula Prior distributions Stan code provide functionality post-processing. Alternatively, users may directly use tidybayes specific families. Three vignettes available. also frequently asked questions section.","code":""}]
